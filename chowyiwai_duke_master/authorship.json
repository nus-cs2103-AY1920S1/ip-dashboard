[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 46,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "# Duke - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Duke is a task manager that helps you keep track of your tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "## Command Format"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be supplied by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "* Items in round brackets are optional."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### Feature 1: Add a to-do task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "You can add a *Todo* task to the list. "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "This task type is only associated with a description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "There are no time constraints for such tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### Feature 2: Add a tasks with a deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "You can add a *Deadline* task to the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "This task type is associated with a description "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "and a deadline by which the task has to be completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### Feature 3: Add an event task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "You can add an *Event* task to the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "This task type is associated with a starting date and"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "optionally, a starting time, ending date and time."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### Feature 4: Delete a task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "You can delete a task from the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### Feature 5: Mark a task as done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "You can mark a task as done once you have completed it."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### Feature 6: List tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "You can view all tasks that are currently in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### Feature 7: Find a task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "You can find a task that is in the list using keywords."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### Feature 8: Sort tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "You can sort the tasks in the list in the order *Todo*, *Deadline* and *Event*."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "*Deadline* and *Event* tasks are sorted in chronological order."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### Feature 9: Exit Duke"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "You can exit the application when you have finished managing your tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### `todo` - Adds *Todo* task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Adds a *Todo* task to the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Format: `todo TASK_DESCRIPTION`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "`todo read book`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    [T][Not Done] read book"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### `deadline` - Adds *Deadline* task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Adds a *Deadline* task to the list. A date for the deadline must be provided"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "but a time is optional."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "The date must be in the form `dd/mm/yyyy` "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "and the time, if given, must be in the 24-hour time notation `hhmm`."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Format: `deadline TASK_DESCRIPTION \\by DATE (TIME)`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "`deadline complete assignment \\by 15/09/2019 1300`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    [D][Not Done] complete assignment (by: 15th of SEPTEMBER 2019, 1pm)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### `event` - Adds *Event* task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Adds a *Event* task to the list. A starting date for the event must be provided"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "but a starting time, ending date and ending time is optional. The date must be in the form `dd/mm/yyyy` "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "and the time must be in the 24-hour time notation `hhmm`."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Format: `event TASK_DESCRIPTION /at START_DATE (START_TIME /to END_DATE END_TIME)`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "`event camp /at 16/09/2019 1300 /to 17/09/2019 0800`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    [E][Not Done] camp (at: 16th of SEPTEMBER 2019, 1pm to 17th of SEPTEMBER 2019, 8am)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### `delete` - Deletes a task"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Deletes a task from the list. The index of the task that you want to delete"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "must be provided."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Format: `delete TASK_INDEX`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    [D][Not Done] complete assignment (by: 15th of SEPTEMBER 2019, 1pm)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### `done` - Marks as done"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Marks a task from the list as completed. The index of the task that you want to mark as done"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "must be provided."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Format: `done TASK_INDEX`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    [E][Done] camp (at: 16th of SEPTEMBER 2019, 1pm to 17th of SEPTEMBER 2019, 8am)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### `list` - Lists all tasks "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Lists all tasks that are in the list. "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    1.[T][Not Done] read book"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    2.[E][Done] camp (at: 16th of SEPTEMBER 2019, 1pm to 17th of SEPTEMBER 2019, 8am)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### `find` - Finds tasks"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Finds all tasks that are in the list that contains the given keyword. "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    1.[T][Not Done] read book"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    2.[D][Not Done] return book (by: 15th of SEPTEMBER 2019)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### `sort` - Sorts tasks"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Find all tasks that are in the list that contains the given keyword. "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Format: `sort`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "`sort`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    1.[T][Not Done] read book"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    2.[T][Done] make poster"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    3.[D][Not Done] return book (by: 15th of SEPTEMBER 2019, 1pm)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    4.[D][Done] assignment (by: 15th of SEPTEMBER 2019, 6pm)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    5.[D][Not Done] study for test (by: 18th of SEPTEMBER 2019)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    6.[E][Not Done] carnival (at: 17th of SEPTEMBER, 8pm to 17th of SEPTEMBER, 10pm)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    7.[E][Not Done] presentation (at: 18th of SEPTEMBER, 9am)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "### `bye` - Exits Duke"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Exits the task manager."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 200,
      "-": 21
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private DialogBox(String text, Image img, Background background, Color textColor) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            dialog.setBackground(background);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            dialog.setTextFill(textColor);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns a \u003ccode\u003eDialogBox\u003c/code\u003e for the user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param text The user\u0027s input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param img The user\u0027s image."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return DialogBox for the user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Color bgColor \u003d Color.rgb(222,246,255, 0.9);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        CornerRadii cornerRadii \u003d new CornerRadii(5);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Background background \u003d new Background(new BackgroundFill(bgColor, cornerRadii, Insets.EMPTY));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Color textColor \u003d Color.rgb(16,19,57);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new DialogBox(text, img, background, textColor);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns a \u003ccode\u003eDialogBox\u003c/code\u003e for Duke."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param text Duke\u0027s response."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param img Duke\u0027s image."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return DialogBox for Duke."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Color color \u003d Color.rgb(255,238,250, 0.9);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        CornerRadii cornerRadii \u003d new CornerRadii(5);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Background background \u003d new Background(new BackgroundFill(color, cornerRadii, Insets.EMPTY));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Color textColor \u003d Color.rgb(57,5,44);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        var db \u003d new DialogBox(text, img, background, textColor);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 89
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a personal assistant chat bot. A \u003ccode\u003eDuke\u003c/code\u003e object corresponds to a specific \u003ccode\u003eStorage\u003c/code\u003e,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * \u003ccode\u003eTaskList\u003c/code\u003e and \u003ccode\u003eUi\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eDuke\u003c/code\u003e."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param filePath Path to file that should be written to and loaded from."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printLoadingErrorMessage(exception);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the welcome message by Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Duke\u0027s welcome message."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getWelcome() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        changeSystemOut(outputStream);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        resetSystemOut(old);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return outputStream.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the response corresponding to the input by the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param input Input command provided by the user."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The response corresponding to the given command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        changeSystemOut(outputStream);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        generateResponse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        resetSystemOut(old);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return outputStream.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void generateResponse(String input) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void changeSystemOut(ByteArrayOutputStream outputStream) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        PrintStream ps \u003d new PrintStream(outputStream);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void resetSystemOut(PrintStream old) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.setOut(old);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 81,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Duke duke \u003d new Duke(\"duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            stage.setTitle(\"Duke Task Manager\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 32
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.Group;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.scene.shape.Ellipse;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Pooh.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Piglet.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public MainWindow() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Assigns the duke variable and creates a dialog box for Duke\u0027s welcome message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param d The duke instance."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            new Group(DialogBox.getDukeDialog(duke.getWelcome(), dukeImage)));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            new Group(DialogBox.getUserDialog(input, userImage)),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            new Group(DialogBox.getDukeDialog(response, dukeImage))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 64
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.SortCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InsufficientDetailsException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a parser that reads and parses raw command strings."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Parses raw commands and returns a type of \u003ccode\u003eCommand\u003c/code\u003e correspondingly."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param rawCommandDetails Details of the command provided by user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return A type of \u003ccode\u003eCommand\u003c/code\u003e that corresponds to the raw command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If the raw commands are invalid, in the wrong format or are lacking required information."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    static Command parse(String rawCommandDetails) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String commandDetails \u003d rawCommandDetails.replaceAll(\"\\\\s+\", \" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String command \u003d commandDetails.split(\" \")[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return bye();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return list();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case \"sort\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return sort();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return delete(commandDetails);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return done(commandDetails);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return find(commandDetails);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return todo(commandDetails);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return deadline(commandDetails);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return event(commandDetails);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InvalidCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private static ExitCommand bye() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private static ListCommand list() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private static SortCommand sort() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new SortCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private static Command delete(String commandDetails) throws InsufficientDetailsException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] commandSplit \u003d commandDetails.split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (commandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InsufficientDetailsException(\"OOPS!!! Please specify a task to delete.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        int index \u003d Integer.parseInt(commandSplit[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new DeleteCommand(index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private static Command done(String commandDetails) throws InsufficientDetailsException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] commandSplit \u003d commandDetails.split(\" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (commandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InsufficientDetailsException(\"OOPS!!! Please specify the task that has been done.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        int index \u003d Integer.parseInt(commandSplit[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new DoneCommand(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private static Command find(String commandDetails) throws InsufficientDetailsException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] commandSplit \u003d commandDetails.split(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (commandSplit.length \u003c 2) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InsufficientDetailsException(\"OOPS!!! Please specify what you want to find.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new FindCommand(commandSplit[1].trim());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private static Command todo(String commandDetails) throws InsufficientDetailsException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskDetailsString;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        taskDetailsString \u003d commandDetails.replaceFirst(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskDetailsString.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InsufficientDetailsException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return new AddTodoCommand(taskDetailsString);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private static Command deadline(String commandDetails) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskDetailsString;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        taskDetailsString \u003d commandDetails.replaceFirst(\"deadline\", \"\").trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new AddDeadlineCommand(taskDetailsString);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private static Command event(String commandDetails) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskDetailsString;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        taskDetailsString \u003d commandDetails.replaceFirst(\"event\", \"\").trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new AddEventCommand(taskDetailsString);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 113
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.StorageException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a storage in the hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to a specific file path that dictates the file that information about the"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * tasks in the \u003ccode\u003eTaskList\u003c/code\u003e should be loaded from and written to every time a change occurs."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eStorage\u003c/code\u003e."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param filePath Path to file that should be written to and loaded from."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Loads the tasks from the file given by the file path."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Stores and returns the tasks within an \u003ccode\u003eArrayList\u003c/code\u003e."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return An \u003ccode\u003eArrayList\u003c/code\u003e containing every \u003ccode\u003eTask\u003c/code\u003e written in the file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If the file path is invalid or there are problems with the data in the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return getTasks(scanner);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new StorageException(\"OOPS!!! Please specify a valid file path.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new StorageException(\"OOPS!!! Something went wrong: \" + exception.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private ArrayList\u003cTask\u003e getTasks(Scanner scanner) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String taskLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String[] taskDetails \u003d taskLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String taskType \u003d getTaskDetail(taskDetails, 0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String taskDoneStatus \u003d getTaskDetail(taskDetails, 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String taskDescription \u003d getTaskDetail(taskDetails, 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Task task \u003d getTask(taskDetails, taskType, taskDescription);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assert (task !\u003d null) : \"Data in file should be stored in the correct format \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                            + \"and should not cause exceptions.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            setTaskDoneStatus(taskDoneStatus, task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String getTaskDetail(String[] taskDetails, int i) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskDetails.length \u003c\u003d i) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return taskDetails[i].trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Task getTask(String[] taskDetails, String taskType, String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return getTodoTask(taskDescription);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return getDeadlineTask(taskDetails, taskDescription);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return getEventTask(taskDetails, taskDescription);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Task getEventTask(String[] taskDetails, String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskStartDate \u003d getTaskDetail(taskDetails, 3);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskStartTime \u003d getTaskDetail(taskDetails, 4);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskEndDate \u003d getTaskDetail(taskDetails, 5);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskEndTime \u003d getTaskDetail(taskDetails, 6);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new Event(taskDescription, new Date(taskStartDate), new Time(taskStartTime),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                new Date(taskEndDate), new Time(taskEndTime));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Todo getTodoTask(String taskDescription) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new Todo(taskDescription);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Task getDeadlineTask(String[] taskDetails, String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskDate \u003d getTaskDetail(taskDetails, 3);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskTime \u003d getTaskDetail(taskDetails, 4);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new Deadline(taskDescription, new Date(taskDate), new Time(taskTime));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Writes the tasks in the \u003ccode\u003eTaskList\u003c/code\u003e to the file given by the file path."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param taskList \u003ccode\u003eTaskList\u003c/code\u003e containing all the tasks."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws StorageException If the file cannot be written to."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void writeToFile(TaskList taskList) throws StorageException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.getList();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                writeTask(writer, task);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new StorageException(\"OOPS!!! Something went wrong: \" + exception.getMessage());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void writeTask(FileWriter writer, Task task) throws IOException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        appendTaskType(task, builder);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        appendTaskStatus(task, builder);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        appendTaskDescription(task, builder);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        appendTaskDetails(task, builder);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        writer.write(builder.toString() + \"\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void appendTaskType(Task task, StringBuilder builder) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        builder.append(task.getType() + \" | \");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void appendTaskStatus(Task task, StringBuilder builder) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            builder.append(\"1 | \");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            builder.append(\"0 | \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void appendTaskDescription(Task task, StringBuilder builder) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        builder.append(task.getDescription());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void appendTaskDetails(Task task, StringBuilder builder) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (task.getType().equals(\"D\")) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            appendDeadlineDetails((Deadline) task, builder);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (task.getType().equals(\"E\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            appendEventDetails((Event) task, builder);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void appendDeadlineDetails(Deadline deadline, StringBuilder builder) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawDate \u003d deadline.getDate().getRawDate();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        builder.append(\" | \" + rawDate);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawTime \u003d deadline.getTime().getRawTime();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawTime !\u003d null) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            builder.append(\" | \" + rawTime);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void appendEventDetails(Event event, StringBuilder builder) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawStartDate \u003d event.getStartDate().getRawDate();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        builder.append(\" | \" + rawStartDate);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawStartTime \u003d event.getStartTime().getRawTime();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawStartTime !\u003d null) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            builder.append(\" | \" + rawStartTime);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        builder.append(\" | \");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawEndDate \u003d event.getEndDate().getRawDate();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawEndDate !\u003d null) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            builder.append(rawEndDate);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawEndTime \u003d event.getEndTime().getRawTime();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawEndTime !\u003d null) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (rawEndDate !\u003d null) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                builder.append(\" | \");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            builder.append(\" \" + rawEndTime);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void setTaskDoneStatus(String taskDoneStatus, Task task) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskDoneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 198
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.TaskComparator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a list that stores every \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Corresponds to an \u003ccode\u003eArrayList\u003c/code\u003e that contains the tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eTaskList\u003c/code\u003e that takes in an \u003ccode\u003eArrayList\u003c/code\u003e that already contains a few tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks List that already contains a few tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eTaskList\u003c/code\u003e that does not take in any parameter."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * A new \u003ccode\u003eArrayList\u003c/code\u003e is created to store tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the list containing the tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The list containing the tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Adds a \u003ccode\u003eTask\u003c/code\u003e to the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param task Task that is to be added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Deletes a \u003ccode\u003eTask\u003c/code\u003e from the list that corresponds to the provided index."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param index Index of task in the list that is to be deleted."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the \u003ccode\u003eTask\u003c/code\u003e in the list that corresponds to the provided index."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param index Index of task in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Task that corresponds to the provided index."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the size of the list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Size of the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 72
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a user interface."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * A \u003ccode\u003eUi\u003c/code\u003e object handles interaction between chat bot and user through printing messages and reading"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * user inputs."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints the welcome logo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void printLogo() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String logo \u003d \"  ___             _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"|   _  \\\\ _    _| |    ___ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"| |  | | |  | | |/ / __ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"| |_| | |_| |   \u003c   __ /\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"|___/ \\\\ _,_ |_|\\\\_\\\\__|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message to greet the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void greetUser() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(\"Hello! I\u0027m Duke Piglet\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(\"What can I do for you?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a welcome message from Duke."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        greetUser();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when the program exitss."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when a task is deleted."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param deletedTask The \u003ccode\u003eTask\u003c/code\u003e that is deleted."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param size Current size of the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printDeleteMessage(Task deletedTask, int size) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(deletedTask.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(\"Now you have \" + size + (size \u003d\u003d 1 ? \" task \" : \" tasks \")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"in the \" + \"list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when a task is marked as done."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param doneTask The \u003ccode\u003eTask\u003c/code\u003e that has been completed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printDoneMessage(Task doneTask) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(doneTask.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when a task is added."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param addedTask The \u003ccode\u003eTask\u003c/code\u003e that is added."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param size Current size of the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printAddTaskMessage(Task addedTask, int size) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(addedTask.toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(\"Now you have \" + size + (size \u003d\u003d 1 ? \" task \" : \" tasks \")"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"in the \" + \"list.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints the list of tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks The current tasks in the list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printListMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            printMessage(i + \". \" + tasks.getTask(i - 1));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when a \u003ccode\u003eFindCommand\u003c/code\u003e is executed."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param matchingTasks Tasks that contain the provided key word."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printFindMessage(ArrayList\u003cTask\u003e matchingTasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        for (Task matchingTask : matchingTasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            printMessage(i + \". \" + matchingTask);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when an exception occurs."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param exception The \u003ccode\u003eException\u003c/code\u003e that has occurred."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printExceptionMessage(DukeException exception) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printMessage(exception.getMessage());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a message when the file in the file path cannot be loaded."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param exception The \u003ccode\u003eException\u003c/code\u003e that has occurred."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printLoadingErrorMessage(DukeException exception) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        printExceptionMessage(exception);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints a customizable message."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param message Message that is to be printed."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 130
    }
  },
  {
    "path": "src/main/java/duke/calendar/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a date. A \u003ccode\u003eDate\u003c/code\u003e object corresponds to a time represented by a day, month and year."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Date implements Comparable\u003cDate\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected String rawDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected int day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected int year;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Month month;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isNull \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eDate\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param rawDate Unprocessed date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws InvalidDateException If provided date is invalid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Date(String rawDate) throws InvalidDateException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.rawDate \u003d rawDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawDate !\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            isNull \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            processDate();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Extracts information about the day, month and year from the raw date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws InvalidDateException If date is in the wrong format or invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected void processDate() throws InvalidDateException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assert isNull \u003d\u003d false : \"A null raw date should not be processed.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] dateComponents \u003d rawDate.split(\"/\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (dateComponents.length \u003c 3) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InvalidDateException(\"OOPS!!! Please specify a date in the \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    + \"form day/month/year. E.g. 2/12/2019\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assignYear(dateComponents[2]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assignMonth(dateComponents[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assignDay(dateComponents[0], dateComponents[1], dateComponents[2]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void assignYear(String rawYear) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        int inputYear \u003d Integer.parseInt(rawYear);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        year \u003d inputYear;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void assignMonth(String rawMonth) throws InvalidDateException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        int inputMonthNum \u003d Integer.parseInt(rawMonth);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (isInvalidMonth(inputMonthNum)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InvalidDateException(\"OOPS!!! Please specify a valid month.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.month \u003d Month.of(inputMonthNum);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void assignDay(String rawDay, String rawMonth, String rawYear) throws InvalidDateException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        int inputDay \u003d Integer.parseInt(rawDay);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        int inputMonthNum \u003d Integer.parseInt(rawMonth);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        int inputYear \u003d Integer.parseInt(rawYear);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (isInvalidDay(inputDay, inputMonthNum, inputYear)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InvalidDateException(\"OOPS!!! Please specify a valid day.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        day \u003d inputDay;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if provided month is invalid."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param inputMonthNum Number corresponding to specific month. E.g. 1 for January, 2 for February, etc."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False if 1 \u003c\u003d inputMonthNum \u003c\u003d 12"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isInvalidMonth(int inputMonthNum) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return inputMonthNum \u003c 1 || inputMonthNum \u003e 12;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if provided day is invalid."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param inputDay Number corresponding to specific day"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param inputMonthNum Number corresponding to specific month. E.g. 1 for January, 2 for February, etc."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param inputYear Number corresponding to year."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if day is invalid for the given month and year."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isInvalidDay(int inputDay, int inputMonthNum, int inputYear) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        switch (inputMonthNum) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 8:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 10:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 12:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return !(inputDay \u003e\u003d 1 \u0026\u0026 inputDay \u003c\u003d 31);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (isLeapYear(inputYear)) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return !(inputDay \u003e\u003d 1 \u0026\u0026 inputDay \u003c\u003d 29);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return !(inputDay \u003e\u003d 1 \u0026\u0026 inputDay \u003c\u003d 28);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 9:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return !(inputDay \u003e\u003d 1 \u0026\u0026 inputDay \u003c\u003d 30);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the provided year is a leap year."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param inputYear Number corresponding to year."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if the year is a leap year."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isLeapYear(int inputYear) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (inputYear % 400 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (inputYear % 100 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (inputYear % 4 \u003d\u003d 0) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the provided raw date is null."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if null was the input to the constructor."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isNull() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return isNull;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the provided raw date."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The raw date."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getRawDate() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return rawDate;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the processed day."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The processed day."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int getDay() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the processed month."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The processed month."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Month getMonth() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return month;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the processed year."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The processed year."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int getYear() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return year;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if ((day % 10) \u003d\u003d 1 \u0026\u0026 day !\u003d 11) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return day + \"st of \" + month.toString() + \" \" + year;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if ((day % 10) \u003d\u003d 2) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return day + \"nd of \" + month.toString() + \" \" + year;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if ((day % 10) \u003d\u003d 3 \u0026\u0026 day !\u003d 13) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return day + \"rd of \" + month.toString() + \" \" + year;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return day + \"th of \" + month.toString() + \" \" + year;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (!(o instanceof Date)) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Date otherDate \u003d (Date) o;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            boolean sameDay \u003d (day \u003d\u003d otherDate.getDay());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            boolean sameMonth \u003d (month.equals(otherDate.getMonth()));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            boolean sameYear \u003d (year \u003d\u003d otherDate.getYear());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return sameDay \u0026\u0026 sameMonth \u0026\u0026 sameYear;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareDays(int otherDay) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return day - otherDay;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareMonths(Month otherMonth) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return month.compareTo(otherMonth);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareYears(int otherYear) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return year - otherYear;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Compares this \u003ccode\u003eDate\u003c/code\u003e with another."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param otherDate The other date to be compared with."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return A negative integer, zero, or a positive integer as this date is less than,"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     *     equal to, or greater than the specified date."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int compareTo(Date otherDate) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (this.equals(otherDate)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (otherDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (compareYears(otherDate.getYear()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (compareMonths(otherDate.getMonth()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return compareDays(otherDate.getDay());"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return compareMonths(otherDate.getMonth());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return compareYears(otherDate.getYear());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 229
    }
  },
  {
    "path": "src/main/java/duke/calendar/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InvalidTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a time. A \u003ccode\u003eTime\u003c/code\u003e object corresponds to a specific hour and minute."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Time implements Comparable\u003cTime\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected String rawTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isPastNoon \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected int hour;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected int minutes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isNull \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eTime\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param rawTime Unprocessed time"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws InvalidTimeException If provided time is invalid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Time(String rawTime) throws InvalidTimeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.rawTime \u003d rawTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawTime !\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            isNull \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            processTime();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Extracts information about the hour and minute from the raw time."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws InvalidTimeException If time is in the wrong format or invalid."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected void processTime() throws InvalidTimeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assert (isNull \u003d\u003d false) : \"A null raw time should not be processed.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (isInvalidTime(rawTime)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InvalidTimeException("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                \"OOPS!!! Please specify a valid time. \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    + \"Also ensure that you have specified the time in 24-hour clock convention E.g. 1800 \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assignHour();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assignMinutes();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void assignHour() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        hour \u003d Integer.parseInt(rawTime.substring(0, 2));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (hour \u003e 11) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            isPastNoon \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            hour \u003d hour % 12;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (hour \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            hour \u003d 12;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void assignMinutes() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        minutes \u003d Integer.parseInt(rawTime.substring(2));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if provided time is invalid."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Both the hour and minute component of the time must be valid for the time to be valid."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param rawTime Unprocessed time with 4 digits, 2 to represent the hour and the other 2 to represent the minute."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False if the provided time is in the correct format and 0 \u003c\u003d hour \u003c\u003d 23 and 0 \u003c\u003d minute \u003c\u003d 59."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isInvalidTime(String rawTime) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawTime.length() \u003c 4) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            int inputHour  \u003d Integer.parseInt(rawTime.substring(0, 2));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            int inputMinutes \u003d Integer.parseInt(rawTime.substring(2));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return inputHour \u003e 23 || inputMinutes \u003e 59;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the provided raw time is null."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if null was the input to the constructor."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isNull() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return isNull;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the provided raw time."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The raw time."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getRawTime() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return rawTime;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the processed hour."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The processed hour."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int getHour() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return hour;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the processed minutes."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return The processed minutes."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int getMinutes() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return minutes;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns if the time is past noon."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if the time is past noon."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean getIsPastNoon() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return isPastNoon;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (minutes \u003d\u003d 0) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return hour + (isPastNoon ? \"pm\" : \"am\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return hour + \":\" + (minutes \u003c 10 ? \"0\" + minutes : minutes) + (isPastNoon ? \"pm\" : \"am\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (!(o instanceof Time)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Time otherTime \u003d (Time) o;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            boolean sameHour \u003d (hour \u003d\u003d otherTime.getHour());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            boolean sameMinutes \u003d (minutes \u003d\u003d otherTime.getMinutes());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            boolean sameIsPastNoon \u003d (isPastNoon \u003d\u003d otherTime.getIsPastNoon());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return sameHour \u0026\u0026 sameMinutes \u0026\u0026 sameIsPastNoon;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareHour(int otherHour) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return (hour % 12) - (otherHour % 12);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareMinutes(int otherMinutes) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return minutes - otherMinutes;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareIsPastNoon(boolean otherIsPastNoon) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (isPastNoon \u0026\u0026 otherIsPastNoon) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (!isPastNoon) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Compares this \u003ccode\u003eTime\u003c/code\u003e with another."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param otherTime The other time to be compared with."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return A negative integer, zero, or a positive integer as this time is less than,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     *     equal to, or greater than the specified time."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int compareTo(Time otherTime) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (this.equals(otherTime)) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (otherTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (compareIsPastNoon(otherTime.getIsPastNoon()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (compareHour(otherTime.getHour()) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return compareMinutes(otherTime.getMinutes());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return compareHour(otherTime.getHour());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return compareIsPastNoon(otherTime.getIsPastNoon());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 177
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InsufficientDetailsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InvalidTimeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that adds a new \u003ccode\u003eDeadline\u003c/code\u003e object to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    String details;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003cCode\u003eAddDeadlineCommand\u003c/Code\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param details The unprocessed details of the \u003ccode\u003eDeadline\u003c/code\u003e task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public AddDeadlineCommand(String details) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Creates a  new \u003ccode\u003eDeadline\u003c/code\u003e object and adds it to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Calls methods in \u003ccode\u003eStorage\u003c/code\u003e and \u003ccode\u003eUi\u003c/code\u003e to write the updated \u003ccode\u003eTaskList\u003c/code\u003e to hard"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * disk and print message to console respectively."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If provided details are insufficient or invalid."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] taskDetails \u003d getTaskDetails();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (details.length() \u003d\u003d 0 || taskDetails[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InsufficientDetailsException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskDetails.length \u003c 2 || taskDetails[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InsufficientDetailsException(\"OOPS!!! The date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] taskSpecifics \u003d getTaskSpecifics(taskDetails);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskDescription \u003d getDescription(taskDetails);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Date taskDate \u003d getDate(taskSpecifics);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Time taskTime \u003d getTime(taskSpecifics);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Deadline deadline \u003d new Deadline(taskDescription, taskDate, taskTime);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printAddTaskMessage(deadline, tasks.getSize());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        updateStorage(tasks, ui, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String[] getTaskDetails() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return details.split(\"/by\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String[] getTaskSpecifics(String[] taskDetails) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return taskDetails[1].trim().split(\" \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String getDescription(String[] taskDetails) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return taskDetails[0].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Date getDate(String[] taskSpecifics) throws InvalidDateException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawTaskDate \u003d getRawTaskDate(taskSpecifics);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new Date(rawTaskDate);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Time getTime(String[] taskSpecifics) throws InvalidTimeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawTaskTime \u003d getRawTaskTime(taskSpecifics);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new Time(rawTaskTime);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String getRawTaskDate(String[] taskSpecifics) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return taskSpecifics[0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String getRawTaskTime(String[] taskSpecifics) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawTaskTime;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskSpecifics.length \u003c 2 || taskSpecifics[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            rawTaskTime \u003d null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            rawTaskTime \u003d taskSpecifics[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return rawTaskTime;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void updateStorage(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns unprocessed details."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Unprocessed details."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof AddDeadlineCommand) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            AddDeadlineCommand addDeadlineCommand \u003d (AddDeadlineCommand) o;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return addDeadlineCommand.getDetails().equals(details);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 130
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InsufficientDetailsException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InvalidTimeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that adds a new \u003ccode\u003eEvent\u003c/code\u003e object to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    String details;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003cCode\u003eAddEventCommand\u003c/Code\u003e."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param details The unprocessed details of the \u003ccode\u003eEvent\u003c/code\u003e task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public AddEventCommand(String details) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Creates a  new \u003ccode\u003eEvent\u003c/code\u003e object and adds it to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Calls methods in \u003ccode\u003eStorage\u003c/code\u003e and \u003ccode\u003eUi\u003c/code\u003e to write the updated \u003ccode\u003eTaskList\u003c/code\u003e to hard"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * disk and print message to console respectively."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If provided details are insufficient or invalid."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] taskDetails \u003d getTaskDetails();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (details.length() \u003d\u003d 0 || taskDetails[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InsufficientDetailsException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskDetails.length \u003c 2 || taskDetails[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InsufficientDetailsException(\"OOPS!!! The date/time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskDescription \u003d getDescription(taskDetails);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] taskSpecifics \u003d getTaskSpecifics(taskDetails);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] rawStarts \u003d getRawStarts(taskSpecifics);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Date startDate \u003d getStartDate(rawStarts);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Time startTime \u003d getStartTime(rawStarts);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] rawEnds \u003d getRawEnds(taskSpecifics);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Date endDate \u003d getEndDate(rawEnds);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Time endTime \u003d getEndTime(rawEnds);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Event event \u003d new Event(taskDescription, startDate, startTime, endDate, endTime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        updateStorage(tasks, ui, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printAddTaskMessage(event, tasks.getSize());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String[] getTaskDetails() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return details.split(\"/at\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String getDescription(String[] taskDetails) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return taskDetails[0].trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String[] getTaskSpecifics(String[] taskDetails) throws InsufficientDetailsException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String[] taskSpecifics \u003d taskDetails[1].trim().split(\"/to\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskSpecifics[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InsufficientDetailsException(\"OOPS!!! The starting date/time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return taskSpecifics;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String[] getRawStarts(String[] taskSpecifics) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return taskSpecifics[0].trim().split(\" \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String getRawStartDate(String[] rawStarts) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return rawStarts[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String getRawStartTime(String[] rawStarts) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawStarts.length \u003e\u003d 2 \u0026\u0026 rawStarts[1].trim().length() !\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return rawStarts[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String[] getRawEnds(String[] taskSpecifics) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskSpecifics.length \u003e 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return taskSpecifics[1].trim().split(\" \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new String[0];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String getRawEndDate(String[] rawEnds) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawEnds.length \u003e 0) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return rawEnds[0];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private String getRawEndTime(String[] rawEnds) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (rawEnds.length \u003e\u003d 2 \u0026\u0026 rawEnds[1].trim().length() !\u003d 0) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return rawEnds[1];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Date getStartDate(String[] rawStarts) throws InvalidDateException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawStartDate \u003d getRawStartDate(rawStarts);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new Date(rawStartDate);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Time getStartTime(String[] rawStarts) throws InvalidTimeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawStartTime \u003d getRawStartTime(rawStarts);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new Time(rawStartTime);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Date getEndDate(String[] rawEnds) throws InvalidDateException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawEndDate \u003d getRawEndDate(rawEnds);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new Date(rawEndDate);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private Time getEndTime(String[] rawEnds) throws InvalidTimeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String rawEndTime \u003d getRawEndTime(rawEnds);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return new Time(rawEndTime);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void updateStorage(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns unprocessed details."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Unprocessed details."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof AddEventCommand) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            AddEventCommand addEventCommand \u003d (AddEventCommand) o;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return addEventCommand.getDetails().equals(details);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 172
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InsufficientDetailsException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that adds a new \u003ccode\u003eTodo\u003c/code\u003e object to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    String details;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003cCode\u003eAddTodoCommand\u003c/Code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param details The unprocessed details of the \u003ccode\u003eTodo\u003c/code\u003e task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public AddTodoCommand(String details) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Creates a  new \u003ccode\u003eTodo\u003c/code\u003e object and adds it to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Calls methods in \u003ccode\u003eStorage\u003c/code\u003e and \u003ccode\u003eUi\u003c/code\u003e to write the updated \u003ccode\u003eTaskList\u003c/code\u003e to hard"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * disk and print message to console respectively."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws InsufficientDetailsException If provided details are insufficient."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InsufficientDetailsException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (details.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InsufficientDetailsException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Todo todo \u003d new Todo(details);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        tasks.addTask(todo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        updateStorage(tasks, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printAddTaskMessage(todo, tasks.getSize());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void updateStorage(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns unprocessed details."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Unprocessed details."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof AddTodoCommand) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            AddTodoCommand addTodoCommand \u003d (AddTodoCommand) o;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return addTodoCommand.getDetails().equals(details);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 80
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Abstract parent class of all specific types of \u003ccode\u003eCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to an action that can be executed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Performs an action corresponding to the specific \u003ccode\u003eCommand\u003c/code\u003e\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws DukeException If provided details are insufficient or invalid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineComparator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class DeadlineComparator implements Comparator\u003cDeadline\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Compares deadline tasks according to chronological order."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param deadlineOne First deadline task to be compared."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param deadlineTwo Second deadline task to be compared."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Returns a negative integer, zero, or a positive integer as the first deadline is less than,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     *     equal to, or greater than the second."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int compare(Deadline deadlineOne, Deadline deadlineTwo) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (deadlineOne.equals(deadlineTwo)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return compareChronologicalOrder(deadlineOne, deadlineTwo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareChronologicalOrder(Deadline deadlineOne, Deadline deadlineTwo) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Date dateOne \u003d deadlineOne.getDate();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Date dateTwo \u003d deadlineTwo.getDate();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (dateOne.compareTo(dateTwo) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return compareTime(deadlineOne, deadlineTwo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return dateOne.compareTo(dateTwo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareTime(Deadline deadlineOne, Deadline deadlineTwo) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Time timeOne \u003d deadlineOne.getTime();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Time timeTwo \u003d deadlineTwo.getTime();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (timeOne \u003d\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return timeOne.compareTo(timeTwo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InvalidDetailException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that deletes a \u003ccode\u003eTask\u003c/code\u003e from the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003cCode\u003eDeleteCommand\u003c/Code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Deletes a  \u003ccode\u003eTask\u003c/code\u003e object in the \u003ccode\u003eTaskList\u003c/code\u003e that corresponds to the provided index."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Calls methods in \u003ccode\u003eStorage\u003c/code\u003e and \u003ccode\u003eUi\u003c/code\u003e to write the updated \u003ccode\u003eTaskList\u003c/code\u003e to hard"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * disk and print message to console respectively."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws InvalidDetailException If provided index is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidDetailException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (index \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InvalidDetailException(\"OOPS!!! There is no such task in the list to delete.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        int originalTaskSize \u003d tasks.getSize();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        final Task deletedTask \u003d tasks.getTask(index - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        tasks.deleteTask(index - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assert tasks.getSize() \u003d\u003d originalTaskSize - 1 : \"Supposed to return true as a task should have been deleted.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        updateStorage(tasks, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printDeleteMessage(deletedTask, tasks.getSize());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void updateStorage(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns provided index."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Provided index."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            DeleteCommand deleteCommand \u003d (DeleteCommand) o;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return deleteCommand.getIndex() \u003d\u003d index;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 81
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.InvalidDetailException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that marks a \u003ccode\u003eTask\u003c/code\u003e in the \u003ccode\u003eTaskList\u003c/code\u003e as completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003cCode\u003eDoneCommand\u003c/Code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param index The index of the \u003ccode\u003eTask\u003c/code\u003e in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Marks a  \u003ccode\u003eTask\u003c/code\u003e object in the \u003ccode\u003eTaskList\u003c/code\u003e that corresponds to the provided index as"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * completed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Calls methods in \u003ccode\u003eStorage\u003c/code\u003e and \u003ccode\u003eUi\u003c/code\u003e to write the updated \u003ccode\u003eTaskList\u003c/code\u003e to hard"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * disk and print message to console respectively."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @throws InvalidDetailException If provided index is invalid."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidDetailException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (index \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            throw new InvalidDetailException(\"OOPS!!! There is no such task in the list to mark as done.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Task doneTask \u003d tasks.getTask(index - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assert doneTask.isDone() \u003d\u003d true : \"Supposed to return true as markAsDone() function should have \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                + \"marked the task as done.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        updateStorage(tasks, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printDoneMessage(doneTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void updateStorage(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns provided index."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Provided index."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof DoneCommand) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            DoneCommand doneCommand \u003d (DoneCommand) o;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return doneCommand.getIndex() \u003d\u003d index;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 82
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that closes the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints an exit message and closes the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        delay.setOnFinished(event -\u003e Platform.exit());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        delay.play();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof ExitCommand) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 52
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that finds all tasks that contain a given key word."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    String details;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eFindCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public FindCommand(String details) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Finds all tasks in the \u003ccode\u003eTaskList\u003c/code\u003e with descriptions containing the provided key word."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d getMatchingTasks(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printFindMessage(matchingTasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private ArrayList\u003cTask\u003e getMatchingTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Task currentTask \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String taskDescription \u003d currentTask.getDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (taskDescription.contains(details)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                matchingTasks.add(currentTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 54
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that prints every \u003ccode\u003eTask\u003c/code\u003e object in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eListCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Prints every \u003ccode\u003eTask\u003c/code\u003e object in the \u003ccode\u003eTaskList\u003c/code\u003e using a method in \u003ccode\u003eUi\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ui.printListMessage(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (o instanceof ListCommand) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 46
    }
  },
  {
    "path": "src/main/java/duke/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.TaskComparator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eSortCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public SortCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Sorts the list according to task type and in chronological order."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that handles user input and output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that handles writing and loading of information to hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Collections.sort(tasks.getList(), new TaskComparator());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        updateStorage(tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        listCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private void updateStorage(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the current \u003ccode\u003eCommand\u003c/code\u003e is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 48
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a checked \u003ccode\u003eException\u003c/code\u003e."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eDukeException\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InsufficientDetailsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class InsufficientDetailsException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public InsufficientDetailsException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class InvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public InvalidDateException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDetailException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class InvalidDetailException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public InvalidDetailException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class InvalidTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public InvalidTimeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/StorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class StorageException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public StorageException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 9
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e with a deadline. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a description about"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * the \u003ccode\u003eTask\u003c/code\u003e and the \u003ccode\u003eDate\u003c/code\u003e and optionally, the \u003ccode\u003eTime\u003c/code\u003e at which it is due."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Time time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eDeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param description Details about the \u003ccode\u003eDeadline\u003c/code\u003e task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param date Date at which the task is due."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param time Time at which the task is due."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Deadline(String description, Date date, Time time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the date at which the task is due."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \u003ccode\u003eDate\u003c/code\u003e at which the task is due."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the time at which the task is due."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \u003ccode\u003eTime\u003c/code\u003e at which the task is due."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Time getTime() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the first letter of the task type."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \"D\"."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + (time.isNull() ? \"\" : \", \" + time) + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e that is an event. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a description about"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * the \u003ccode\u003eTask\u003c/code\u003e, the starting \u003ccode\u003eDate\u003c/code\u003e and optionally, starting \u003ccode\u003eTime\u003c/code\u003e, ending"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * \u003ccode\u003eDate\u003c/code\u003e and \u003ccode\u003eTime\u003c/code\u003e of the event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Date startDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Time startTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Date endDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected Time endTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eEvent\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param description Details about the \u003ccode\u003eEvent\u003c/code\u003e task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param startDate Date on which the event starts."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param startTime Time at which the event starts."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param endDate Date on which the event ends."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param endTime Time at which the event ends."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Event(String description, Date startDate, Time startTime, Date endDate, Time endTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the starting date of the event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \u003ccode\u003eDate\u003c/code\u003e on which the event starts."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Date getStartDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the starting time of the event."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \u003ccode\u003eTime\u003c/code\u003e at which the event starts."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Time getStartTime() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the ending date of the event."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \u003ccode\u003eDate\u003c/code\u003e on which the event ends."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Date getEndDate() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the ending time of the event."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \u003ccode\u003eTime\u003c/code\u003e at which the event end."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Time getEndTime() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the first letter of the task type."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \"E\"."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        builder.append(\"[E]\" + super.toString() + \" (at: \" + startDate + (startTime.isNull() ? \"\" : \", \" + startTime));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if ((!endTime.isNull()) || (!endDate.isNull())) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            builder.append(\" to\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (!endDate.isNull()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            builder.append(\" \" + endDate);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (!endTime.isNull()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (!endDate.isNull()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                builder.append(\",\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            builder.append(\" \" + endTime);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        builder.append(\")\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 92
    }
  },
  {
    "path": "src/main/java/duke/task/EventComparator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.calendar.Time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class EventComparator extends TaskComparator {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Compares events according to chronological order."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param eventOne First event to be compared."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param eventTwo Second event to be compared."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Returns a negative integer, zero, or a positive integer as the first event is less than,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     *     equal to, or greater than the second."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int compare(Event eventOne, Event eventTwo) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (eventOne.equals(eventTwo)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return compareChronologicalOrder(eventOne, eventTwo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareChronologicalOrder(Event eventOne, Event eventTwo) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (compareStart(eventOne, eventTwo) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return compareEnd(eventOne, eventTwo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return compareStart(eventOne, eventTwo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareStart(Event eventOne, Event eventTwo) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Date startDateOne \u003d eventOne.getStartDate();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Date startDateTwo \u003d eventTwo.getStartDate();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (startDateOne.compareTo(startDateTwo) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return compareStartTime(eventOne, eventTwo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return startDateOne.compareTo(startDateTwo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareStartTime(Event eventOne, Event eventTwo) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Time startTimeOne \u003d eventOne.getStartTime();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Time startTimeTwo \u003d eventTwo.getStartTime();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (startTimeOne \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return startTimeOne.compareTo(startTimeTwo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareEnd(Event eventOne, Event eventTwo) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Date endDateOne \u003d eventOne.getEndDate();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Date endDateTwo \u003d eventTwo.getEndDate();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (endDateOne \u003d\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (endDateOne.compareTo(endDateTwo) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return compareEndTime(eventOne, eventTwo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return endDateOne.compareTo(endDateTwo);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareEndTime(Event eventOne, Event eventTwo) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Time endTimeOne \u003d eventOne.getEndTime();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Time endTimeTwo \u003d eventTwo.getEndTime();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (endTimeOne \u003d\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return endTimeOne.compareTo(endTimeTwo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 75
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Abstract parent class of all specific types of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task that has to be done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param description Provided details of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the icon corresponding to the status of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Tick icon if task is completed and cross icon otherwise."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return (isDone ? \"Done\" : \"Not Done\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the provided details."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Provided details."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Checks if the task has been completed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return True if the task has been completed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the first letter of the task type."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 61
    }
  },
  {
    "path": "src/main/java/duke/task/TaskComparator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.DeadlineComparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class TaskComparator implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Compares tasks according to chronological order."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param taskOne First task to be compared."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param taskTwo Second task to be compared."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return Returns a negative integer, zero, or a positive integer as the first task is less than,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     *     equal to, or greater than the second."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int compare(Task taskOne, Task taskTwo) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskOne.equals(taskTwo)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (taskOne.getType().equals(taskTwo.getType())) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return compareSameTaskType(taskOne, taskTwo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return compareDifferentTaskType(taskOne, taskTwo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareSameTaskType(Task taskOne, Task taskTwo) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskType \u003d taskOne.getType();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            TodoComparator todoComparator \u003d new TodoComparator();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return todoComparator.compare((Todo)taskOne, (Todo)taskTwo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            DeadlineComparator deadlineComparator \u003d new DeadlineComparator();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return deadlineComparator.compare((Deadline)taskOne, (Deadline)taskTwo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            EventComparator eventComparator \u003d new EventComparator();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return eventComparator.compare((Event)taskOne, (Event)taskTwo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    private int compareDifferentTaskType(Task taskOne, Task taskTwo) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        String taskOneType \u003d taskOne.getType();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        if (taskOneType.equals(\"T\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else if (taskOneType.equals(\"D\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            String taskTwoType \u003d taskTwo.getType();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            if (taskTwoType.equals(\"T\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 58
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e that has to be done. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a description about"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " * the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Constructor for \u003ccode\u003eTodo\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @param description Details about the \u003ccode\u003eTodo\u003c/code\u003e task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * Returns the first letter of the task type."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     * @return \"T\"."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 28
    }
  },
  {
    "path": "src/main/java/duke/task/TodoComparator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class TodoComparator implements Comparator\u003cTodo\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public int compare(Todo todoOne, Todo todoTwo) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 15
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"0.2\" maxWidth\u003d\"270.0\" minWidth\u003d\"190.0\" text\u003d\"Label\" textFill\u003d\"#39052c\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            \u003cFont name\u003d\"Calibri\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            \u003cInsets bottom\u003d\"8.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: rgb(10,28,40);\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 19
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_bye() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new ExitCommand(), Parser.parse(\"bye\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_list() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new ListCommand(), Parser.parse(\"list\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_delete() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new DeleteCommand(2), Parser.parse(\"delete 2\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_done() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new DoneCommand(2), Parser.parse(\"done 2\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_todo_noExceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new AddTodoCommand(\"read book\"), Parser.parse(\"todo read book\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_todo_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Parser.parse(\"todo    \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"OOPS!!! The description of a todo cannot be empty.\", exception.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_deadline() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new AddDeadlineCommand(\"homework /by 06/06/2019\"),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                Parser.parse(\"deadline homework /by 06/06/2019\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_event() throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(new AddEventCommand(\"project meeting /at 06/06/2019 1800 /to 06/06/2019 1900\"),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                Parser.parse(\"event project meeting /at 06/06/2019 1800 /to 06/06/2019 1900\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void parse_invalidCommand() throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Parser.parse(\"hey\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", exception.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 75
    }
  },
  {
    "path": "src/test/java/duke/calendar/DateTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class DateTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processDate_noExceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Date date \u003d new Date(\"06/05/2019\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(\"6th of MAY 2019\", date.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processDate_invalidMonth_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Date date \u003d new Date(\"06/14/2019\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"OOPS!!! Please specify a valid month.\", exception.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processDate_invalidDay_exceptionThrown() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Date date \u003d new Date(\"31/11/2019\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"OOPS!!! Please specify a valid day.\", exception.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processDate_invalidFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Date date \u003d new Date(\"11/2019\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"OOPS!!! Please specify a date in the form day/month/year. E.g. 2/12/2019\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    exception.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 48
    }
  },
  {
    "path": "src/test/java/duke/calendar/TimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "package duke.calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "public class TimeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processTime_noExceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        Time time \u003d new Time(\"0000\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        assertEquals(\"12am\", time.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processDate_invalidMinute_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Time date \u003d new Time(\"1861\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"OOPS!!! Please specify a valid time. \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    + \"Also ensure that you have specified the time in 24-hour clock convention E.g. 1800 \","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                            exception.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    public void processDate_invalidHour_exceptionThrown() throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            Time date \u003d new Time(\"2540\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "            assertEquals(\"OOPS!!! Please specify a valid time. \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                    + \"Also ensure that you have specified the time in 24-hour clock convention E.g. 1800 \","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "                            exception.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chowyiwai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chowyiwai": 42
    }
  }
]
