[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "olivercheok20": 22,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return \"[D][\" + this.getMark() + \"] \" + this.getDescription() + \" (by: \" + time + \")\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "olivercheok20": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "     * Main method of Duke application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        // Create a scanner to take in user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                formatMessage(\"Hello, I\u0027m Duke\\nWhat can I do for you?\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        );"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        String[] commandTokens \u003d command.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    String list \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        list +\u003d String.format("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                                \"%d.\" + task,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                                i + 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    System.out.println(formatMessage(list));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                } else if (commandTokens[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    int completedIndex \u003d Integer.parseInt(commandTokens[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    message \u003d \"Nice! I\u0027ve marked this task as done:\\n  \";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    Task completedTask \u003d tasks.get(completedIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    completedTask.setCompleted();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    message +\u003d completedTask;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    System.out.println(formatMessage(message));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                } else if (commandTokens[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    if (commandTokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                        throw new Exception(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    Task newTask \u003d new Todo(command.substring(5));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    tasks.add(newTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    message \u003d String.format("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            \"Got it. I\u0027ve added this task:\\n  %sNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            newTask,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            tasks.size()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            formatMessage(message)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                } else if (commandTokens[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    String[] deadlineTokens \u003d command.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    Task newTask \u003d new Deadline(deadlineTokens[0], deadlineTokens[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    tasks.add(newTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    message \u003d String.format("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            \"Got it. I\u0027ve added this task:\\n  %sNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            newTask,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            tasks.size()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            formatMessage(message)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                } else if (commandTokens[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    String[] eventTokens \u003d command.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    Task newTask \u003d new Event(eventTokens[0], eventTokens[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    tasks.add(newTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    message \u003d String.format("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            \"Got it. I\u0027ve added this task:\\n  %sNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            newTask,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            tasks.size()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    System.out.println("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            formatMessage(message)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                } else if (commandTokens[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    int removeIndex \u003d Integer.parseInt(commandTokens[1]) - 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    Task removeTask \u003d tasks.get(removeIndex);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    tasks.remove(removeIndex);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    message \u003d String.format("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            \"Noted. I\u0027ve removed this task:\\n  %sNow you have %d tasks in the list.\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            removeTask,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                            tasks.size());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    System.out.println(formatMessage(message));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                    throw new Exception(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                System.out.println(formatMessage(e.getMessage()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            commandTokens \u003d command.split(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "                formatMessage(\"Bye. Hope to see you again soon!\")"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        );"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    private static String formatMessage(String message) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        String formatted \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        String[] lines \u003d message.split(\"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            formatted +\u003d \"     \" + line + \"\\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        formatted +\u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return formatted;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "olivercheok20": 108,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return \"[E][\" + this.getMark() + \"] \" + this.getDescription() + \" (at: \" + time + \")\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "olivercheok20": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    void setCompleted() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    String getMark() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        if (isCompleted) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            return \"✓\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "            return \"✗\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return \"[\" + this.getMark() + \"] \" + this.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "olivercheok20": 30
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "olivercheok20"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "olivercheok20": 10
    }
  }
]
