[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "run {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "test {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 31,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Main Duke class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Duke Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param filePath path of data file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        } catch (DukeException duke) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            ui.showLoadingError(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Boots the Duke program."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        ui.printStatement(\"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                // !sc.hasNext(\"bye\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                ui.showLoadingError(e);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Duke d \u003d new Duke(\"list.txt\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        d.run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 53,
      "-": 3
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import static java.lang.String.format;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Command to add task into data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Command to add task into data."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param taskDetail array used to store type of task and the instruction."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @throws DukeException If Description is empty."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public AddCommand(String[] taskDetail) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        if (taskDetail.length \u003c 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            throw new DukeException(\":( OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.task \u003d createTask(taskDetail[0], taskDetail[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.setExit(false);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Creates Task of specific runtime type."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param type The type of task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param detail Details of Task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @return The Task to be added."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @throws DukeException For Invalid user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private Task createTask(String type, String detail) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            t \u003d new Todo(detail);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                String[] deadlineContent \u003d detail.split(\" /by \", 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                if (deadlineContent.length \u003c 2) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                    throw new DukeException(\"Invalid format for Deadline Task.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                String[] datetime \u003d deadlineContent[1].split(\" \", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                if (datetime.length \u003c 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                    throw new DukeException(\"Invalid format for Deadline Task.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(datetime[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                LocalTime time \u003d LocalTime.parse(datetime[1], DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                t \u003d new Deadline(deadlineContent[0], date, time);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                throw new DukeException(\"Invalid Date Time format input\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            String[] eventContent \u003d detail.split(\" /at \", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            if (eventContent.length \u003c 2) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                throw new DukeException(\"Invalid format for Event Task.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            t \u003d new Event(eventContent[0], eventContent[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            t \u003d null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        tasklist.addTask(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        ui.printStatement(\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                format(\"  %s\", task),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                format(\"Now you have %d tasks in the list.\", tasklist.getTaskSize()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        storage.updateData(tasklist);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 94
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Command to end the Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.setExit(true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        ui.printStatement(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 22
    }
  },
  {
    "path": "src/main/java/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Command to clear all item in the TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        tasklist.clearAll();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        ui.printStatement(\"Your list is now empty.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        storage.updateData(tasklist);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 20
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Abstract command which has many different type of commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Executes the given line instruction passed into the object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param tasklist Tasklist object containing the data structure."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param ui duke Ui object responsible for interface response."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param storage duke Storage object to make changes to hard drive data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public abstract void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void setExit(boolean exit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        isExit \u003d exit;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 33
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import static java.lang.String.format;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Command to delete a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Command to delete a task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param input the task number in string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @throws DukeException If the task number is of invalid format."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public DeleteCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            this.index \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            this.setExit(false);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            throw new DukeException(\"Invalid Number Format.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        if (index \u003c 1 || index \u003e tasklist.getTaskSize()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            throw new DukeException(\"Index out of range.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Task task \u003d tasklist.removeTaskByIndex(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        ui.printStatement(\"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                format(\"  %s\", task.toString()),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                format(\"Now you have %d tasks in the list.\", tasklist.getTaskSize()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        storage.updateData(tasklist);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 43
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import static java.lang.String.format;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Marks a task as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param input Given user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @throws DukeException If any error is encountered."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public DoneCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.index \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.setExit(false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        if (index \u003c 1 || index \u003e tasklist.getTaskSize()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            throw new DukeException(\"Index out of range.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        tasklist.markDone(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        ui.printStatement(\"Nice! I\u0027ve marked this task as done:\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                format(\"  %s\", tasklist.getTaskByIndex(index).toString()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        storage.updateData(tasklist);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 40
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Command to find tasks which contains given expression."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private String expr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public FindCommand(String expr) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.expr \u003d expr;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Stream\u003cString\u003e taskStream \u003d tasklist"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                .getList()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                .filter(task -\u003e task.toString().contains(this.expr))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                .map(task -\u003e task.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Stream\u003cString\u003e combined \u003d Stream.concat(Stream.of(\"Here are the matching tasks in your list:\"), taskStream);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        String[] combinedString \u003d combined.toArray(String[]::new);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        ui.printStatement(combinedString);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 32
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import static java.lang.String.format;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Command to List the existing tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Command to List the existing tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.setExit(false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Stream\u003cString\u003e taskStream \u003d IntStream"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                .range(0, tasklist.getTaskSize())"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                .mapToObj(i -\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                    Task t \u003d tasklist.getTaskByIndex(i + 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                    return format(\"%d.%s\", i + 1, t.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Stream\u003cString\u003e combined \u003d Stream.concat(Stream.of(\"Here are the tasks in your list:\"), taskStream);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        String[] combinedString \u003d combined.toArray(String[]::new);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        ui.printStatement(combinedString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 38
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Customized DukeException to represent the errors encountered in program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Constructor of DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param description Description of the Error encountered."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public DukeException(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 23
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import command.ByeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import command.ClearCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Parser class to parse a given input command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * To parse the given user command to be recognized."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param fullCommand full command input by user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @return A Command which is able to be executed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @throws DukeException If command is invalid."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        String[] arr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        String cmd \u003d arr[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            command \u003d new AddCommand(arr);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            if (arr.length \u003c 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                throw new DukeException(\"An Integer is required to choose the task.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            command \u003d new DoneCommand(arr[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            if (arr.length \u003c 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                throw new DukeException(\"An Integer is required to delete the task.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            command \u003d new DeleteCommand(arr[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            command \u003d new ByeCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            if (arr.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                throw new DukeException(\"An expression is required to find the task.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            command \u003d new FindCommand(arr[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            command \u003d new ClearCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            throw new DukeException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 68
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Storage class to manage hard drive data."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * duke.Storage constructor."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param filepath path of data file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Initially populates the Task List with the hard drive data (Input data file)."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param list ArrayList to be populated."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param line A given line in the input file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private void initialPopulate(ArrayList\u003cTask\u003e list, String line) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        String[] arr \u003d line.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        String cmd \u003d arr[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        boolean isDone \u003d Integer.parseInt(arr[1]) !\u003d 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            Task todo \u003d new Todo(arr[2]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                todo.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            list.add(todo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            String[] datetime \u003d arr[3].split(\" \", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            Task deadline \u003d new Deadline(arr[2], datetime[0], datetime[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                deadline.markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            list.add(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            Task event \u003d new Event(arr[2], arr[3]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                event.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            list.add(event);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            throw new DukeException(\"Invalid Task Type\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Initial seeding of the data from hard drive memory."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @return seeded ArrayList."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @throws DukeException duke.DukeException class."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            File f \u003d new File(filepath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                if (!f.createNewFile()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                    throw new DukeException(\"Data file not created\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            Scanner fileReader \u003d new Scanner(f);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                String line \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                initialPopulate(list, line);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            throw new DukeException(e.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            throw new DukeException(e.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Method to override the hard drive memory with the given list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param tasklist given tasklist."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @throws DukeException custom duke.DukeException."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void updateData(TaskList tasklist) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d tasklist.getList();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filepath);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                String data \u003d String.format(\"%s\\n\", task.fileFormat());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                fw.write(data);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "            throw new DukeException(e.toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 119
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * TaskList class that abstract the ArrayList Task object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Constructor for tasklist."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param list ArrayList representation for the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Overriden method for tasklist if there is no initial seeding of data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Adds given task into list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param task Given task object to be added."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Gets number of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @return Current size of list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public int getTaskSize() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Gets the ArrayList representation."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @return ArrayList representation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Gets the task by its number."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param index the task number."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @return The task at the specific number."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public Task getTaskByIndex(int index) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return this.list.get(index - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Marks the specified task to be done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param index Task number of the task to be marked as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Task task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Clears all existing item in the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void clearAll() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        list.clear();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Removes task by its given task number."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param index Task number of the task to be removed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @return Task object that has been removed."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public Task removeTaskByIndex(int index) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return list.remove(index - 1);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 94
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import static java.lang.String.format;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Ui class for user interaction and to manage interface."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Ui Constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.line \u003d \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Error printer if duke.DukeException is encountered."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param e Caught duke.DukeException."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void showLoadingError(DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        System.out.println(this.line + format(\"\\t %s\\n\", e) + this.line);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Scans for the next line command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @return next line input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        String s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * printing the given input to the interface."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param args iteration of string inputs that each represent a line to be printed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void printStatement(String... args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        String content \u003d format(\"%s\", Stream.of(args).map(s -\u003e \"\\t \" + s + \"\\n\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                .reduce((x,y) -\u003e x + y).orElse(\"\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        System.out.println(this.line + content + this.line);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 54
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Task which has a deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Constructor class for Deadline object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param desc Description of Deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param date Date of Deadline in localDate representation"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param time Time of Deadline in localTime representation"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public Deadline(String desc, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Constructor to instantiate a deadline object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param desc description of deadline"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param date date of deadline in format dd/MM/yyyy"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param time time of deadline in format HHmm"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @throws DateTimeParseException For invalid datetime format."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public Deadline(String desc, String date, String time) throws DateTimeParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                + \", \" + time.format(DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return String.format(\"D | %s | %s | %s %s\", isDoneString(), getDescription(),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "                time.format(DateTimeFormatter.ofPattern(\"HHmm\")));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 58
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Task which has a place."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Event constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param desc Description containing description and venue of event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param at Place of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public Event(String desc, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return String.format(\"E | %s | %s | %s\", isDoneString(), getDescription(), this.at);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 32
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Task which belongs to a list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Constructor of Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public abstract String fileFormat();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return (isDone ? \"[done]\" : \"[x]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public String isDoneString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return String.format(\"%s %s\", this.getStatusIcon(), this.getDescription());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 45
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " * Task that has a description of \"todo\"."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * Constructor for Todo Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     * @param description Description of todo Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        return String.format(\"T | %s | %s\", isDoneString(), getDescription());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 27
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void deadlineTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Task deadline \u003d new Deadline(\"Deadline deadlinetest\", \"23/05/1997\", \"1800\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"Deadline deadlinetest\", deadline.getDescription());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"[D][x] Deadline deadlinetest (by: 23 May 1997, 6:00 PM)\", deadline.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"D | 0 | Deadline deadlinetest | 23/05/1997 1800\", deadline.fileFormat());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"[x]\", deadline.getStatusIcon());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        deadline.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"D | 1 | Deadline deadlinetest | 23/05/1997 1800\", deadline.fileFormat());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"[done]\", deadline.getStatusIcon());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"[D][done] Deadline deadlinetest (by: 23 May 1997, 6:00 PM)\", deadline.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 23
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Task event \u003d new Event(\"Event Test\",\"Some Event\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"Event Test\", event.getDescription());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"E | 0 | Event Test | Some Event\", event.fileFormat());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"[x]\", event.getStatusIcon());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"[E][x] Event Test (at: Some Event)\", event.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        event.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"E | 1 | Event Test | Some Event\", event.fileFormat());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"[done]\", event.getStatusIcon());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"[E][done] Event Test (at: Some Event)\", event.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 23
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    void taskListTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Task todo \u003d new Todo(\"Todo Description\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        TaskList tasklist \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(0, tasklist.getTaskSize());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        tasklist.addTask(todo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(1, tasklist.getTaskSize());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(todo, tasklist.getTaskByIndex(1));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        tasklist.removeTaskByIndex(1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(0, tasklist.getTaskSize());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 24
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        Task todo \u003d new Todo(\"Todo Description\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"Todo Description\", todo.getDescription());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"T | 0 | Todo Description\", todo.fileFormat());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"[T][x] Todo Description\", todo.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"[x]\", todo.getStatusIcon());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"T | 1 | Todo Description\", todo.fileFormat());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"[done]\", todo.getStatusIcon());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "        assertEquals(\"[T][done] Todo Description\", todo.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "clear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "todo stuff to do"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "event event1 /at some random place"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "deadline deadline /by 20/21/1997 1800"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "deadline deadline /by 12/12/1997 1830"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "find 1997"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "bye"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LivingOnEdge"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "LivingOnEdge": 21
    }
  }
]
