[
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import parser.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public boolean canEnd() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 13
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import converter.StringDateConverter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import parser.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private String[] arguments;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public DeadlineCommand(String[] arguments) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            StringDateConverter converter \u003d new StringDateConverter();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            Date by \u003d converter.convertStringToDate(arguments[1].trim());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            tasks.getTasks().add(new Deadline(arguments[0], by));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(tasks.getTasks().get(tasks.getTasks().size() - 1));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getTasks().size()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    + \" tasks in the list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 32
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import parser.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        if (this.index \u003c 0 || this.index \u003e\u003d tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            Command incorrectCommand \u003d new IncorrectCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            incorrectCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(tasks.getTasks().get(this.index));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            tasks.getTasks().remove(this.index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getTasks().size() + \" in the list.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 26
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import parser.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        if (this.index \u003c 0 || this.index \u003e\u003d tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            Command incorrectCommand \u003d new IncorrectCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            incorrectCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            tasks.getTasks().get(this.index).setDone(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(\"[\" + tasks.getTasks().get(this.index).getDoneIcon()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    + \"]\" + tasks.getTasks().get(this.index).getDescription());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 26
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import converter.StringDateConverter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import parser.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private String[] arguments;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public EventCommand(String[] arguments) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            StringDateConverter converter \u003d new StringDateConverter();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            Date at \u003d converter.convertStringToDate(arguments[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            tasks.getTasks().add(new Event(arguments[0], at));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(tasks.getTasks().get(tasks.getTasks().size() - 1));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getTasks().size()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    + \" tasks in the list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 32
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import parser.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public boolean canEnd() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 17
    }
  },
  {
    "path": "src/main/java/command/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import parser.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        System.out.println(\"You have entered an invalid command\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 12
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import parser.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        System.out.println(\"Here are the tasks in your list\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTasks().size(); i \u003d i + 1) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            int number \u003d i + 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(number + \".\" + tasks.getTasks().get(i));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 16
    }
  },
  {
    "path": "src/main/java/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import parser.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public ToDoCommand(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        tasks.getTasks().add(new ToDo(this.description));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        System.out.println(tasks.getTasks().get(tasks.getTasks().size() - 1));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getTasks().size()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                + \" tasks in the list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 23
    }
  },
  {
    "path": "src/main/java/converter/StringDateConverter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package converter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class StringDateConverter {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Date convertStringToDate(String strDate) throws Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        SimpleDateFormat dateWithTime \u003d new SimpleDateFormat(\"dd/MM/yyy HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        Date date \u003d dateWithTime.parse(strDate);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Date convertLongStringToDate(String strDate) throws Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        SimpleDateFormat dateWithTime \u003d new SimpleDateFormat(\"EEE MMM dd HH:mm:ss zzz yyyy\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        Date date \u003d dateWithTime.parse(strDate);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 18
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public DukeException(String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.type \u003d input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        switch(this.type) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        case \"invalid number\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            return \"Please enter a valid number.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        case \"empty todo\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            return \"The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        case \"empty deadline date\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            return \"Please enter a date for your deadline in the form \u0027/by \u003cyour date here\u003e\u0027 without \u003c\u003e.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        case \"empty event date\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            return \"Please enter a date for your event in the form \u0027/at \u003cyour date here\u003e\u0027 without \u003c\u003e.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            return \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 26
    }
  },
  {
    "path": "src/main/java/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import parser.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        boolean canEnd \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        while (!canEnd) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                Command command \u003d new Parser().parse(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                canEnd \u003d command.canEnd();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "chen-xi-cx": 51
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        String[] separatedInputs \u003d userInput.trim().split(\"\\\\s+\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        switch (separatedInputs[0].toLowerCase()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            //fallthrough"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            Scanner s \u003d new Scanner(separatedInputs[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            if (separatedInputs.length \u003e 2 || !s.hasNextInt()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                throw new DukeException(\"invalid number\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            if (separatedInputs[0].toLowerCase().equals(\"done\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                return new DoneCommand(s.nextInt() - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                return new DeleteCommand(s.nextInt() - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            String description \u003d userInput.trim().substring(separatedInputs[0].length()).trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                throw new DukeException(\"empty todo\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            return new ToDoCommand(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            if (userInput.indexOf(\"/by\") \u003d\u003d -1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                throw new DukeException(\"empty deadline date\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                String[] arguments \u003d userInput.trim().substring(separatedInputs[0].length()).trim()."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                        split(\"/by\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                return new DeadlineCommand(arguments);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            if (userInput.indexOf(\"/at\") \u003d\u003d -1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                throw new DukeException(\"empty event date\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                String[] arguments \u003d userInput.trim().substring(separatedInputs[0].length()).trim()."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                        split(\"/at\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                return new EventCommand(arguments);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            throw new DukeException(\"invalid input\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 54
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import converter.StringDateConverter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            String[] output \u003d s.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            boolean isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            if (output[1].equals(\"Done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                isDone \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            Date date \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            String description \u003d output[2].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            if (output.length \u003e 3) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    StringDateConverter converter \u003d new StringDateConverter();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    date \u003d converter.convertLongStringToDate(output[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            switch (output[0].trim()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                tasks.add(new ToDo(description, isDone));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                tasks.add(new Deadline(description, date, isDone));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                tasks.add(new Event(description, date, isDone));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            String description, textToAdd;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            Date date \u003d null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            description \u003d task.getDescription();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                textToAdd +\u003d \"D\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                date \u003d deadline.getBy();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                textToAdd +\u003d \"E\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                date \u003d event.getAt();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                textToAdd +\u003d \"T\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            if (task.getDoneIcon().equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                textToAdd +\u003d \" | Done\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                textToAdd +\u003d \" | Not done\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            textToAdd +\u003d \" | \" + description.trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            if (date !\u003d null) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "                textToAdd +\u003d \" | \" + date;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "            fw.write(textToAdd + \"\\r\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 91
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Deadline(String description, Date by, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Date getBy() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 27
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Event(String description, Date at, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Date getAt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 27
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public String getDoneIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return \"[\" + getDoneIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 33
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 19
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 17
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    Scanner myScanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        myScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "        return myScanner.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chen-xi-cx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chen-xi-cx": 23
    }
  }
]
