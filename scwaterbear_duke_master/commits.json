{
  "authorDailyContributionsMap": {
    "scwaterbear": [
      {
        "insertions": 67,
        "deletions": 13,
        "date": "2019-08-26",
        "commitResults": [
          {
            "hash": "a8291ce0ae923d6bb57ea4a5209cba217756e362",
            "messageTitle": "Add capabilities to echo commands entered by the user, and exits when the user types bye.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 0
          },
          {
            "hash": "71092478484650cd75d1d75d19507c7201baa978",
            "messageTitle": "Modifies Duke to echo multi-word user input correctly",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "c2ea908eb04c7ecbdb9b1c1cc2b1ff0696fd1e80",
            "messageTitle": "Add the ability to store whatever text entered by the user and display them back to the user when requested.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 2
          },
          {
            "hash": "5fe7075da7e64de2e8466c020c42b4337dc4bcb1",
            "messageTitle": "Add Task class to represent tasks.",
            "messageBody": "",
            "insertions": 28,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 171,
        "deletions": 43,
        "date": "2019-08-27",
        "commitResults": [
          {
            "hash": "2483e234b89aecd440a713e1522843bf3c5ded5e",
            "messageTitle": "Add the ability to mark tasks as done.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 0
          },
          {
            "hash": "70909e3c4b572af371ec0c562f63df8e1690f521",
            "messageTitle": "Add support for tracking three types of tasks: 1. ToDos: tasks without any date/time attached to it e.g., visit new theme park 2. Deadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm 3. Events: tasks that start at a specific time and ends at a specific time e.g., team project meeting on 2/10/2019 2-4pm",
            "messageBody": "",
            "insertions": 69,
            "deletions": 13
          },
          {
            "hash": "727978cb52448b7972bfafb002a2d929645a61fd",
            "messageTitle": "Enable Duke to deal with errors such as incorrect inputs entered by the user",
            "messageBody": "",
            "insertions": 71,
            "deletions": 30
          },
          {
            "hash": "43a59a6e42c1d244b14fa99c1afa7e1375084544",
            "messageTitle": "Add support for deleting tasks from the list.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 175,
        "deletions": 5,
        "date": "2019-08-28",
        "commitResults": [
          {
            "hash": "dd5a2e722b456290ff83814982f2181112b35173",
            "messageTitle": "Add functionality for Duke to understand dates and times. For example, if the command is deadline return book /by 2/12/2019 1800, Duke understands 2/12/2019 1800 as 2nd of December 2019, 6pm, instead of storing it simply as a String.",
            "messageBody": "",
            "insertions": 65,
            "deletions": 2
          },
          {
            "hash": "e5d7926c162f0a58af110168e4c27d792e1d8d75",
            "messageTitle": "Save the tasks in the hard disk automatically whenever the task list changes. Load the data from the hard disk when Duke starts up.",
            "messageBody": "",
            "insertions": 110,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 548,
        "deletions": 250,
        "date": "2019-08-29",
        "commitResults": [
          {
            "hash": "0f67cb8afa84b2c8c8c4614b006cf6e2281d7057",
            "messageTitle": "Refactor the code to extract out closely related code as classes. Ui: deals with interactions with the user, Storage: deals with loading tasks from the file and saving tasks in the file, Parser: deals with making sense of the user command, TaskList: contains the task list. Extract more classes *Command classes that inherit from an abstract Command class.",
            "messageBody": "",
            "insertions": 386,
            "deletions": 167
          },
          {
            "hash": "392ff9cf396b6e31604130c999b022a717cb94a6",
            "messageTitle": "Rename method names to better reflect method action.",
            "messageBody": "",
            "insertions": 58,
            "deletions": 64
          },
          {
            "hash": "1080bc2fae16cfe2c374415be91bcb1af1351886",
            "messageTitle": "Organize the classes into suitable java packages, duke.command, duke.task, duke.exception",
            "messageBody": "",
            "insertions": 104,
            "deletions": 19
          }
        ]
      },
      {
        "insertions": 161,
        "deletions": 65,
        "date": "2019-08-31",
        "commitResults": [
          {
            "hash": "e5a80dfaa49c98b2bc164af75e4b3eff690ff157",
            "messageTitle": "Add JUnit tests to test the behaviour of the code. StorageTest includes 2 methods to test load(): load_hasExistingFile_success() and load_noExistingFile_success(). TaskListTest includes 1 method to test setIsDone(): setIsDone_emptyArrayList_dukeExceptionThrown().",
            "messageBody": "",
            "insertions": 64,
            "deletions": 17
          },
          {
            "hash": "fa96200528ef9e962c3f5ba4b254ce3f3021b4cc",
            "messageTitle": "Give users a way to find a task by searching for a keyword.",
            "messageBody": "",
            "insertions": 56,
            "deletions": 6
          },
          {
            "hash": "3869cb30b7500f89e0b011ef303cfbf26918daab",
            "messageTitle": "Tweak the code to comply with a chosen coding standard.",
            "messageBody": "",
            "insertions": 41,
            "deletions": 42
          }
        ]
      },
      {
        "insertions": 348,
        "deletions": 37,
        "date": "2019-09-01",
        "commitResults": [
          {
            "hash": "3787099d9d5c28b6034ecda127640ef8c3bc511b",
            "messageTitle": "Add JavaDoc comments to the code.",
            "messageBody": "",
            "insertions": 329,
            "deletions": 10
          },
          {
            "hash": "06254e41519d5a011e4b4d39c7ecab8845f4f5ae",
            "messageTitle": "Change modifiers messed up during the merge.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 27
          }
        ]
      },
      {
        "insertions": 737,
        "deletions": 683,
        "date": "2019-09-02",
        "commitResults": [
          {
            "hash": "20fd98e668c0aaa1098d8487dc7dbf0446a3a0c3",
            "messageTitle": "Modify code to comply with checkStyle.",
            "messageBody": "",
            "insertions": 737,
            "deletions": 683
          }
        ]
      }
    ]
  },
  "authorFinalContributionMap": {
    "scwaterbear": 1122
  },
  "authorFileTypeContributionMap": {
    "scwaterbear": {
      "java": 1117,
      "md": 0,
      "fxml": 0,
      "sh": 0,
      "bat": 0,
      "gradle": 0,
      "txt": 5
    }
  },
  "authorContributionVariance": {
    "scwaterbear": 129500.03
  },
  "authorDisplayNameMap": {
    "scwaterbear": "CS2103-T16 STEPH ... G ZHI"
  }
}
