[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  private String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  public Deadline(String n, int index, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    super(n, index);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    String result \u003d \"[D][\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    result \u003d this.completed ? result + \"✓]\" : result + \"✗]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    result +\u003d \" \" + this.name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    result +\u003d \"(by:\" + this.date + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(); "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    private static int count \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        welcomeMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          String input \u003d sc.next();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            byeMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            displayList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          } else if (input.equals(\"done\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "              markItemComplete(Integer.parseInt(sc.next()));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "              printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          } else if (input.equals(\"delete\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "              deleteItem(Integer.parseInt(sc.next()));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "              printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "              String type \u003d input;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "              if ("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                !type.equals(\"todo\") \u0026\u0026"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                !type.equals(\"deadline\") \u0026\u0026"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                !type.equals(\"event\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "              ) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "                throw new DukeException(\"I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "              }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "              String taskName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "              Task t \u003d addToList(taskName, type);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "              echo(t);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "              printErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          } "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static void deleteItem(int index) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      if (index \u003c\u003d 0 || index \u003e count) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      index--;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      Task t \u003d list.get(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      list.remove(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      String line \u003d \"    ________________________\" "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          + \"____________________________________\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(\"      \" + t);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      count--;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      String message \u003d "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        count \u003d\u003d 1 "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          ? \"     Now you have 1 task in the list\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          : \"     Now you have \" + count + \" tasks in the list\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(message);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static void printErrorMessage(String e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      String line \u003d \"    ________________________\" "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          + \"____________________________________\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(line);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(\"     \" + e);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static void displayList() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      String line \u003d \"    ________________________\" "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          + \"____________________________________\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(line);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      for (int i \u003d 0; i \u003c count; i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        int listNumber \u003d i + 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"    \" + listNumber + \".\" + list.get(i));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static void markItemComplete(int index) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      if (index \u003c\u003d 0 || index \u003e count) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      String line \u003d \"    ________________________\" "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          + \"____________________________________\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      Task t \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      t.complete();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(line);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(\"     \" + t);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static Task addToList(String s, String type) throws DukeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      String trimmed \u003d s.replaceAll(\"^\\\\s+\", \"\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      if (trimmed.equals(\"\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        throw new DukeException(\"Description cannot be empty!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        list.add(new Todo(s, count + 1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String[] parts \u003d s.split(\"\\\\/\" + \"by\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        if (parts.length \u003c 2) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          String message \u003d \"Date required! \";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          message +\u003d \"Format: deadline YOUR_TASK_NAME /by YOUR_DEADLINE\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          throw new DukeException(message);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else if (parts.length !\u003d 2) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          String message \u003d \"Format: deadline YOUR_TASK_NAME /by YOUR_DEADLINE\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          throw new DukeException(message);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        list.add(new Deadline(parts[0], count + 1, parts[1]));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String[] parts \u003d s.split(\"\\\\/\" + \"at\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        if (parts.length \u003c 2) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          String message \u003d \"Date required! \";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          message +\u003d \"Format: event YOUR_TASK_NAME /at YOUR_EVENT_DATE\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          throw new DukeException(message);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else if (parts.length !\u003d 2) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          String message \u003d \"Format: event YOUR_TASK_NAME /at YOUR_EVENT_DATE\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          throw new DukeException(message);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        list.add(new Event(parts[0], count + 1, parts[1]));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      count++;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "      return list.get(count - 1);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static void welcomeMessage() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "        String logo \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "                + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "                + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "                + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String line \u003d \"    ________________________\" "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            + \"____________________________________\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "        System.out.println(\"    Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"    What can I do for you?\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    static void byeMessage() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String line \u003d \"    ________________________\" "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          + \"____________________________________\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    public static void echo(Task t) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        String line \u003d \"    ________________________\" "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "            + \"____________________________________\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(\"      \" + t);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          System.out.println(\"     Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          String message \u003d \"     Now you have \"+count+\" tasks in the list.\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "          System.out.println(message);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 165,
      "Jeffry Lum": 6,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    super(errorMessage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  private String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  public Event(String n, int index, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    super(n, index);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    String result \u003d \"[E][\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    result \u003d this.completed ? result + \"✓]\" : result + \"✗]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    result +\u003d \" \" + this.name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    result +\u003d \"(at:\" + this.date + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 17
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  protected boolean completed;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  protected int index;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  protected String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  public Task(String n, int index) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    this.name \u003d n;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    this.index \u003d index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    completed \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  public void complete() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    this.completed \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 16
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hoholyin"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  public Todo(String n, int index) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    super(n, index);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    String result \u003d \"[T][\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    result \u003d this.completed ? result + \"✓]\" : result + \"✗]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    result +\u003d \" \" + this.name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "    return result;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hoholyin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hoholyin": 13
    }
  }
]
