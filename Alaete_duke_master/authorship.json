[
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "Alaete": 4
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private static String[] suffixes \u003d { \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            \"th\", \"th\", \"st\" };"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static String parse(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        Date dateTime \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String output \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        SimpleDateFormat inputFormat \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        SimpleDateFormat outputFormat \u003d new SimpleDateFormat(\"MMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            dateTime \u003d inputFormat.parse(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        SimpleDateFormat DayOfMonth \u003d new SimpleDateFormat(\"d\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        int day \u003d Integer.parseInt(DayOfMonth.format(dateTime));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String dayWithSuffix \u003d day + suffixes[day];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        output \u003d outputFormat.format(dateTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (dayWithSuffix + \" of \" + output);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 26
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    // [Level-7] Converts task to String format to write to hard disk"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String convertTaskToString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"D | %s | %s | %s\", this.getStatus(), this.description, this.by);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.lang.Integer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private static final String DUKE_FILE \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        // [Level-7] Loads the data from the hard disk when Duke starts up"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        System.out.println(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            FileReader fileReader \u003d new FileReader(DUKE_FILE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                taskList.add(Task.convertStringToTask(line));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String horizontalLine \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String indentation \u003d \"    \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String logo \u003d indentation + \" ____        _        \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                + indentation + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                + indentation + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                + indentation + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                + indentation + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        boolean isError;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        boolean isChanged;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        System.out.println(indentation + horizontalLine);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        System.out.println(indentation + \"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        System.out.println(indentation + \"What can I do for you?\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        System.out.println(indentation + horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        while (!isBye) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            isError \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            isChanged \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(indentation + horizontalLine);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    int index \u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    for (Iterator iterator \u003d taskList.iterator(); iterator.hasNext(); index++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        System.out.println(indentation + index + \".\" + iterator.next());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(indentation + horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    isChanged \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(indentation + horizontalLine);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    int doneIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1; // possible error here"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    Task doneTask \u003d taskList.get(doneIndex);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    doneTask.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(indentation + doneTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(indentation + horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    isChanged \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(indentation + horizontalLine);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    int deleteIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1; // possible error here"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(indentation + taskList.remove(deleteIndex));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    if (taskList.size() \u003d\u003d 1)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        System.out.println(indentation + \"Now you have \" + taskList.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        System.out.println(indentation + \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(indentation + horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                } else { // task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(indentation + horizontalLine);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    Task task \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        input \u003d input.replaceFirst(\"^todo\", \"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        if (input.substring(input.indexOf(\" \") + 1).isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                            isError \u003d true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        } else"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                            task \u003d new ToDo(input.substring(input.indexOf(\" \") + 1));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    else if (input.startsWith(\"deadline\"))"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        task \u003d new Deadline(input.substring(input.indexOf(\" \") + 1, input.indexOf(\"/\") - 1), DateTime.parse(input.substring(input.indexOf(\"/\") + 4)));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    else if (input.startsWith(\"event\"))"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        task \u003d new Event(input.substring(input.indexOf(\" \") + 1, input.indexOf(\"/\") - 1), DateTime.parse(input.substring(input.indexOf(\"/\") + 4)));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        isError \u003d true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    if (!isError) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        isChanged \u003d true;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        taskList.add(task);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        System.out.println(indentation + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        System.out.println(indentation + \"  \" + task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        if (taskList.size() \u003d\u003d 1)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                            System.out.println(indentation + \"Now you have \" + taskList.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                            System.out.println(indentation + \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    System.out.println(indentation + horizontalLine + \"\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                if (isChanged) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        FileWriter fileWriter \u003d new FileWriter(DUKE_FILE);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        Task task;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        int index \u003d 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        for (Iterator iterator \u003d taskList.iterator(); iterator.hasNext(); index++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                            if (index \u003e 1)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                                bufferedWriter.write(\"\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                            task \u003d (Task) iterator.next();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                            bufferedWriter.write(task.convertTaskToString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        bufferedWriter.close();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    } catch (IOException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                isBye \u003d true;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        System.out.println(indentation + horizontalLine);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        System.out.println(indentation + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        System.out.println(indentation + horizontalLine);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 132,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    // [Level-7] Converts task to String format to write to hard disk"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String convertTaskToString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"E | %s | %s | %s\", this.getStatus(), this.description, this.at);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 19
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); // return 1 or 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    // [Level-7] Converts task in String format to Task object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static Task convertStringToTask(String line) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String[] parameters \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        // To-Do"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        if (line.charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task task \u003d new ToDo(parameters[2].trim());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (parameters[1].trim().equals(\"1\"))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } // Deadline"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        else if (line.charAt(0) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task task \u003d new Deadline(parameters[2].trim(), parameters[3].trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (parameters[1].trim().equals(\"1\"))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } // Event"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        else if (line.charAt(0) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task task \u003d new Event(parameters[2].trim(), parameters[3].trim());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (parameters[1].trim().equals(\"1\"))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    // [Level-7] Converts task to String format to write to hard disk"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String convertTaskToString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"- | %s | %s\", this.getStatus(), this.description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 58
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    // [Level-7] Converts task to String format to write to hard disk"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String convertTaskToString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"T | %s | %s\", this.getStatus(), this.description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 16
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Alaete": 34
    }
  }
]
