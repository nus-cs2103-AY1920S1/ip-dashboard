[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    archivesBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 18,
      "-": 12
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private Calendar time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Deadline(Parser parser) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        super(parser.getList().get(0));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        time \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        ArrayList\u003cString\u003e inputArray \u003d parser.getList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        time.set(Integer.parseInt(inputArray.get(3)),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                (Integer.parseInt(inputArray.get(2)) - 1),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Integer.parseInt(inputArray.get(1)),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Integer.parseInt(inputArray.get(4)),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Integer.parseInt(inputArray.get(5)));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Deadline(String des, Calendar time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        super(des);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Calendar getTime() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String printTime() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String jargon \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        switch (time.get(Calendar.DAY_OF_MONTH) % 10) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 1 : jargon \u003d \"st \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 2 : jargon \u003d \"nd \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 3 : jargon \u003d \"rd \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        default : jargon \u003d \"th \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String nameOfMonth \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        switch (time.get(Calendar.MONTH)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 0 : nameOfMonth \u003d \"January\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 1 : nameOfMonth \u003d \"February\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 2 : nameOfMonth \u003d \"March\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 3 : nameOfMonth \u003d \"April\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 4 : nameOfMonth \u003d \"May\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 5 : nameOfMonth \u003d \"June\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 6 : nameOfMonth \u003d \"July\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 7 : nameOfMonth \u003d \"August\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 8 : nameOfMonth \u003d \"September\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 9 : nameOfMonth \u003d \"October\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 10 : nameOfMonth \u003d \"November\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 11 : nameOfMonth \u003d \"December\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String hoursAndMinutes \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if(time.get(Calendar.HOUR_OF_DAY) \u003c\u003d 12) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d time.get(Calendar.HOUR_OF_DAY) + \":\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d time.get(Calendar.HOUR) + \":\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (time.get(Calendar.MINUTE) \u003c 10) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"0\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        hoursAndMinutes +\u003d time.get(Calendar.MINUTE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (time.get(Calendar.AM_PM) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"am\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"pm\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return time.get(Calendar.DAY_OF_MONTH) + jargon"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + nameOfMonth + \", \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + time.get(Calendar.YEAR) + \". \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + hoursAndMinutes;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + this.printTime() +  \")\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 91
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private Ui UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        UI \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } catch (IOException de) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            UI.showLoadingError();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            UI.showException(de);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        UI.showWelcome();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            UI.printLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Parser commandAnalyzer \u003d new Parser(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (commandAnalyzer.isValid()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    if (commandAnalyzer.getType().equals(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        int index \u003d Integer.parseInt(commandAnalyzer.getList().get(0)) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            if (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                throw new DukeException(\" :( OOPS!!! Requested task number is not available\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            Task temp \u003d tasks.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            temp.markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            UI.showTaskDone(temp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            storage.update(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        } catch (DukeException | IOException de) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            UI.showException(de);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            UI.showNumberFormatError(\"done\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        UI.showGoodBye();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        UI.showTasks(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        if (commandAnalyzer.getType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                Task temp \u003d new ToDo(commandAnalyzer);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                tasks.add(temp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                UI.showTaskCreated(temp, tasks.size()); //change arr to TaskList"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                storage.update(tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            } catch (IOException de) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                UI.showException(de);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        } else if (commandAnalyzer.getType().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                Task temp \u003d new Deadline(commandAnalyzer);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                tasks.add(temp);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                UI.showTaskCreated(temp, tasks.size());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                storage.update(tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            } catch (IOException de) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                UI.showException(de);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        } else if (commandAnalyzer.getType().equals(\"event\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                Task temp \u003d new Event(commandAnalyzer);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                tasks.add(temp);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                UI.showTaskCreated(temp, tasks.size());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                storage.update(tasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            } catch (IOException de) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                UI.showException(de);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        } else if (commandAnalyzer.getType().equals(\"delete\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                int index \u003d Integer.parseInt(commandAnalyzer.getList().get(0)) - 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                if (index \u003e\u003d tasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                    throw new DukeException(\" :( OOPS!!! Task to be deleted is not available\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                    Task temp \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                    UI.showTaskDeleted(temp, tasks.size());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                storage.update(tasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            } catch (DukeException | IOException de) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                UI.showException(de);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                                UI.showNumberFormatError(\"delete\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        throw new DukeException(\" :( OOPS!!! I\u0027m sorry but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    } catch (DukeException de) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        UI.showException(de);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } catch (DukeException de) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                UI.showException(de);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                UI.printLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        new Duke(\"C:/Users/mtg-1/OneDrive/Documents/NUS/Y2S1/CS2103/repos/dukerepo/src/main/java/history.txt\").run();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 108,
      "-": 6
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private Calendar startTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private Calendar endTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Event(Parser parser) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        super(parser.getList().get(0));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        startTime \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        endTime \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        ArrayList\u003cString\u003e inputArray \u003d parser.getList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        startTime.set(Integer.parseInt(inputArray.get(3)),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                (Integer.parseInt(inputArray.get(2)) - 1),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Integer.parseInt(inputArray.get(1)),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Integer.parseInt(inputArray.get(4)),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Integer.parseInt(inputArray.get(5)));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        endTime.set(Integer.parseInt(inputArray.get(3)),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                (Integer.parseInt(inputArray.get(2)) - 1),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Integer.parseInt(inputArray.get(1)),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Integer.parseInt(inputArray.get(6)),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Integer.parseInt(inputArray.get(7)));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Event(String des, Calendar startTime, Calendar endTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        super(des);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Calendar getStartTime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Calendar getEndTime() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String printStartTime() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String jargon \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        switch (startTime.get(Calendar.DAY_OF_MONTH) % 10) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 1 : jargon \u003d \"st \";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 2 : jargon \u003d \"nd \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 3 : jargon \u003d \"rd \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        default : jargon \u003d \"th \";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String nameOfMonth \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        switch (startTime.get(Calendar.MONTH)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 0 : nameOfMonth \u003d \"January\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 1 : nameOfMonth \u003d \"February\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 2 : nameOfMonth \u003d \"March\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 3 : nameOfMonth \u003d \"April\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 4 : nameOfMonth \u003d \"May\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 5 : nameOfMonth \u003d \"June\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 6 : nameOfMonth \u003d \"July\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 7 : nameOfMonth \u003d \"August\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 8 : nameOfMonth \u003d \"September\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 9 : nameOfMonth \u003d \"October\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 10 : nameOfMonth \u003d \"November\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case 11 : nameOfMonth \u003d \"December\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String hoursAndMinutes;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (startTime.get(Calendar.HOUR_OF_DAY) \u003c\u003d 12) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes \u003d startTime.get(Calendar.HOUR_OF_DAY) + \":\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes \u003d startTime.get(Calendar.HOUR) + \":\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (startTime.get(Calendar.MINUTE) \u003c 10) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"0\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        hoursAndMinutes +\u003d startTime.get(Calendar.MINUTE);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (startTime.get(Calendar.AM_PM) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"am\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"pm\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return startTime.get(Calendar.DAY_OF_MONTH) + jargon"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + nameOfMonth + \", \""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + startTime.get(Calendar.YEAR) + \". \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + hoursAndMinutes;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String printEndTime() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String jargon \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        switch (endTime.get(Calendar.DAY_OF_MONTH) % 10) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 1 : jargon \u003d \"st \";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 2 : jargon \u003d \"nd \";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 3 : jargon \u003d \"rd \";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            default : jargon \u003d \"th \";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String nameOfMonth \u003d \"\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        switch (endTime.get(Calendar.MONTH)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 0 : nameOfMonth \u003d \"January\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 1 : nameOfMonth \u003d \"February\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 2 : nameOfMonth \u003d \"March\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 3 : nameOfMonth \u003d \"April\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 4 : nameOfMonth \u003d \"May\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 5 : nameOfMonth \u003d \"June\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 6 : nameOfMonth \u003d \"July\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 7 : nameOfMonth \u003d \"August\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 8 : nameOfMonth \u003d \"September\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 9 : nameOfMonth \u003d \"October\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 10 : nameOfMonth \u003d \"November\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            case 11 : nameOfMonth \u003d \"December\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String hoursAndMinutes;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (endTime.get(Calendar.HOUR_OF_DAY) \u003c\u003d 12) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes \u003d endTime.get(Calendar.HOUR_OF_DAY) + \":\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes \u003d endTime.get(Calendar.HOUR) + \":\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (endTime.get(Calendar.MINUTE) \u003c 10) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"0\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        hoursAndMinutes +\u003d endTime.get(Calendar.MINUTE);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (endTime.get(Calendar.AM_PM) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"am\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            hoursAndMinutes +\u003d \"pm\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return endTime.get(Calendar.DAY_OF_MONTH) + jargon"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + nameOfMonth + \", \""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + endTime.get(Calendar.YEAR) + \". \""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + hoursAndMinutes;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + this.printStartTime() + \" - \""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + this.printEndTime()"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 163
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private boolean valid \u003d true;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Parser(String command) throws DukeException{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String[] commandWords \u003d command.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String order \u003d commandWords[0];"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (command.split(order  + \" \").length \u003d\u003d 1 \u0026\u0026"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                (order.equals(\"event\") || order.equals(\"todo\") || order.equals(\"deadline\"))) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            throw new DukeException(\" :( OOPS!!! The description of \" + order + \"s cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        if (order.equals(\"todo\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            type \u003d \"todo\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (command.split(\"todo \").length \u003e 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                list.add(command.split(\"todo \")[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                throw new DukeException(\" :( OOPS!!! Please provide description.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else if (order.equals(\"event\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (command.split(\"/at\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                throw new DukeException(\" :( OOPS!!! An event must have a start and end time. Use \u0027/at\u0027.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            type \u003d \"event\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String instruction \u003d command.split(\"event \")[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String[] details \u003d instruction.split(\" /at \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (details.length !\u003d 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                throw new DukeException(\" :( OOPS!!! Invalid Format. Either Description or Date\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        \"and start and end time not provided.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String[] dateAndTime \u003d details[1].split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (dateAndTime.length !\u003d 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                throw new DukeException(\" :( OOPS!!! Invalid format. Please enter \u0027DD/MM/YYYY HHMM-HHMM\u0027\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String[] dateArray \u003d dateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (dateAndTime[1].split(\"-\").length !\u003d 2) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                throw new DukeException(\" :( OOPS!!! Invalid format. Must enter start and end time.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            int startTime \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            int endTime \u003d 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                startTime \u003d Integer.parseInt(dateAndTime[1].split(\"-\")[0]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                endTime \u003d Integer.parseInt(dateAndTime[1].split(\"-\")[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                throw new DukeException(\" :( OOPS!!! Invalid Format. Please enter numbers for date and time in \" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        \"\u0027DD/MM/YYYY HHMM-HHMM\u0027 format\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            int startHours \u003d startTime / 100;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            int startMinutes \u003d startTime % 100;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            int endHours \u003d endTime / 100;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            int endMinutes \u003d endTime % 100;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(details[0]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(dateArray[0]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(dateArray[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(dateArray[2]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(\"\" + startHours);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(\"\" + startMinutes);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(\"\" + endHours);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(\"\" + endMinutes);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else if (order.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            type \u003d \"deadline\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (command.split(\"/by\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                throw new DukeException(\" :( OOPS!!! An deadline must have date and time. Use \u0027/by\u0027.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String instruction \u003d command.split(\"deadline \")[1];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String[] details \u003d instruction.split(\" /by \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (details.length !\u003d 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                throw new DukeException(\" :( OOPS!!! Invalid Format. Either Description or DateAndTime not provided.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String[] dateAndTime \u003d details[1].split(\" \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (dateAndTime.length !\u003d 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                throw new DukeException(\" :( OOPS!!! Invalid format for date and time. Please enter \u0027DD/MM/YYYY HHMM\u0027\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String[] dateArray \u003d dateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            int time \u003d 0;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                time \u003d Integer.parseInt(dateAndTime[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                throw new DukeException(\" :( OOPS!!! Invalid Format. Please enter numbers for date and time in \" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        \"\u0027DD/MM/YYYY HHMM\u0027 format\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            int hours \u003d time / 100;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            int minutes \u003d time % 100;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(details[0]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(dateArray[0]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(dateArray[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(dateArray[2]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(\"\" + hours);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(\"\" + minutes);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else if (order.equals(\"done\") || order.equals(\"delete\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            type \u003d order;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            list.add(command.split(order + \" \")[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else if (order.equals(\"list\") || order.equals(\"bye\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            type \u003d order;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            valid \u003d false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public ArrayList\u003cString\u003e getList() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public boolean isValid() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return valid;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 113
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException, IOException{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        Scanner reader \u003d new Scanner(f);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        while(reader.hasNext()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String s \u003d reader.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String[] tempArray \u003d s.split(\" -- \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (tempArray[0].equals(\"[D]\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                String dateTime \u003d tempArray[3];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Calendar dateAndTime \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                String[] date \u003d dateTime.split(\" \")[0].split(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                int time \u003d Integer.parseInt(dateTime.split(\" \")[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                int hours \u003d time / 100;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                int minutes \u003d time % 100;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                dateAndTime.set(Integer.parseInt(date[2]),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        Integer.parseInt(date[1]),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        Integer.parseInt(date[0]),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        hours,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        minutes);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                t \u003d new Deadline(tempArray[2], dateAndTime);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } else if (tempArray[0].equals(\"[E]\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                String dateTime \u003d tempArray[3];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Calendar startDateAndTime \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Calendar endDateAndTime \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                String[] date \u003d dateTime.split(\" \")[0].split(\"/\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                int startTime \u003d Integer.parseInt(dateTime.split(\" \")[1].split(\"-\")[0]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                int endTime \u003d Integer.parseInt(dateTime.split(\" \")[1].split(\"-\")[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                int startHours \u003d startTime / 100;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                int startMinutes \u003d startTime % 100;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                int endHours \u003d endTime / 100;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                int endMinutes \u003d endTime % 100;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                startDateAndTime.set(Integer.parseInt(date[2]),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        Integer.parseInt(date[1]),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        Integer.parseInt(date[0]),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        startHours,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        startMinutes);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                endDateAndTime.set(Integer.parseInt(date[2]),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        Integer.parseInt(date[1]),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        Integer.parseInt(date[0]),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        endHours,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        endMinutes);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                t \u003d new Event(tempArray[2], startDateAndTime, endDateAndTime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }else if (tempArray[0].equals(\"[T]\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                t \u003d new ToDo(tempArray[2]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                throw new DukeException(\" :( OOPS!!! Not a valid Task type.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (tempArray[1].equals(\"[+]\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            result.add(t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void update(TaskList tasks) throws IOException{"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        for (Task t : tasks.getArr()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            String type \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (t instanceof Event) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                type \u003d \"E\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } else if (t instanceof ToDo) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                type \u003d \"T\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                type \u003d \"D\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            textToAdd +\u003d \"[\" + type + \"] -- \" + \"[\" + t.getStatusIcon() + \"] -- \" + t.getDescription();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (t instanceof Event) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Calendar startTime \u003d ((Event) t).getStartTime();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Calendar endTime \u003d ((Event) t).getEndTime();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d \" -- \" + startTime.get(Calendar.DAY_OF_MONTH) + \"/\" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        startTime.get(Calendar.MONTH) + \"/\" + startTime.get(Calendar.YEAR) + \" \";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (startTime.get(Calendar.HOUR_OF_DAY) \u003c 10) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    textToAdd +\u003d \"0\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d startTime.get(Calendar.HOUR_OF_DAY);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (startTime.get(Calendar.MINUTE) \u003c 10) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    textToAdd +\u003d \"0\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d startTime.get(Calendar.MINUTE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d \"-\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (endTime.get(Calendar.HOUR_OF_DAY) \u003c 10) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    textToAdd +\u003d \"0\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d endTime.get(Calendar.HOUR_OF_DAY);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (endTime.get(Calendar.MINUTE) \u003c 10) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    textToAdd +\u003d \"0\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d endTime.get(Calendar.MINUTE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                Calendar time \u003d ((Deadline) t).getTime();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d \" -- \" + time.get(Calendar.DAY_OF_MONTH) + \"/\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                        time.get(Calendar.MONTH) + \"/\" + time.get(Calendar.YEAR) + \" \";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (time.get(Calendar.HOUR_OF_DAY) \u003c 10) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    textToAdd +\u003d \"0\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d time.get(Calendar.HOUR_OF_DAY);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                if (time.get(Calendar.MINUTE) \u003c 10) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    textToAdd +\u003d \"0\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                textToAdd +\u003d time.get(Calendar.MINUTE);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            textToAdd +\u003d \"\\n\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 126
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Task(String des) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        description \u003d des;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return isDone ? \"+\" : \"-\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 25
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    private ArrayList\u003cTask\u003e arr;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e arrayList) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        arr \u003d arrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        arr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public ArrayList\u003cTask\u003e getArr() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return arr.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return arr.get(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return arr.remove(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        arr.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 33
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public ToDo(Parser parser) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        super(parser.getList().get(0));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public ToDo(String des) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        super(des);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public static String hr \u003d \"______________________________________________________________________\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        this.printLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        this.printLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void showGoodBye() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        this.printLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void showException (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void showNumberFormatError(String type) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        switch(type) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case \"done\" : System.err.println(\" :( OOPS!!! Invalid format.\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    \" Please enter the number of the task to be marked as done.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        case \"delete\" : System.err.println(\" :( OOPS!!! Invalid format.\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "                    \" Please enter the number of the task to be deleted.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(hr);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void showTaskCreated(Task task, int noOfTasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(\" \" + task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(\"Now you have \" + noOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void showTaskDone(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void showTaskDeleted(Task task, int noOfTasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(\" \" + task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.out.println(\"Now you have \" + noOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void showTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d taskList.getArr();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        for(int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            Task temp \u003d arr.get(i);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "            System.out.println((i + 1) + \". \" + temp);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "        System.err.println(\" :( OOPS!!! Error occurred while loading the history file.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ManasVegi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ManasVegi": 69
    }
  }
]
