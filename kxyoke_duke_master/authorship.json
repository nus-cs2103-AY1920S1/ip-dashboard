[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    compile \u0027org.openjfx:javafx-maven-plugin:0.0.3\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "run {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "compileJava.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "compileTestJava.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "tasks.withType(Test) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    systemProperty \"file.encoding\", \"UTF-8\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 44,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "* Add, show and delete tasks: Todo, Deadline and Event tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "* Save and load past tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "* Mark tasks as done"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "* Find tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "* Add notes"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### Feature 1 : Add, show and delete tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "You can create tasks that are either todos, tasks with deadlines or events. Each task will have a brief description and whether it has been completed or not. Tasks can optionally have notes, which will be added later on after initial creation of the task. Created tasks can be listed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "When a task is no longer relevant, you can delete it as well, which removes it from memory and will not be retrievable."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### Feature 2 : Save and load past tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Eva will save your created data and load any available data when you start up Eva."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### Feature 3: Mark tasks as done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "You can mark tasks as done and Eva will remember and indicate that it is completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### Feature 4: Find tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "You can search for tasks using keywords and Eva will list out the matching tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### Feature 5: Add notes"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "If you have additional notes you want to supplement to tasks, you can add them after creating those tasks. These task notes will be displayed together with the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Alternatively, if you wish to add general notes to remind you of general things not related to just a single task, you can add general notes as well."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### `todo \u003ctask description\u003e` - Create a todo task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Creates and adds to the list of tasks a todo task with the task description. Upon creation, the todo task is not completed and does not have any supplementary notes."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`todo relax and distress`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "![Todo example](todoeg.png)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### `deadline \u003ctask description\u003e /by \u003cdate \u0026 time\u003e` - Create a deadline task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Creates and adds to the list of tasks a deadline task with the task description and a deadline @ date time."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Do note that the date time has a specific format of `dd/MM/yyyy HHmm`, such as `18/09/2019 2359`."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Example usage:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`deadline iP w6 stuff /by 18/09/2019 2359`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "![Deadline example](deadlineeg.png)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### `event \u003ctask description\u003e /at \u003cdate \u0026 time period\u003e` - Create an event"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Creates and adds to the list of tasks an event with the task description, and will occur at the given date \u0026 time period."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Do note that there is no specific format for the date and time for events."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`event cs2103t meeting /at 19/09/2019 1-2pm`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "![Event example](eventeg.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### `list` - Show the list of tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Lists out the tasks in order of creation. Each task will be displayed in the following format:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`id.[task type][is completed] task description (any other information)`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "![List example](listeg.png)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### `done \u003cid\u003e` - Mark task as completed"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Marks the task with the id as completed."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "![Done example](doneeg.png)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### `find \u003ckeyword or phrase\u003e` - Find tasks with matching keyword"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Searches for tasks that contain the given keyword or phrase and lists all matching tasks out."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`find stress`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "![Find example](findeg.png)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### `setnotes (id) \u003cnote content\u003e` - Set notes"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "If id is given, the note with note content will be set to the task with the id. This task note will be displayed together with the task it is attached to."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Otherwise, the note will be set as a general note. "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Example of usage 1 (set notes to task): "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`setnotes 1 i promise i will get there soon`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Expected outcome 1 (set notes to task):"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "![Set notes to task example](setnotestaskeg.png)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Example of usage 2 (set general notes): "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`setnotes i will probably want to complete all these in 20min`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Expected outcome 2 (set general notes):"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "![Set general notes example](setnotesgeneg.png)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### `listnotes` - List all general notes"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Lists all general notes in order of creation."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`listnotes`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "![List general notes example](listnoteseg.png)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### `deletenotes general \u003cid\u003e` - Delete a general note"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Deletes the general note with the id amongst general notes (their numbers when listed with listnotes)."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`deletenotes general 1`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "![Delete general notes example](deletegennoteseg.png)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### `deletenotes task \u003cid\u003e` - Delete a task\u0027s note"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Deletes the note of task with the id."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`deletenotes task 1`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "![Delete task notes example](deletetasknoteseg.png)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "### `delete \u003ctask id\u003e` - Delete a task"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "Deletes the task with the id."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "![Delete task example](deleteeg.png)"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 152,
      "-": 14
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.parse.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.NoteList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Acts as a chatbot to remember your tasks at hand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * There will be three kinds of tasks: Todo, Deadline, Event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Valid inputs include:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code list} to list the tasks it remembered so far;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code todo some todo description} to save a new Todo task with description \"some todo description\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code deadline something /by dd/MM/yyyy HHmm} to save a new Deadline task with description \"something\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * and deadline dd/MM/yyyy HHmm;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code event some event /at datetime} to save a new Event task with description \"some event\" held at datetime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code done id} to mark the (id)th task as completed;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code delete id} to remove the (id)th task from list of tasks to remember;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code bye} or {@code exit} to exit from duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Duke will save the tasks in a file (\"./data/tasks.txt\") and read from it."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Handles task file reading and writing. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Storage storageTask;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Handles notes file reading and writing. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Storage storageNotes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Handles direct changes to list of tasks. */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Handles system i/o in duke format. */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Handles list of notes. */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private NoteList notes;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String taskFilepath \u003d \"./data/tasks.txt\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String notesFilepath \u003d \"./data/notes.txt\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs Duke object to be called by Application launcher, javafx."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Storage filepath used default ./data/tasks.txt."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.storageTask \u003d new Storage(taskFilepath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.storageNotes \u003d new Storage(notesFilepath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            this.tasks \u003d new TaskList(storageTask.loadTaskFromFile());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            this.notes \u003d new NoteList(storageNotes.loadNotesFromFile());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            tasks.setupNotes(notes);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            this.notes \u003d new NoteList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String showDukeWelcome() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.ui.showWelcome();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets response from duke logic given a command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param fullCommand the entire command given to duke."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return the response by duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getResponse(String fullCommand) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String res;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            res \u003d c.execute(this.tasks, this.ui, this.storageTask, this.storageNotes, this.notes);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            res \u003d e.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assert res !\u003d null : \"getResponse cannot work properly\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 77,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            stage.setTitle(\"Duke\u0027s colleague Eva\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 32
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.awt.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** To auto close using code to close button? */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Button closeButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/walle.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/eve.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (input.contains(\"bye\") || input.equalsIgnoreCase(\"exit\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            closeButtonAction();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                DialogBox.getDukeDialog(duke.showDukeWelcome(), dukeImage)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Closes GUI. This is a onClick callback function, but can be used"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * for this purpose."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void closeButtonAction() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //get a handle to the stage?"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Stage stage \u003d (Stage) closeButton.getScene().getWindow();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //ahhh then what i have to do when this fn is called aka close"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        stage.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 79
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.NoteList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents an add task command. Command has 2 main attributes: task type and full description of task to add."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Task type of task to add. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private TaskType taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Task type of task to add. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String fullDescription;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs an add command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskType task type of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param descr description of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public AddCommand(TaskType taskType, String descr) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.fullDescription \u003d descr;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates and adds new task to list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param tasks TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageTasks Storage agent in charge of writing to file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageNotes"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param noteList"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if command is invalid or cannot write to file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storageTasks, Storage storageNotes, NoteList noteList) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task newTask \u003d TaskList.createTask(this.taskType, this.fullDescription);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        tasks.addData(newTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        storageTasks.updateFileWithTask(tasks, noteList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"  \" + newTask.toString(),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                String.format(\"Now you have %d tasks in the list\", tasks.getSize()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 51
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/AddNotesCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.InvalidIdException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.parse.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Note;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.NoteList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents a command that lists notes. Notes can be general (not tagged to any task) or specific (tagged to task)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class AddNotesCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private boolean isGeneralNote;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private int taskIdBoundTo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String noteContent;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a list command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public AddNotesCommand(String fulldescr) {//String n, int taskId) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Scanner sc \u003d new Scanner(fulldescr);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String taskIdStr \u003d sc.next();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.isGeneralNote \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int taskId \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String n \u003d fulldescr;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            taskId \u003d Parser.parseStrToInt(taskIdStr);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            n \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            this.isGeneralNote \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.noteContent \u003d n;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskIdBoundTo \u003d taskId;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Lists all general notes."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param tasks TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageTasks Storage agent in charge of writing to file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageNotes"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param noteList NoteList agent to handle list of notes."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storageTasks, Storage storageNotes, NoteList noteList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String val;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (isGeneralNote) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            val \u003d addGeneralNotes(ui, noteList, noteContent);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            val \u003d addNotesToTask(ui, noteList, noteContent, tasks, taskIdBoundTo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        storageNotes.updateFileWithNote(noteList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return val;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String addNotesToTask(Ui ui, NoteList noteList, String n, TaskList tasks, int taskId) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (taskId \u003e tasks.getSize() || taskId \u003c 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIdException(\"\" + taskId);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task t \u003d tasks.retrieveTask(taskId);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Note note \u003d new Note(n, true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        noteList.addNote(note);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        t.setNotes(note, noteList.getNoteListSize());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //System.out.println(t.getNoteId());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(\"Got it. I\u0027ve added this note:\","
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"  \" + note.toString(),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"to this task:\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                t.toString(),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"You can view it when you search/find a task.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String addGeneralNotes(Ui ui, NoteList noteList, String n) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Note note \u003d new Note(n);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        noteList.addNote(note);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        noteList.addGeneralNote(note);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(\"Got it. I\u0027ve added this general note:\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"  \" + note.toString(),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"Enter command: \u003clistnotes\u003e to list all general notes you\u0027ve added.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 91
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents all valid commands Duke will encounter."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Indicates whether command is an exit command. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates and adds new task to list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskList TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageTasks Storage agent in charge of reading/writing of tasks to file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageNotes Storage agent in charge of reading/writing of notes to file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param noteList NoteList agent to handle list of notes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return any outputs/exceptions."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storageTasks, Storage storageNotes, NoteList noteList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Returns whether command is an exit command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return true if is exit command, else false."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 33
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.NoIdGivenException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.parse.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.NoteList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents a delete command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Position of task in list of tasks to remove. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String taskId;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs delete command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param idString position of task in list to remove."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public DeleteCommand(String idString) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskId \u003d idString;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Deletes task from list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param tasks TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageTasks Storage agent in charge of writing to file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageNotes"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param noteList"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if command is invalid or cannot write to file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storageTasks, Storage storageNotes, NoteList noteList) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (this.taskId.equals(\"\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new NoIdGivenException(\"delete\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int id \u003d Parser.parseStrToInt(this.taskId);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task task \u003d tasks.deleteTask(id);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (task.hasNotes()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            int noteId \u003d task.getNoteId();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            noteList.deleteNote(noteId - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //tasks.updateNoteIdForEveryone(noteId);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        storageTasks.updateFileWithTask(tasks, noteList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(\"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"  \" + task.toString(),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                String.format(\"Now you have %d tasks in the list.\", tasks.getSize()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 57
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/DeleteNotesCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.InvalidIdException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Note;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.NoteList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class DeleteNotesCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private boolean isDeletingGeneral;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private int id;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public DeleteNotesCommand(String msg) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        distinguishCommand(msg);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void distinguishCommand(String msg) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Scanner sc \u003d new Scanner(msg);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (!sc.hasNext()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new EmptyDescriptionException(\"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String token1 \u003d sc.next();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        switch (token1.toUpperCase()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"GENERAL\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            isDeletingGeneral \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"TASK\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            isDeletingGeneral \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new DukeException(\"must give either general or task keywords\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (!sc.hasNextInt()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIdException(sc.next());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        id \u003d sc.nextInt();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storageTasks, Storage storageNotes, NoteList noteList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (isDeletingGeneral) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return ui.dukeRespond(deleteGeneralNote(noteList, id));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return ui.dukeRespond(deleteTaskNote(taskList, noteList, id));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String deleteGeneralNote(NoteList notes, int id) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        List\u003cNote\u003e genNotes \u003d notes.getGeneralNotes();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (id \u003e genNotes.size() || id  \u003c 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIdException(\"\" + id);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Note n \u003d notes.deleteNote(notes.getGenNoteId(id - 1));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        notes.getGeneralNotes().remove(id - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"Got it. Deleted general note: %s\", n.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String deleteTaskNote(TaskList tasks, NoteList notes, int id) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (id \u003e tasks.getSize() || id \u003c 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIdException(\"\" + id);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task t \u003d tasks.retrieveTask(id);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int noteid \u003d t.getNoteId();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        t.deleteNotes();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        notes.deleteNote(noteid - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"Got it. Deleted note for task %d\", id);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 84
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.NoIdGivenException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.parse.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.NoteList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents a done command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Position of the task in list of tasks to mark as done. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String taskId;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs done command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param idString position of task in list to mark as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public DoneCommand(String idString) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskId \u003d idString;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param tasks TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageTasks Storage agent in charge of writing to file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageNotes"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param noteList"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if command is invalid or cannot write to file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storageTasks, Storage storageNotes, NoteList noteList) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (this.taskId.equals(\"\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new NoIdGivenException(\"done\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int id \u003d Parser.parseStrToInt(this.taskId);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task task \u003d tasks.markDone(id);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        storageTasks.updateFileWithTask(tasks, noteList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(\"Nice! I\u0027ve marked this task as done:\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"  \" + task.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 51
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents an exit command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs an exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates and adds new task to list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskList TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageTasks Storage agent in charge of writing to file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageNotes"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param noteList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storageTasks, Storage storageNotes, NoteList noteList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        storageTasks.updateFileWithTask(taskList, noteList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        storageNotes.updateFileWithNote(noteList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 33
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents a find command. Searches for occurrence of a given phrase in the description of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * This includes searches into the notes of a task, or also searching for general notes."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Keyword to find in task strings. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String wordToFind;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a find command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param keyword phrase to find in task descriptions."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.wordToFind \u003d keyword;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Finds tasks that contain keyword."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskList TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageTasks Storage agent in charge of reading/writing to file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageNotes"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param noteList"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return String containing list of tasks that have that keyword."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storageTasks, Storage storageNotes, NoteList noteList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d taskList.findTasks(this.wordToFind);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (foundTasks.isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return ui.dukeRespond(\"Sorry! I can\u0027t find any matching tasks in your list. Try another phrase?\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(getStringArray(foundTasks));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String[] getStringArray(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] strings \u003d new String[tasks.size() + 1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        strings[0] \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int listIndex \u003d 0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            listIndex++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            strings[listIndex] \u003d String.format(\"%d.%s\", listIndex, task.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return strings;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 57
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.NoteList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents a list command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a list command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Lists tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param tasks TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageTasks Storage agent in charge of writing to file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageNotes"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param noteList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storageTasks, Storage storageNotes, NoteList noteList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return tasks.listTasks(ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 31
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/ListGeneralNotesCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.file.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.NoteList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class ListGeneralNotesCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public ListGeneralNotesCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates and adds new task to list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param tasks TaskList agent to handle list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui Ui in charge of printing."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageTasks Storage agent in charge of writing to file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param storageNotes"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param noteList NoteList agent"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if command is invalid or cannot write to file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storageTasks, Storage storageNotes, NoteList noteList) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return noteList.listGeneralNotes(ui);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 27
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents all exceptions that will be encountered in the Duke chatbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * This can be thrown when input formats and keywords are incorrect, correct format but invalid arguments,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * or when the file cannot be opened properly."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a DukeException."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Parent class IllegalArgumentException is initialized."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg error message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 17
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents exceptions where no description is given after keywords todo, deadline or event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Keyword that caused this exception. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs EmptyDescriptionException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg keyword of task command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public EmptyDescriptionException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.type \u003d msg;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"\\u2639 OOPS!!! The description of %s cannot be empty.\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                this.type);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 24
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exception/IncorrectTaskFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents exceptions where deadline or event command does not have the correct format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class IncorrectTaskFormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** The keyword that indicates next argument is date/time. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String keyword2;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs IncorrectTaskFormatException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg by or at (for deadline and event respectively)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public IncorrectTaskFormatException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.keyword2 \u003d msg;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"\\u2639 Aish try again with the correct format: \u003cdescr\u003e /%s \u003cdateinfo\u003e\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                this.keyword2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 24
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exception/InvalidIdException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents exceptions where done or delete command is given an invalid id."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class InvalidIdException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Position of task in list. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String id;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs an InvalidIDException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg position of task in list (1-based)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public InvalidIdException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.id \u003d msg;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"\\u2639 AIGOO!! %s is an invalid ID!\", this.id);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 23
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exception/InvalidKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents exceptions where an invalid keyword (of command) is given."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class InvalidKeywordException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs an InvalidKeywordException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public InvalidKeywordException(String msg) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return \"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 19
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exception/NoIdGivenException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents exceptions where no id is given with the done or delete command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class NoIdGivenException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Command (done or delete). */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a NoIdGivenException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg command keyword that caused this exception."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public NoIdGivenException(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.cmd \u003d msg;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"Please give a ID with your %s command\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                this.cmd);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 25
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/file/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.file;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.parse.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Encapsulates logic and format to write files to and read files from. Each storage object is in charge of a single"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * file. Duke keeps track of 2 files: 1. Files containing tasks; 2. Files containing notes."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * A Task file should contain the following format for each line:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code [T/D/E] | [✗/✓] | [note_id] | [description [| date as per required input]]}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * For example, {@code D | ✗ | 1 | this is a deadline description | 31/8/2019 2359}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * or {@code T | ✓ | 0 | this is a todo description}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * A Note file should contain the following format for each line:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * {@code [0/1] | content_of_note}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * For example, {@code 0 | this note is not bound, aka it is a general note.}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * or {@code 1 | this is a bound note; it\u0027s bound to some task but it doesn\u0027t know.}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Path to file to read/write. */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a Storage object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param filepath path to file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Writes to file the contents of taskList, without appending to original file contents."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskList list of tasks to write to file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param noteList"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if cannot write to file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void updateFileWithTask(TaskList taskList, NoteList noteList) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            FileWriter fr \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fr \u003d new FileWriter(new File(filepath), true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            BufferedWriter br \u003d new BufferedWriter(fr);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                if (t.hasNotes()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    t.setNoteId(noteList.getUpdatedTaskNoteId(t.getNoteId()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                br.write(getTaskDetailToPrint(t));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new DukeException(\"cannot write to file\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String getTaskDetailToPrint(Task t) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String s \u003d String.format(\"%s | %d | %d | %s\\r\\n\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                t.getTaskType(), boolToInt(t.isCompleted()), t.getNoteId(), t.getDescription());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Reads and loads tasks stored in file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Returns an empty List if file is empty."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if cannot read from file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public List\u003cTask\u003e loadTaskFromFile() throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            BufferedReader br \u003d new BufferedReader("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    new FileReader(file));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                Task task \u003d parseTaskLine(line);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new DukeException(\"cannot read file\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Task parseTaskLine(String line) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        final int TASKTYPE \u003d 0, COMPLETE \u003d 1, DESCR \u003d 3, NOTES_ID \u003d 2, DATE_IF_APPLICABLE \u003d 4;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] sections \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        TaskType taskType \u003d TaskType.convertToTaskType(sections[TASKTYPE]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        boolean completed \u003d intStrToBool(sections[COMPLETE]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String description \u003d sections[DESCR];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int notesId \u003d Parser.parseStrToInt(sections[NOTES_ID]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String datetime \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String term \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (taskType \u003d\u003d TaskType.E) {       //actually can just store as you read in one... but ok"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            term \u003d \" /at \";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } else if (taskType \u003d\u003d TaskType.D) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            term \u003d \" /by \";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (sections.length \u003e DATE_IF_APPLICABLE) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            datetime \u003d term + sections[DATE_IF_APPLICABLE];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task task \u003d TaskList.createTask(taskType, description + datetime);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (completed) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            task.setCompleted();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (notesId !\u003d 0) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            task.setNoteId(notesId);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assert notesId \u003e\u003d 0 : \"for some reason notesId read from task file can be -ve O.O\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private static int boolToInt(boolean b) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return b ? 1 : 0;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private static boolean intStrToBool(String intStr) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assert intStr.length() \u003d\u003d 1 : \"Neither \u00270\u0027 nor \u00271\u0027 was passed into intStrToBool\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return intStr.equals(\"1\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public List\u003cNote\u003e loadNotesFromFile() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        List\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //file.mkdirs();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            BufferedReader br \u003d new BufferedReader("
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    new FileReader(file));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //NEED TO PARSE ALSO: ISBOUND | CONTENT"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                Note note \u003d parseNoteLine(line);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                notes.add(note);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new DukeException(\"cannot read file\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return notes;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Note parseNoteLine(String line) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        final int IS_BOUND \u003d 0, CONTENT \u003d 1;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] sections \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        boolean isBound \u003d intStrToBool(sections[IS_BOUND]);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String content \u003d sections[CONTENT];"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return new Note(content, isBound);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void updateFileWithNote(NoteList notes) throws DukeException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        List\u003cNote\u003e noteList \u003d notes.getNoteList();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            FileWriter fr \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fr \u003d new FileWriter(new File(filepath), true);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            BufferedWriter br \u003d new BufferedWriter(fr);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            for (Note n : noteList) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                if (n.isDeleted()) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                br.write(getNoteDetailToPrint(n));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new DukeException(\"cannot write to file\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String getNoteDetailToPrint(Note n) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"%d | %s\\r\\n\", boolToInt(!n.isGeneral()), n.getContent());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 207
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/parse/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.parse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.InvalidIdException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.InvalidKeywordException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents parsing logic for commands. A full command will have the first word as one of the valid keywords (matching"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * a TaskType, and subsequent words should match the required format (@see Duke), or an Exception may be thrown."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Full command. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constucts a parser on input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param input full command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets the TaskType of the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return the task type."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if keyword is invalid."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public TaskType getInputTaskType() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String keyword \u003d this.input.split(\"\\\\s+\")[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        TaskType taskType \u003d TaskType.convertToTaskType(keyword);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (taskType \u003d\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidKeywordException(keyword);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets the String of command after the keyword."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Returns an empty string if full command contains \u003c2 words."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return description."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getInputEntireDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Scanner sc \u003d new Scanner(this.input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        sc.next();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (sc.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            description \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Parses fullCommand String input into a Command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param fullCommand user input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return Command corresponding to user input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if no valid input is given."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (fullCommand.equals(\"\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new DukeException(\"Please give me a command master! (You didn\u0027t input any command, but entered...\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Parser parser \u003d new Parser(fullCommand);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        TaskType taskType \u003d parser.getInputTaskType();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String descr \u003d parser.getInputEntireDescription();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Command cmd \u003d getCommand(taskType, descr);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assert cmd !\u003d null : \"Command is null for some reason after parsing.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return cmd;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private static Command getCommand(TaskType t, String d) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Command cmd;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        switch (t) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new ListCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new DeleteCommand(d);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new DoneCommand(d);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new ExitCommand();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new FindCommand(d);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case GETGENERALNOTES:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new ListGeneralNotesCommand();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case SETNOTES:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new AddNotesCommand(d);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case DELETENOTES:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new DeleteNotesCommand(d);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case T: //fallthrough"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case D: //fallthrough"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case E: //fallthrough"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d new AddCommand(t, d);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            cmd \u003d null;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return cmd;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Converts string to Date."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param input string containing date."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return Date object representing the date."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if input is not in \"dd/MM/yyyy HHmm\" format."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Date convertToDate(String input) throws DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(input);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new DukeException(\"Date is wrong format, try again\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Converts string to int."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param input string containing only the id."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return id."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if string is not in parsable format."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static int parseStrToInt(String input) throws DukeException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int id \u003d 0;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            id \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIdException(input);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 150
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.IncorrectTaskFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.parse.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents a task with deadline. Deadline tasks have 4 main attributes: their type, description, by when, and"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * whether it is completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Description of deadline task without the date time. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Date time information in the following format: (by: date time). */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String notesInBrackets;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** String containing only date and time. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String datetime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Date object representing date and time. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Deadline() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Deadline(String descr, boolean completed) throws IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isCompleted \u003d completed;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.taskType \u003d TaskType.D;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        setupDetails(descr);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void setupDetails(String input) throws IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        final int DESCR \u003d 0, DATE_INDEX \u003d 1, NUM_MUST_HAVE_SECTIONS \u003d 2;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] sections \u003d input.split(\"\\\\s+/by\\\\s+\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //inputs should only have \u003c\u003d1 \u0027/\u0027 characters"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (sections.length \u003c NUM_MUST_HAVE_SECTIONS) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new IncorrectTaskFormatException(\"by\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.description \u003d sections[DESCR];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String term \u003d \"by\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String date \u003d sections[DATE_INDEX];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (date.equals(\"\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new IncorrectTaskFormatException(\"by\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.notesInBrackets \u003d String.format(\"%s: %s\", term, date);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.description \u003d String.format(\"%s (%s)\", this.description, this.notesInBrackets);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.datetime \u003d date;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.date \u003d Parser.convertToDate(date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assert this.date !\u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates a deadline task with the description of task (including date time information)."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param descr Description of task including date and time."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return Deadline object representing task with the description."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws EmptyDescriptionException if description is empty."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws IncorrectTaskFormatException if task format is incorrect."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Deadline create(String descr) throws EmptyDescriptionException, IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (descr.equals(\"\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new EmptyDescriptionException(\"a deadline\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Deadline newTask \u003d new Deadline(descr.trim(), false);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"%s | %s\", this.description, this.datetime);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 82
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.IncorrectTaskFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents an event task. Event tasks have 4 main attributes: their type, description, at when, and"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * whether it is completed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Description of event task without the date time. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Date time information in the following format: (at: date time). */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String notesInBrackets;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** String containing only date and time. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String datetime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Event() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Event(String descr, boolean completed) throws IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isCompleted \u003d completed;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.taskType \u003d TaskType.E;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        setupDetails(descr);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void setupDetails(String input) throws IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        final int DESCR \u003d 0, DATE_INDEX \u003d 1, NUM_MUST_HAVE_SECTIONS \u003d 2;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] sections \u003d input.split(\"\\\\s+/at\\\\s+\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.description \u003d sections[DESCR];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //inputs should only have \u003c\u003d1 \u0027/\u0027 characters"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (sections.length \u003c NUM_MUST_HAVE_SECTIONS) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new IncorrectTaskFormatException(\"at\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String term \u003d \"at\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String datetime \u003d sections[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (datetime.equals(\"\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new IncorrectTaskFormatException(\"at\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.notesInBrackets \u003d String.format(\"%s: %s\", term, datetime);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.description \u003d String.format(\"%s (%s)\", this.description, this.notesInBrackets);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates an event task with the description of task (including date time information)."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param descr Description of task including date and time."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return Event object representing task with the description."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws EmptyDescriptionException if description is empty."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws IncorrectTaskFormatException if task format is incorrect."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Event create(String descr) throws EmptyDescriptionException, IncorrectTaskFormatException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (descr.equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new EmptyDescriptionException(\"an event\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Event newTask \u003d new Event(descr.trim(), false);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"%s | %s\", this.description, this.datetime);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 71
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/Note.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Note {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Content of note. */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Whether note is general or bound to task. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private boolean isGeneral;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Whether note is deleted virtually already. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private boolean isDeleted;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Note() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Note(String note) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.isGeneral \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.content \u003d note;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.isDeleted \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Note(String note, boolean isBound) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.content \u003d note;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.isGeneral \u003d !isBound;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.isDeleted \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public boolean isGeneral() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return isGeneral;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public boolean isDeleted() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return isDeleted;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void setDeleted() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        isDeleted \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void updateContent(String newContent) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.content \u003d newContent;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.content;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 51
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/NoteList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.TreeSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class NoteList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private List\u003cNote\u003e notes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private List\u003cNote\u003e generalNotes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Ids of all the notes deleted so far. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private TreeSet\u003cInteger\u003e deletedIds;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public NoteList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.notes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        deletedIds \u003d new TreeSet\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        generalNotes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public NoteList(List\u003cNote\u003e notes) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.notes \u003d notes;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        deletedIds \u003d new TreeSet\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        generalNotes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        extractGeneralNotes(generalNotes, notes);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void extractGeneralNotes(List\u003cNote\u003e genNotes, List\u003cNote\u003e notes) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (Note n : notes) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            if (n.isGeneral()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                genNotes.add(n);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets note at id."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param id 0-based id"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return note"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Note getNote(int id) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.notes.get(id);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets the list of notes."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return list of all notes."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public List\u003cNote\u003e getNoteList() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return notes;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public List\u003cNote\u003e getGeneralNotes() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return generalNotes;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public int getNoteListSize() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return notes.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void addNote(Note n) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        notes.add(n);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void addGeneralNote(Note n) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        generalNotes.add(n);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Marks note as deleted. Note will be deleted when program is terminating."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param id id of the note to be deleted."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return the note to be deleted."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Note deleteNote(int id) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.deletedIds.add(id);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Note n \u003d getNote(id);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        n.setDeleted();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return n;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public int getGenNoteId(int id) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int genId \u003d 0;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Note gen \u003d generalNotes.get(id);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (Note n : notes) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            if (n \u003d\u003d gen) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            genId++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return genId;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets the updated task note id. //This will be used before writing to the file."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param id current (not updated) id of note (of some task)."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return updated id of note."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public int getUpdatedTaskNoteId(int id) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Iterator\u003cInteger\u003e it \u003d deletedIds.iterator();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int numDeletedIdsLessThanId \u003d 0;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        while (it.hasNext() \u0026\u0026 id \u003e it.next()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            numDeletedIdsLessThanId++;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return id - numDeletedIdsLessThanId;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Prints out the list of general notes."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui ui in charge of printing."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String listGeneralNotes(Ui ui) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] noteStrings \u003d new String[generalNotes.size() + 1];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        noteStrings[0] \u003d \"Here are the general notes in your list:\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int listIndex \u003d 0;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (Note n : generalNotes) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            listIndex++;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            noteStrings[listIndex] \u003d String.format(\"%d.%s\", listIndex, n.toString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(noteStrings);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 124
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents tasks, each with 3 main attributes: task type, description, whether it is completed."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * A task can have up to 1 note."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Tick symbol. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Cross symbol. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static final String CROSS \u003d \"\\u2717\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Description of task. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Whether task is completed. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Task type of task. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Notes of task. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected Note note;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Whether task has notes. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected boolean hasNotes \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Id of notes in Notes list. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    protected int noteId;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //getter mtds"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets description of task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return description (notes, if any)."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets whether task is completed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return true if completed, false otherwise."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.isCompleted;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets task type of task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return TaskType of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets task notes."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return notes of task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Note getNotes() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assert this.hasNotes : \"No notes available to be retrieved\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.note;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets whether task has notes."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return true if task has notes, false otherwise."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public boolean hasNotes() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.hasNotes;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets id of notes in Notes list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return note id."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public int getNoteId() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.noteId;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //setter mtds"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Sets task to completed."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Sets notes and id of notes of task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param note notes to set for task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param id id of said notes in list of notes."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void setNotes(Note note, int id) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        setNotes(note);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.hasNotes \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.noteId \u003d id;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Sets note of task as given note."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param note note to set to task."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void setNotes(Note note) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.note \u003d note;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Sets notes id."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param id id of notes."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void setNoteId(int id) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.noteId \u003d id;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.hasNotes \u003d true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Sets notes to null."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void deleteNotes() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.note \u003d null;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.noteId \u003d 0;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.hasNotes \u003d false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String checked;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (this.isCompleted) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            checked \u003d TICK;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            checked \u003d CROSS;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return String.format(\"[%s][%s] %s%s\", this.taskType, checked, this.description, getNotesString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private String getNotesString() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (hasNotes) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return String.format(\"\\n  |Notes:|\\n  %s\", this.note);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return Objects.hash(this.description, this.isCompleted);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 147
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.InvalidIdException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.InvalidKeywordException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents an agent that handles the list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * This includes adding and deleting tasks from the list,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * marking tasks as done, and directing the creation of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** List of tasks to keep track of. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private TreeMap\u003cInteger, Task\u003e noteIdToTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a TaskList with an empty list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.noteIdToTask \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a TaskList with given taskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskList list of tasks to start with."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.noteIdToTask \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Initialises tasks with notes."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param notes NoteList agent to handle list of notes."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void setupNotes(NoteList notes) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            if (t.hasNotes()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                int noteId \u003d t.getNoteId();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                t.setNotes(notes.getNote(noteId - 1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                this.noteIdToTask.put(noteId, t);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets number of tasks in list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return number of tasks in list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets list of tasks."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Gets task at id."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param id 1-based position of task in list of tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return task at that id"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Task retrieveTask(int id) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return this.taskList.get(id - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Prints out the list of tasks."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param ui ui in charge of printing."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String listTasks(Ui ui) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String[] taskStrings \u003d new String[this.getSize() + 1];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        taskStrings[0] \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int listIndex \u003d 0;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (Task t : this.taskList) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            listIndex++;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            taskStrings[listIndex] \u003d String.format(\"%d.%s\", listIndex, t.toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return ui.dukeRespond(taskStrings);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Adds given task into current list of tasks."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param task the task to be added."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void addData(Task task) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Marks task at position id as done."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param id the position at which the corresponding task in list is to be marked as done."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return the completed task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if id is invalid."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Task markDone(int id) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (id \u003e getSize() || id \u003c 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIdException(\"\" + id);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task task \u003d this.taskList.get(id - 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        task.setCompleted();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assert task.isCompleted() : \"Done does not mark properly as completed...?\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Deletes task at position id from list of tasks"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Pre-condition: id is always valid."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param id the position at which the corresponding task in list is to be deleted."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return the removed task."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if id is invalid."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Task deleteTask(int id) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (id \u003e getSize() || id \u003c 1) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidIdException(\"\" + id);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task task \u003d this.taskList.remove(id - 1);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assert task !\u003d null : \"Deleted empty task?\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/*"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void updateNoteIdForEveryone(int removedId) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Iterator\u003cInteger\u003e it \u003d this.noteIdToTask.subMap(removedId, noteIdToTask.lastKey()).keySet().iterator();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        while (it.hasNext()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            int id \u003d it.next();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            Task t \u003d this.noteIdToTask.get(id);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            t.setNoteId(id - i);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates the corresponding task."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param taskType the task type of task to create."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return new task."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws DukeException if command keyword is invalid."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Task createTask(TaskType taskType, String description) throws DukeException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (taskType \u003d\u003d null) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidKeywordException(\"wrong keyword\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case T:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            t \u003d Todo.create(description);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case D:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            t \u003d Deadline.create(description);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case E:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            t \u003d Event.create(description);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new InvalidKeywordException(\"wrong keyword\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assert t !\u003d null;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Finds tasks that have words matching keyword."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param wordToFind keyword to find in task descriptions."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return list of tasks that contain that keyword."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public List\u003cTask\u003e findTasks(String wordToFind) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            if (containsKeyword(task, wordToFind)) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                foundTasks.add(task);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return foundTasks;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private boolean containsKeyword(Task t, String kw) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return t.toString().contains(kw);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 199
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents the potential task type for Duke to do."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * This includes creating tasks and other commands."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * T represents todo task,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * D represents deadline task,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * E represents event task,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * LIST represents list tasks,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * DELETE represents delete tasks,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * DONE represents mark tasks as done,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * EXIT represents exit duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    T, D, E, LIST, DELETE, DONE, EXIT, FIND, SETNOTES, GETGENERALNOTES, DELETENOTES;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Converts command keyword to task type."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param typeString command keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return TaskType of command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static TaskType convertToTaskType(String typeString) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        TaskType type;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        switch (typeString.toUpperCase()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"TODO\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d T;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"DEADLINE\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d D;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"EVENT\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d E;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"LIST\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d LIST;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"DELETE\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d DELETE;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"DONE\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d DONE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"EXIT\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"BYE\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d EXIT;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"FIND\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d FIND;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"LISTNOTES\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d GETGENERALNOTES;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"SETNOTES\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d SETNOTES;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        case \"DELETENOTES\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d DELETENOTES;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            type \u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 73
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents todo task. Todos have 3 main attributes: their type, description, and"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * whether it is completed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Todo() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private Todo(String descr, boolean completed) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.description \u003d descr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isCompleted \u003d completed;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.taskType \u003d TaskType.T;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Creates new todo task with the description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param descr description of todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return new todo task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @throws EmptyDescriptionException if description is empty."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public static Todo create(String descr) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        if (descr.equals(\"\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            throw new EmptyDescriptionException(\"a todo\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Todo newTask \u003d new Todo(descr.trim(), false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 34
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "package cs2103t.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * Represents the System I/O interface and layout of Duke chatbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " * This handles user input and Duke output."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /** Divides responses as part of layout. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private static final String DIVIDER \u003d \"    \" + \"-\".repeat(61);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a Ui."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Returns welcome response of Duke/"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return welcome message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String eva \u003d \" ______ _     ___ ___\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"|   ___| \\\\    /  /   \\\\\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"|  |__ \\\\  \\\\  /  / /\\\\  \\\\\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"|   __| \\\\  \\\\/  / /__\\\\  \\\\\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"|  |___  \\\\    / ______  \\\\\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \"|______|  \\\\__/_/      \\\\__\\\\\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "         */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return dukeRespond(\"Hello from\\n\" + eva,\"Hello! I\u0027m Eeeeeeva\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Returns inputs in Duke layout."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param inputs lines of String that Duke is supposed to respond."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @return string of inputs."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String dukeRespond(String... inputs) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        for (String s : inputs) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            sb.append(s);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    private void showLine() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Shows loading error when file cannot be read."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dukeRespond(\"Cannot read from file! Check if it exists?\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Shows error when an Exception is caught."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * @param msg message of the exception caught."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void showError(String msg) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        dukeRespond(msg);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 73
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            \u003cFont name\u003d\"Courier New\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            \u003cFont name\u003d\"Courier New\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cButton fx:id\u003d\"closeButton\" onAction\u003d\"#closeButtonAction\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 24
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createCorrectDeadline() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"[D][\\u2717] a deadline task (by: 29/8/2019 1817)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                Deadline.create(\"a deadline task /by 29/8/2019 1817\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createDeadline_throwsException() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"\", Deadline.create(\"\").toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"a deadline\", e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void getDeadlineDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"some deadline | 29/8/2019 1817\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                Deadline.create(\"some deadline /by 29/8/2019 1817\").getDescription());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 30
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createCorrectEvent() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"[E][\\u2717] an event task (at: 3-5pm)\", Event.create(\"an event task /at 3-5pm\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createEvent_throwsException() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"\", Event.create(\"\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"an event\", e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void getEventDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"some event | today 3-5pm\", Event.create(\"some event /at today 3-5pm\").getDescription());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 27
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.parse.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskType;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void checkFullCommandParsing_validCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Parser ps \u003d new Parser(\"todo something\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            TaskType t \u003d ps.getInputTaskType();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(TaskType.T, t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"something\", ps.getInputEntireDescription());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void checkFullCommandParsing_invalidCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        Parser ps \u003d new Parser(\"blahahs\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            ps.getInputTaskType();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"blahahs\", e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 33
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.io.UnsupportedEncodingException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    String divider \u003d \"    -------------------------------------------------------------\\r\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Initialises arguments for function calls."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        tasks.add(new TaskStub());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void listTaskTest() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        //i dont think Ui need to test cus its so simple"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            System.setOut(new PrintStream(outContent, false, \"UTF-8\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            //after this all Sop will go out here?"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            String expectedOut \u003d divider"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    + \"     Here are the tasks in your list:\\r\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    + \"     1.[T][✗] some description\\r\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    + divider;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            taskList.listTasks(ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(expectedOut, outContent.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (UnsupportedEncodingException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            e.printStackTrace(); //shouldnt happen"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void addDataTest() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        taskList.addData(new TaskStub());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"[T][\\u2717] some description\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                taskList.getTaskList().get(taskList.getSize() - 1).toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void markDoneTest_validId() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            Task doneTask \u003d taskList.markDone(1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"[T][\\u2713] some description\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    doneTask.toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void markDoneTest_invalidId_throwsException() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            taskList.markDone(5);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"5\", e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void deleteTaskTest_validId() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            Task deletedTask \u003d taskList.deleteTask(1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"[T][\\u2717] some description\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "                    deletedTask.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void deleteTaskTest_InvalidId() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            taskList.deleteTask(2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"2\", e.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createTask_invalidType_throwException() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            TaskList.createTask(null, \"\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"wrong keyword\", e.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 109
    }
  },
  {
    "path": "src/test/java/TaskStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskType;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class TaskStub extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     * Constructs a stub for task class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public TaskStub() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.taskType \u003d getTaskType();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.description \u003d getDescription();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        super.isCompleted \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return \"some description\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return isCompleted;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        return TaskType.T;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    //setter mtds"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        isCompleted \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 30
    }
  },
  {
    "path": "src/test/java/TaskTypeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.TaskType;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class TaskTypeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void convertToTaskType() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.T, TaskType.convertToTaskType(\"T\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.T, TaskType.convertToTaskType(\"Todo\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.D, TaskType.convertToTaskType(\"D\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.D, TaskType.convertToTaskType(\"Deadline\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.E, TaskType.convertToTaskType(\"E\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.E, TaskType.convertToTaskType(\"Event\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.LIST, TaskType.convertToTaskType(\"list\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.DONE, TaskType.convertToTaskType(\"done\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.DELETE, TaskType.convertToTaskType(\"delete\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.EXIT, TaskType.convertToTaskType(\"exit\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(TaskType.EXIT, TaskType.convertToTaskType(\"bye\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(null, TaskType.convertToTaskType(\"blah\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(null, TaskType.convertToTaskType(\"\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 25
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import cs2103t.duke.task.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createCorrectTodo() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"[T][\\u2717] a todo task\", Todo.create(\"a todo task\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void createTodo_throwsException() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"\", Todo.create(\"\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "            assertEquals(\"a todo\", e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kxyoke"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    public void getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "        assertEquals(\"some todo\", Todo.create(\"some todo\").getDescription());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kxyoke"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kxyoke": 27
    }
  }
]
