[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    archiveVersion \u003d \"0.2.1\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "run {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 44,
      "-": 17
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### Feature 1: \"Create Tasks\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Able to create tasks to be added to a task list. Supported tasks are TODO, DEADLINE and EVENT tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "## Usage - a (TODO)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### `todo [name]` - Creates a TODO Task with a specified name."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`todo buy groceries`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    [T][✗] buy groceries"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Now you have 1 tasks in the list.`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "## Usage - b (DEADLINE)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### `deadline [name] [date]` - Creates a DEADLINE task with a specified name and date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`deadline groceries expire /by 11/11/2019 1800`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "date of the format: \u0027/by dd/MM/yyyy HHmm\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     [D][✗] groceries expire (by 11 Nov 2019, 0600PM)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "## Usage - c (EVENT)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### `event [name] [date]` - Creates a EVENT task with a specified name and date."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`event cook groceries /at 11/11/2019 1800`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "date of the format: \u0027/at dd/MM/yyyy HHmm\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     [E][✗] cook groceries (by 11 Nov 2019, 0600PM)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### Feature 2: \"List Tasks\" "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Lists out all the current tasks in the task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### `list` - Lists out all the tasks in order of addition to the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`1. [T][✗] buy groceries"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "2. [D][✗] groceries expire (by 11 Nov 2019, 0600PM)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "3. [E][✗] cook groceries (by 11 Nov 2019, 0600PM)`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### Feature 3: \"Mark a Task as done\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Marks a task in the task list as DONE."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### `done [integer]` - Marks the task in the task list with the specified index as done (index is 1-based)."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " [T][✓] buy groceries`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### Feature 4: \"Delete a Task\" "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Deletes a task from the task list (regardless of whether the task is done)."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### `delete [integer]` - Deletes the task in the task list with the specified index(index is 1-based)."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "` Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " [T][✓] buy groceries"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### Feature 5: \"Find a task\" "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Finds a task in the task list by searching for a keyword."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### `find [keyword]` - Finds a task in the task list by searching for a keyword."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`find groceries`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`     Here are the matching tasks in your list: "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "      1.[D][✗] groceries expire (by 11 Nov 2019, 0600PM)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "      2.[E][✗] cook groceries (by 11 Nov 2019, 0600PM)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### Feature 6: \"Undo\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Undos the creation of the last task in the task list."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "### `Undo` - Undos the creation of the last task in the task list."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`undo`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`The last created task has been deleted: "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "[E][✗] cook groceries (by 11 Nov 2019, 0600PM)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "`"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 126,
      "-": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "set GRADLE_OPTS\u003d\"-Dfile.encodingutf-8\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 1,
      "-": 84
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns the DialogBox for Duke, which is flipped from the User\u0027s DialogBox."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param text String to be returned as Duke\u0027s reply to User input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param img Duke\u0027s image."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return Duke\u0027s DialogBox."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 67
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * Duke runs as the main and this is where all the work is initialised at."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Constructs an instance of Duke. Also instantiates an instance of Storage and TaskList for this instance of Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d storage.readFromFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.taskList \u003d new TaskList(list);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Handles the parsing of inputs and execution of parsed commands."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003eAs long as a ByeCommand is not parsed, Duke will continue parsing for more commands. If a ByeCommand is"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * parsed, the while loop is terminated and Duke terminates."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @throws IOException When the Parser f"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private String run(String command) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        //Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        Command c \u003d parser.parse(command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return c.execute(taskList, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Sends the user input to Duke backend to be processed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param input String input from the user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param duke This instance of Duke."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return Returns a string to be shown to the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String getResponse(String input, Duke duke) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        String toReturn \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            toReturn \u003d duke.run(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            System.err.println(io);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 60,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 33
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.concurrent.CompletableFuture;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        String response \u003d duke.getResponse(input, duke);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            CompletableFuture.delayedExecutor(1, TimeUnit.SECONDS).execute(() -\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            });"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 59
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A Command to handle \"bye\" inputs resulting in a termination of the Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Prints the bye message via the UI method, UI.bye()."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param taskList The TaskList used to store the Tasks for this instance of Duke (not used in this method)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param storage The Storage used to store the Tasks on the hard disk (not used in this method)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return UI.bye();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 24
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * An interface to be implemented by all the Command type objects."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * \u003cp\u003e\u003c/p\u003eAll Commands must implement an execute method, which will be accessed by the Duke.run() method."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    String execute(TaskList tl, Storage st) throws IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 15
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A Command to create an instance of a Deadline Task. This will add the Deadline Task to the TaskList and the Storage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class DeadlineCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private String deadlineName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public DeadlineCommand(String deadlineName, String date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.deadlineName \u003d deadlineName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Executes the Deadline command which creates a Deadline Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003eTaking the TaskList and Storage object of the main Duke class as arguments, this command will create a"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * new Deadline Task which will then be added to the TaskList and Storage objects. The UI will also be used to"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * print a newTask message into the console."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param taskList The TaskList from the main Duke object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param storage The Storage from the main Duke object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        Task deadline \u003d new Deadline(deadlineName, date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        taskList.addTaskList(deadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        storage.writeToFile(taskList.getTaskList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return UI.newTask(taskList.getTaskList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 41
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import exception.DeleteException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A Command to remove a Task from the TaskList and Storage."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Indicates which element of the TaskList needs to be deleted."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Deletes a specific Task from the TaskList and Storage as indicated by the taskNum attribute."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param taskList The TaskList from the main Duke object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param storage The Storage from the main Duke object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        String toReturn \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            if (taskNum \u003e list.size() || taskNum \u003c\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                throw new DeleteException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            Task task \u003d list.remove(taskNum - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            int listSize \u003d  list.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            storage.writeToFile(list);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return UI.removedTask(task, listSize);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } catch (DeleteException delExp) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            System.err.println(delExp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 50
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A Command indicate that a Task from the TaskList and Storage has been completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Indicates which element of the TaskList has been completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Marks a specific Task from the TaskList and Storage as indicated by the taskNum attribute as completed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param taskList The TaskList from the main Duke object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param storage The Storage from the main Duke object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        Task currTask \u003d list.get(taskNum);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        currTask.setDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        storage.writeToFile(list);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return UI.done(currTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 38
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A Command to create an instance of a Event Task. This will add the Event Task to the TaskList and the Storage file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class EventCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private String eventName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public EventCommand(String eventName, String date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.eventName \u003d eventName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Executes the Event command which creates a Event Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003eTaking the TaskList and Storage object of the main Duke class as arguments, this command will create a"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * new Deadline Task which will then be added to the TaskList and Storage objects. The UI will also be used to"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * print a newTask message into the console."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param taskList The TaskList from the main Duke object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param storage The Storage from the main Duke object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        Task event \u003d new Event(eventName, date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        taskList.addTaskList(event);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        storage.writeToFile(list);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return UI.newTask(list);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 43
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private String searchTerm;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public FindCommand(String searchTerm) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.searchTerm \u003d searchTerm;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String execute(TaskList tl, Storage st) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        StringBuilder toReturn \u003d new StringBuilder(UI.findStart());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        for (Task task : tl.getTaskList()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            String[] taskNameComponents \u003d task.getName().split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            for (String nameComponent : taskNameComponents) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                if (nameComponent.equalsIgnoreCase(searchTerm)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    toReturn.append(\"     \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    toReturn.append(counter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    toReturn.append(\".\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    toReturn.append(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    toReturn.append(\"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return toReturn.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 37
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A Command to print a list of all the Tasks in the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Prints into the console all the Tasks in the TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param taskList The TaskList from the main Duke object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param storage The Storage from the main Duke object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        StringBuilder toReturn \u003d new StringBuilder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            if (list.get(i) !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                toReturn.append(i + 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                toReturn.append(\".\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                toReturn.append(list.get(i));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                toReturn.append(\"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return toReturn.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 36
    }
  },
  {
    "path": "src/main/java/command/StartCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A Command to handle \"bye\" inputs resulting in a termination of the Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class StartCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public StartCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Prints the bye message via the UI method, UI.bye()."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param taskList The TaskList used to store the Tasks for this instance of Duke (not used in this method)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param storage The Storage used to store the Tasks on the hard disk (not used in this method)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return UI.start();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 24
    }
  },
  {
    "path": "src/main/java/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A Command to create an instance of a Todo Task. This will add the Todo Task to the TaskList and the Storage file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class TodoCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private String todoName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public TodoCommand(String todoName) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.todoName \u003d todoName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Executes the Todo command which creates a Todo Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003eTaking the TaskList and Storage object of the main Duke class as arguments, this command will create a new"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Deadline Task which will then be added to the TaskList and Storage objects. The UI will also be used to print"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * a newTask message into the console."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param taskList The TaskList from the main Duke object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param storage The Storage from the main Duke object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        Task todo \u003d new Todo(todoName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        taskList.addTaskList(todo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        storage.writeToFile(list);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return UI.newTask(list);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 41
    }
  },
  {
    "path": "src/main/java/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class UndoCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public UndoCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Executes the UndoCommand which deletes the last command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003eTaking the TaskList and Storage object of the main Duke class as arguments, this command will find the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * last Task added to the TaskList and delete it."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param taskList The TaskList from the main Duke object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param storage The Storage from the main Duke object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        ArrayList\u003cTask\u003e taskListArray \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        Task task \u003d taskListArray.remove(taskListArray.size() - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        storage.writeToFile(taskListArray);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return UI.undoStart(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 33
    }
  },
  {
    "path": "src/main/java/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import exception.UnknownCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A Command meant to handle the event in which an unknown command is given by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class UnknownCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public UnknownCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Prints into the console the error message when an unknown command is given, via the instantiation of an"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * UnknownCommandException."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param taskList The TaskList from the main Duke object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param storage The Storage from the main Duke object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return new UnknownCommandException().toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 25
    }
  },
  {
    "path": "src/main/java/exception/DeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * An exception which only occurs if an an error is encountered when a Delete Command is executed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class DeleteException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public DeleteException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return \" ☹ OOPS!!! There was an error with deleting!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 15
    }
  },
  {
    "path": "src/main/java/exception/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * An exception which only occurs if an an error is encountered when a Done Command is executed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class DoneException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public DoneException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return \" ☹ OOPS!!! You must specify a Task to be done!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 15
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A custom Exception class which is meant only for exceptions unique to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 13
    }
  },
  {
    "path": "src/main/java/exception/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * An exception which only occurs if an an error is encountered when a Task Command is executed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class TaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public TaskException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return \" ☹ OOPS!!! The description of a Task cannot be empty.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 15
    }
  },
  {
    "path": "src/main/java/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * An exception which only occurs if an an error is encountered when a UnknownCommand is executed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 15
    }
  },
  {
    "path": "src/main/java/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.StartCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.TodoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.UndoCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import command.UnknownCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import exception.TaskException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * Parses all the commands input by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * \u003cp\u003e\u003c/p\u003eThe only public method, parse(), is used to determine which command will be returned and executed in Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * The other two methods are private and used to assist the parse() method in processing an Event or a Deadline type"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * Command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns a String array which has two elements."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003eThe first element is the name of the new Event Task and the second element is the String representing the"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * date of the Event Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param command A string array representing the initial input split into individual words."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return Returns a String array which contains the name and the date of a new Event Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @throws TaskException Thrown when there is insufficient information to create an Event Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private String[] getEventDetails(String[] command) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        taskHasName(command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        String toReturn \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        for (int i \u003d 1; i \u003c command.length; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            toReturn +\u003d command[i] + \" \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return toReturn.split(\" /at \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns a String array which has two elements."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003eThe first element is the name of the new Deadline Task and the second element is the String representing"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * the date of the Deadline Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param command A string array representing the initial input split into individual words."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return Returns a String array which contains the name and the date of a new Deadline Task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @throws TaskException Thrown when there is insufficient information to create an Deadline Task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private String[] getDeadlineDetails(String[] command) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        taskHasName(command);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        String toReturn \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        for (int i \u003d 1; i \u003c command.length; i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            toReturn +\u003d command[i] + \" \";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return toReturn.split(\" /by \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private void taskHasName(String[] nextCommand) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        assert nextCommand.length \u003e 1 : \"Task has no name\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private void commandHasTask(String[] nextCommand) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        assert nextCommand.length \u003e 1 : \"Command has no Task\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Parses the input and returns a Command that corresponds to the type of input given."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003eWhen a String (commandLine) is supplied, this method will split commandLine into multiple words (via"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * String.split(\" \"). This will result in a String array containing individual words. The first word is then used"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * to determine which Command is to be returned. If an invalid command is given, an UnknownCommand will be returned."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param commandLine A string representing a full line of input from the user."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return Returns a Command object corresponding to the type of input from the user."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public Command parse(String commandLine) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        String[] nextCommand \u003d commandLine.split(\" \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        switch (nextCommand[0]) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            commandHasTask(nextCommand);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return new DoneCommand(Integer.valueOf(nextCommand[1]) - 1);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            taskHasName(nextCommand);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            String todoName \u003d \"\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            for (int i \u003d 1; i \u003c nextCommand.length; i++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                todoName +\u003d nextCommand[i] + \" \";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return new TodoCommand(todoName);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            String[] eventDetails \u003d getEventDetails(nextCommand);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return new EventCommand(eventDetails[0], eventDetails[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            String[] deadlineDetails \u003d getDeadlineDetails(nextCommand);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return new DeadlineCommand(deadlineDetails[0], deadlineDetails[1]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            commandHasTask(nextCommand);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            int index \u003d Integer.parseInt(nextCommand[1]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            commandHasTask(nextCommand);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return new FindCommand(nextCommand[1]);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        case \"undo\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        case \"hello\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return new StartCommand();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return new UnknownCommand();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 139
    }
  },
  {
    "path": "src/main/java/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * Manages the storing of the TaskList to a file on the hard disk. This allows the list of Tasks to be stored and"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * accessed for subsequent initialisations of Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private Path path \u003d Paths.get(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private File data \u003d new File(path + \"/data/duke.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns an ArrayList of tasks from the data file on the hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003eThis method is invoked whenever an instance of Duke is created. It reads from the data/duke.txt file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Should the file not be found, a FileNotFoundException is thrown and caught. A parser is also implemented in this"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * method to read from the data file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return An ArrayList of Tasks from the stored data file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public ArrayList\u003cTask\u003e readFromFile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        ArrayList\u003cTask\u003e toReturn \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            Scanner sc \u003d new Scanner(data);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                String[] next \u003d sc.nextLine().split(\"-\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                switch (next[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                case (\"T\"):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    Task todo \u003d new Todo(next[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    if (Integer.valueOf(next[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                        todo.setDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    toReturn.add(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                case (\"E\"):"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    Task event \u003d new Event(next[2], next[3]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    if (Integer.valueOf(next[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                        event.setDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    toReturn.add(event);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                case (\"D\"):"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    Task deadline \u003d new Deadline(next[2], next[3]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    if (Integer.valueOf(next[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                        deadline.setDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    toReturn.add(deadline);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } catch (FileNotFoundException fileExp) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            System.out.println(fileExp);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Writes all the tasks in a given ArrayList into the data/duke.txt file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003eA StringBuilder is used to concatenate all the strings from the toFile() method of each Task. This is then"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * stored into the data file."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param list ArrayList of all the Tasks to be written into the data file."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            File data \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            FileWriter fw \u003d new FileWriter(data);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            StringBuilder toWrite \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                toWrite.append(task.toFile() + \" \\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            fw.write(toWrite.toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } catch (IOException ioExp) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            System.err.println(ioExp);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 113
    }
  },
  {
    "path": "src/main/java/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * Stores all the Tasks in an ArrayList. Contains methods to access and update the ArrayList of Tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Instantiates a TaskList object with an empty ArrayList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Instantiates a TaskList object with an ArrayList of Task (given as an argument)."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param list an ArrayList of Tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns the ArrayList of Tasks of this TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return The ArrayList of Tasks of this TaskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Replaces the ArrayList of this TaskList with another ArrayList of Tasks (given as an argument)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param list An ArrayList of Tasks to replace the ArrayList of this TaskList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void updateTaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void addTaskList(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 51
    }
  },
  {
    "path": "src/main/java/main/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * Stores all the different messages to be printed to the console. This class only contains static methods and as such"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * this class will never need to be initialised."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public interface UI {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Prints the start message when Duke is executed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return The start message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    static String start() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return \"    ________________________________________\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                + \"     Hello! I am BARELY FUNCTIONING, PLEASE KILL ME\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                + \"    ______________________________________\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Prints the closing message when a ByeCommand is executed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return The bye message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    static String bye() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return (\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Prints the contents of the TaskList (given as an argument) whenever a new task is added to the TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param taskList A TaskList instance unique to each instance of Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return The message explaining a new task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    static String newTask(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                +   \"    \"  + taskList.get(taskList.size() - 1) + \"\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                + \"Now you have \" + taskList.size() + \" tasks in the list. \\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Prints the size of the TaskList (given as an argument) and the Task to be removed (also given as an argument)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * of the TaskList whenever a Task is removed from the TaskList. Typically occurs when a RemoveCommand is executed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param task The Task to be removed from the TaskList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param listSize The size of the TaskList, after removal of Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return The message explaining the deletion of a task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    static String removedTask(Task task, int listSize) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return \" Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                + \"    \" + task + \"\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                + \"Now you have \" + listSize + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Prints the number of Tasks in the TaskList (given as an argument)."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param taskList A TaskList instance unique to each instance of Duke."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return The number of tasks in the TaskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    static String numTasks(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return \"Now you have \" + taskList.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Prints that a given Task is designated as done, typically when a DoneCommand is excuted."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param task The Task designated as done."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return The done message."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    static String done(Task task) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                + \" \" + task + \"\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Prints the first portion of a find Command."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return The start message when a FindCommand is executed."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    static String findStart() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return \"     Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Prints a plain line."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return Returns a line."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    static String endLine() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    static String undoStart(Task task) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return \"The last created task has been deleted: \\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                + task.toString();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 108
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A type of Task that includes a date attribute for the Task to be completed by. Also includes two SimpleDateFormatter."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Used for parsing the input from the user and for formatting the date for Storage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Used for formatting the date for printing to console."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private SimpleDateFormat formatter \u003d new SimpleDateFormat(\"d MMM yyyy, hhmma\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Constructor for a Deadline Task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param name A String which represents the name of the Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param dateString A String which represents the date and time of the Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public Deadline(String name, String dateString) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            Date dateTime \u003d parser.parse(dateString);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            this.date \u003d dateTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } catch (ParseException parseExp) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            System.err.println(parseExp);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns a String representing the Task in a format to be saved into the hard disk\u0027s storage file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return A String representation of this Task formatted for the storage file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return \"D-1-\" + name + \"-\" + parser.format(date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return \"D-0-\" + name + \"-\" + parser.format(date);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns a String representing the Task in a format to be printed into the console."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return A String representation of this Task formatted for printing into the console."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return \"[D][\\u2713] \" + name + \" (by: \" + formatter.format(date) + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return \"[D][\\u2717] \" + name + \" (by: \" + formatter.format(date) + \")\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 68
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A type of Task that includes a date attribute for the date in which the Task takes place. Also includes two"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * SimpleDateFormatter."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Used for parsing the input from the user and for formatting the date for Storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private SimpleDateFormat parser \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Used for formatting the date for printing to console."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    private SimpleDateFormat formatter \u003d new SimpleDateFormat(\"d MMM yyyy, hhmma\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Constructor for an Event Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param name A String representing the name of the Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @param dateString A String which represents the date and time of the Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public Event(String name, String dateString) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            Date dateTime \u003d parser.parse(dateString);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            this.date \u003d dateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } catch (ParseException parseExp) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            System.err.println(parseExp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns a String representing the Task in a format to be saved into the hard disk\u0027s storage file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return A String representation of this Task formatted for the storage file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return \"E-1-\" + name + \"-\" + parser.format(date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return \"E-0-\" + name + \"-\" + parser.format(date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns a String representing the Task in a format to be printed into the console."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return A String representation of this Task formatted for printing into the console."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return \"[E][\\u2713] \" + name + \" (at: \" + formatter.format(date) + \")\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return \"[E][\\u2717] \" + name + \" (at: \" + formatter.format(date) + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 69
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * An Abstract Class extended by all the Task type classes."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * \u003cp\u003e\u003c/p\u003eEach Task contains a name and an isDone attribute. Two abstract methods (toFile() and toString()) are meant"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * to be implemented by any classes that extend the Task abstract class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Indicates where the current task has been completed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Indicates that this Task has already been completed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns the name of the Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return String which is the name of the Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns a String representing the Task in a format to be saved into the hard disk\u0027s storage file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003eTo be implemented by each individual Task class."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return A String representation of this Task formatted for the storage file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public abstract String toFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns a String representing the Task in a format to be printed into the console."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003eTo be implemented by each individual Task class."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return A String representation of this Task formatted for printing into the console."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 60
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " * A simple Task which only indicates what task needs to be completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns a String representing the Task in a format to be saved into the hard disk\u0027s storage file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return A String representation of this Task formatted for the storage file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return \"T-1-\" + name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return \"T-0-\" + name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * Returns a String representing the Task in a format to be printed into the console."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     * @return A String representation of this Task formatted for printing into the console."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return \"[T][\\u2713] \" + name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            return \"[T][\\u2717] \" + name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 38
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?import javafx.geometry.Rectangle2D?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-border-radius: 20;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #acc9e1;\" text\u003d\"Text\" wrapText\u003d\"true\" HBox.hgrow\u003d\"SOMETIMES\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            \u003cInsets bottom\u003d\"20.0\" right\u003d\"8.0\" top\u003d\"2.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"94.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "         \u003cviewport\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            \u003cRectangle2D /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "         \u003c/viewport\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #acc9e1;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            \u003cFont name\u003d\"Calibri Bold\" size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #c8864f;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #9a6030;\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 23
    }
  },
  {
    "path": "src/test/java/main/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    void getTaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        assertEquals(new ArrayList\u003cTask\u003e(), new TaskList().getTaskList());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    void updateTaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        ArrayList\u003cTask\u003e arrList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        arrList.add(new Todo(\"name\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        taskList.updateTaskList(arrList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        assertEquals(arrList, taskList.getTaskList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    void addTaskList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        ArrayList\u003cTask\u003e arrList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        Todo todo \u003d new Todo(\"name\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        TaskList taskList \u003d new TaskList(arrList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        taskList.addTaskList(todo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        arrList.add(new Todo(\"name\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        assertEquals(arrList, taskList.getTaskList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 41
    }
  },
  {
    "path": "src/test/java/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void toFile() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        assertEquals(\"D-0-name-11/11/1991 1700\", new Deadline(\"name\", \"11/11/1991 1700\").toFile());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void toString1() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        assertEquals(\"[D][✗] name (by: 11 Nov 1991, 0500PM)\", new Deadline(\"name\",\"11/11/1991 1700\").toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 16
    }
  },
  {
    "path": "src/test/java/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void toFile() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        assertEquals(\"E-0-name-11/11/1991 1700\", new Event(\"name\", \"11/11/1991 1700\").toFile());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void toString1() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        assertEquals(\"[E][✗] name (at: 11 Nov 1991, 0500PM)\", new Event(\"name\",\"11/11/1991 1700\").toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 16
    }
  },
  {
    "path": "src/test/java/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    void setDone() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        Task task \u003d new Todo(\"name\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        assertEquals(\"[T][✓] name\", task.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 13
    }
  },
  {
    "path": "src/test/java/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void toFile() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        assertEquals(\"T-0-name\", new Todo(\"name\").toFile());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    public void toString1() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "        assertEquals(\"[T][✗] name\", new Todo(\"name\").toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PhireHandy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PhireHandy": 16
    }
  }
]
