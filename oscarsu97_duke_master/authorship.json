[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "D | 0 |  return book  | 12/11/2019 1200"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "E | 1 |  project meeting  | 17/11/2019 1330"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 4
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Parser.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Storage.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * Represents a bot that helps user to keep track of their task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * It execute task according to the user\u0027s input command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * initialise Duke and load data from Duke.txt file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * into a TaskList class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param filePath file path of duke.txt file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        parser \u003d new Parser(taskList, ui);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * starts off by greeting user and afterwards,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * user command is being parsed to check for the validity"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * of the code. At the end of the whole process, it will"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * update the list of tasks back into Duke.txt file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        TaskList tasks \u003d parser.parse();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        storage.updateFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * main method where the code starts from."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String path \u003d file.getAbsolutePath();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        new Duke(path).run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "oscarsu97": 49
    }
  },
  {
    "path": "src/main/java/Duke/DukeException/IncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "package Duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * Exception class that deals with incomplete user\u0027s command input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class IncompleteCommandException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String msg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * initialise Exception class with a string message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param msg message to send to user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public IncompleteCommandException(String msg){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Return a string representation of the class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return String representation"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return \"☹ OOPS!!! \" + msg;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 25
    }
  },
  {
    "path": "src/main/java/Duke/DukeException/IndexOffBoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "package Duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * Exception class that deals with wrong index given by user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * that is out of the size of the task list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class IndexOffBoundException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Return a string representation of the class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return String representation"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return \"☹ OOPS!!! \" + \"please enter a valid index\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 17
    }
  },
  {
    "path": "src/main/java/Duke/DukeException/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "package Duke.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * Exception class that deals with invalid command given by user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String msg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * initialise Exception class with a string message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param msg message to send to user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public InvalidCommandException(String msg){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Return a string representation of the class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return String representation"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return \"☹ OOPS!!! \" + msg;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 26
    }
  },
  {
    "path": "src/main/java/Duke/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "package Duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.DukeException.IncompleteCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.DukeException.IndexOffBoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.DukeException.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * Parser class that deals with making sense of the user command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Initialise Parser class with TaskList and Ui class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param taskList list of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param ui       object that deals with interaction with user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public Parser(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Check if the user command input is valid,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * otherwise it will prompt user to give a"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * valid input again."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return a list of the updated tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public TaskList parse() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        boolean isTheEnd \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        while (!isTheEnd) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            String[] taskDetails \u003d input.split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            String taskType \u003d taskDetails[0].trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            boolean isInvalid \u003d checkValidCommand(taskType);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            boolean isInComplete;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            if (isInvalid) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                while (isInvalid) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    String[] newTaskDetails \u003d input.split(\" \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    String newTaskType \u003d newTaskDetails[0].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    isInvalid \u003d checkValidCommand(newTaskType);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            if (taskType.equals(\"list\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            } else if (taskType.equals(\"done\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                isInComplete \u003d checkIncompleteCommand(input, 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isInComplete) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                isInvalid \u003d checkValidIndex(Integer.parseInt(taskDetails[1]));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isInvalid) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                int index \u003d Integer.parseInt(taskDetails[1]) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                taskList.getTask(index).markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                ui.printMarkedTask(taskList.getTask(index));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                String[] msg \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                isInComplete \u003d checkIncompleteCommand(msg[0], 2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isInComplete) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                isInComplete \u003d checkIncompleteCommand(msg[1], 2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isInComplete) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                taskList.addTask(new Deadline(msg[0].trim().substring(8).trim(), msg[1].trim()));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                int taskListSize \u003d taskList.getTaskListSize();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                ui.printTaskAdded(taskList.getTask(taskListSize - 1), taskListSize);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            } else if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                String[] msg \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                //Check whether the task description is complete"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                isInComplete \u003d checkIncompleteCommand(msg[0], 2);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isInComplete) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                // Check whether date and time format is complete"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                isInComplete \u003d checkIncompleteCommand(msg[1], 2);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isInComplete) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                taskList.addTask(new Event(msg[0].trim().substring(5).trim(), msg[1].trim()));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                int taskListSize \u003d taskList.getTaskListSize();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                ui.printTaskAdded(taskList.getTask(taskListSize - 1), taskListSize);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            } else if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                checkIncompleteCommand(input, 2);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                String toDo \u003d input.substring(5);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                taskList.addTask(new ToDo(toDo));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                int taskListSize \u003d taskList.getTaskListSize();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                ui.printTaskAdded(taskList.getTask(taskListSize - 1), taskListSize);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                isTheEnd \u003d true;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                ui.showGoodbye();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            } else if (taskType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                isInComplete \u003d checkIncompleteCommand(input, 2);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isInComplete) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                isInvalid \u003d checkValidIndex(Integer.parseInt(taskDetails[1]));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isInvalid) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                int index \u003d Integer.parseInt(taskDetails[1]) - 1;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                int taskListSize \u003d taskList.getTaskListSize();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                ui.printRemoveTask(taskList.getTask(index), taskList.getTaskListSize() - 1);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                taskList.deleteTask(index);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            } else if (taskType.equals(\"find\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                isInComplete \u003d checkIncompleteCommand(input, 2);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isInComplete) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                //find all tasks that match keyword"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                ArrayList\u003cTask\u003e matchingTasks \u003d taskList.findMatchingTasks(keyword);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                //print all tasks that match keyword"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                ui.printMatchingTasks(matchingTasks);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Check if the command given by the user is of the correct length"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param command        command given by the user"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param expectedLength expected length of the command"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return false if it is a complete command, true if it is an incomplete command"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private boolean checkIncompleteCommand(String command, int expectedLength) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            if (command.split(\" \").length \u003c expectedLength) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                throw new IncompleteCommandException(\"The description of the command is incomplete\\n\" +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                        \"Please enter again.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        } catch (IncompleteCommandException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Check if the index is within the size of the task list"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param index index of the task in the task list"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return false if it is within range, true if it is out of range"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public boolean checkValidIndex(int index) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            if (index \u003c 1 || index \u003e taskList.getTaskListSize()) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                throw new IndexOffBoundException();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        } catch (IndexOffBoundException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Check if the command given by the user is a valid command."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param taskType type of the task to be executed"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return false if it is an invalid command, true if it is a valid command."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public boolean checkValidCommand(String taskType) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                throw new InvalidCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-( \\n\" +"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                        \"Enter a command again:\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 242
    }
  },
  {
    "path": "src/main/java/Duke/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "package Duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * Storage class that deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Load the list of tasks from duke.txt file,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * if file could not be file, it will tell user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * that file could not be found and an empty ArrayList of tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return an ArrayList that contains the tasks to do"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            sc \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            readFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            System.out.println(\"could not find file\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * After loading from the file, this method will"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * determine the type of task and add them to the"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void readFile() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            String[] taskDetails \u003d line.split(\"[|]\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            String taskType \u003d taskDetails[0].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            boolean isDone \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            if (taskDetails[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                Task toDoTask \u003d new ToDo(taskDetails[2].trim());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    toDoTask.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                tasks.add(toDoTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                Task deadlineTask \u003d new Deadline(taskDetails[2].trim(), taskDetails[3].trim());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                Task eventTask \u003d new Event(taskDetails[2].trim(), taskDetails[3].trim());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    eventTask.markAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                tasks.add(eventTask);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                System.out.println(\"invalid format of data input\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Update file with a given format based on the type of Task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * in the task list"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param taskList list of tasks"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void updateFile(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            String taskFormat;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            String done;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                done \u003d task.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    taskFormat \u003d String.format(\"T | %s | %s\", done, task.getDescription());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    fileWriter.write(taskFormat + \"\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    taskFormat \u003d String.format(\"D | %s | %s | %s\", done, task.getDescription(), ((Deadline) task).getDateTime());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    fileWriter.write(taskFormat + \"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (task instanceof Event) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    taskFormat \u003d String.format(\"E | %s | %s | %s\", done, task.getDescription(), ((Event) task).getDateTime());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    fileWriter.write(taskFormat + \"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            System.out.println(\"file not found\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 119
    }
  },
  {
    "path": "src/main/java/Duke/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * Represent a deadline task that need to be done before a specific date/time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/YYYY HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * initialise Deadline task with description of task and the date and time to be completed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param dateTime date and time to be completed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public Deadline(String description, String dateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String[] dateAndTime \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String[] date \u003d dateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int time \u003d Integer.parseInt(dateAndTime[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int dayOfMonth \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int hour \u003d time / 100;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int min \u003d time % 100;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        localDateTime \u003d LocalDateTime.of(year, month, dayOfMonth, hour, min);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * get the date and time of the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return date and time to be completed"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String getDateTime(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * String representation of Deadline task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return string representation"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return String.format(\"[D][%s] %s(by: %s)\", getStatusIcon(), description, localDateTime.format(dateTimeFormat));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 50
    }
  },
  {
    "path": "src/main/java/Duke/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * Represents a Event class that start at a specific time and ends at a specific time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private LocalDateTime localDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/YYYY HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * initialise Event task with description of task and the date and time to be completed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param dateTime date and time to be completed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public Event(String description, String dateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String[] dateAndTime \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String[] date \u003d dateAndTime[0].split(\"/\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int time \u003d Integer.parseInt(dateAndTime[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int dayOfMonth \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int hour \u003d time / 100;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        int min \u003d time % 100;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        localDateTime \u003d LocalDateTime.of(year, month, dayOfMonth, hour, min);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * get the date and time of the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return date and time to be completed"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String getDateTime(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * String representation of Deadline task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return string representation"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return String.format(\"[E][%s] %s(at: %s)\", getStatusIcon(), description, localDateTime.format(dateTimeFormat));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 50
    }
  },
  {
    "path": "src/main/java/Duke/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * Represents a Task class that needs to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * initialise Task class with description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Get the status icon  that represents whether the task is completed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return status icon"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Set the task to be completed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Get the description of the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Return a boolean value that shows whether the task is completed"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return true if task is completed, false if task is incomplete"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * String representation of Task class"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return String representation"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 58
    }
  },
  {
    "path": "src/main/java/Duke/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * Represent a list of tasks that needs to be do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * and this class is able to add or delete tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * initialise TaskList with an empty ArrayList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * initialise TaskList with a given task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param taskList list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Add a new task into the task list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Delete a task from the task list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param index the task index in the task list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Returns the list of the task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return list of task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Returns the size of the list of task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return int value of the size of the list"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Get a specified task from the list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param index the index of the task in the task list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return the specified task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Find task that matches the keyword"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param keyword the string to look for"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return ArrayList that contain all tasks that match the keyword"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public ArrayList\u003cTask\u003e findMatchingTasks(String keyword) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                Deadline deadlineTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (deadlineTask.getDateTime().contains(keyword)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    matchingTasks.add(deadlineTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                Event eventTask \u003d (Event) task;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                if (eventTask.getDateTime().contains(keyword)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                    matchingTasks.add(eventTask);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            //Check if Deadline, Event or To do task\u0027s description contains keyword"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 105
    }
  },
  {
    "path": "src/main/java/Duke/Task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * Represents a to do task that needs to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * initialise To Do class with description of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param description task description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * String representation of the To Do class"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @return String representation"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 24
    }
  },
  {
    "path": "src/main/java/Duke/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "package Duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " * Represents a User Interface that deals with interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * initialise Ui class with an empty parameter"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Prints the welcome message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        String welcome \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Prints the goodbye message"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Prints the sentence for the task list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void printTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            System.out.println(\"\" + i + \". \" + taskList.getTask(i - 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Prints the task that is being marked as done"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param task the task that is being marked"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void printMarkedTask(Task task) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Prints the task that is being removed from the task list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param task     the task that is being removed"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param taskSize the size of the list after deletion"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void printRemoveTask(Task task, int taskSize) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                + \"\\nNow you have \" + taskSize + \" tasks in the list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * Prints the task being added message"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param task     task that is being added"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     * @param taskSize size of the list after addition"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void printTaskAdded(Task task, int taskSize) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "                + \"\\nNow you have \" + taskSize + \" tasks in the list\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void printMatchingTasks(ArrayList\u003cTask\u003e matchingTaskList) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d matchingTaskList.size(); i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "            System.out.println(\"\" + i + \". \" + matchingTaskList.get(i - 1));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 82
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 12
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        Event event \u003d new Event(\"read book\", \"12/12/2019 1300\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        assertEquals(\"[E][\\u2718] read book(at: 12/12/2019 1300)\", event.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 13
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    public void testGetTaskSize(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "        assertEquals(0, taskList.getTaskSize());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 13
    }
  },
  {
    "path": "textUITestingTutorial/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": " @ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   if not exist Duke\\bin mkdir Duke\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   javac  -cp Duke\\src -Xlint:none -d Duke\\bin Duke\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   )"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   java -classpath Duke\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   `runtest.sh`:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   ```shell"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   #!/usr/bin/env bash"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   if [ ! -d \"Duke/bin\" ]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   then"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       mkdir Duke/bin"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   # delete output from previous run"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       rm ACTUAL.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "\t"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   if ! javac -cp Duke/src -Xlint:none -d Duke/bin Duke/src/main/java/Duke.java"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   java -classpath Duke/bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   # compare the output to the expected output"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   then"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       exit 0"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   else"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "oscarsu97"
        },
        "content": "   fi"
      }
    ],
    "authorContributionMap": {
      "oscarsu97": 59
    }
  }
]
