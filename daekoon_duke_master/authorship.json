[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": "  id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "  id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": "  toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    archiveVersion \u003d \"0.1.0\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daekoon"
        },
        "content": "run{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 16,
      "daekoon": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeNoSuchCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * Main class of this project."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * Personal assistant bot to help you keep track of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * To run this program, create the Duke object, and use the .run() method."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * @author Lim Daekoon"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Creates a new Duke object to run."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        storage \u003d new Storage(\"save.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        this.taskList \u003d storage.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Ui.printBlock(new String[] {\"Hello! I\u0027m Duke.\", \"What can I do for you?\"});"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        // Initializes the parser so that the loop runs at least once"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.parser \u003d new Parser(\"list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            Ui.printBlock(\"Unexpected Error\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Runs the Duke program."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        while (!parser.getType().equals(\"bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                parser \u003d ui.readCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                switch (parser.getType()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    taskList.list();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    taskList.markAsDone(parser);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    taskList.addTodo(parser);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    taskList.addDeadline(parser);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    taskList.addEvent(parser);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    taskList.deleteTask(parser);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    taskList.find(parser);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    throw new DukeNoSuchCommandException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                storage.save(taskList);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                e.printMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Ui.printBlock(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Default static main method of this project."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 93,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeMissingDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeDeadlineMissingDateException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeNoSuchCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeEventMissingDateException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeMissingIndexException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeMissingSearchTermException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * Reads in the input line, and parses accordingly."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * Will return null if trying to access information that doesn\u0027t exist for that command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * @author Lim Daekoon"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private Integer index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private String searchTerm;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Constructs a Parser object based on input string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param input The command String to be parsed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @throws DukeException If there are problems with the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Parser(String input) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String[] inputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String[] params;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        this.type \u003d inputs[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.description \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.time \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.index \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.searchTerm \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.description \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.time \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.index \u003d null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.searchTerm \u003d null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            if (inputs.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeMissingIndexException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                this.index \u003d Integer.parseInt(inputs[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                Ui.printBlock(\"Please input a number\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                Ui.printBlock(\"Please input a number\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.description \u003d null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.time \u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.searchTerm \u003d null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.index \u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            if (inputs.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeMissingDescriptionException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.description \u003d inputs[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.time \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.searchTerm \u003d null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.index \u003d null;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            if (inputs.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeMissingDescriptionException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            params \u003d inputs[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            if (params.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeDeadlineMissingDateException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.description \u003d params[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.time \u003d params[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.searchTerm \u003d null;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.index \u003d null;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            if (inputs.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeMissingDescriptionException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            params \u003d inputs[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            if (params.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeEventMissingDateException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.description \u003d params[0];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.time \u003d params[1];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.searchTerm \u003d null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            if (inputs.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeMissingIndexException();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                this.index \u003d Integer.parseInt(inputs[1]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                Ui.printBlock(\"Please input a number\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                Ui.printBlock(\"Please input a number\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.description \u003d null;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.time \u003d null;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.searchTerm \u003d null;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.index \u003d null;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            if (inputs.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeMissingSearchTermException();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.searchTerm \u003d inputs[1];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.description \u003d null;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.time \u003d null;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            throw new DukeNoSuchCommandException();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Returns the type of the command."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @return The type of the command, in String."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Returns the index included in the command, if there is any."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @return Index included in the command, if any. Otherwise, returns null."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Integer getIndex() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return this.index;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Returns the description included in the command."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @return Description included in the command, if any. Otherwise, returns null."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Returns the time included in the command."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @return Time included in the command, if any. Otherwise, returns null."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public String getSearchTerm() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return this.searchTerm;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 174
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeSaveFailedException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * Class used to load/save from the save file specified."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * @author Lim Daekoon"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private String directory;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private FileReader fileReader;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private FileWriter fileWriter;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private BufferedReader bufferedReader;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private BufferedWriter bufferedWriter;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Constructs the Storage object with the directory of save file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param dir Directory of the save file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Storage(String dir) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        directory \u003d dir;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Loads the file from the save file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @return TaskList object that has everything in the save file loaded in."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            fileReader \u003d new FileReader(directory);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String[] tokens;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String nextLine;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            nextLine \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            nextLine \u003d null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        // Savefile layout"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        // Event type|done or not done(1 or 0)|Description|Date(if applicable)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        while (nextLine !\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            tokens \u003d nextLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            switch (tokens[0]) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                Todo todo \u003d new Todo(tokens[2], tokens[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                taskList.add(todo);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                Deadline deadline;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    deadline \u003d new Deadline(tokens[2], tokens[1], tokens[3]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    e.printMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                taskList.add(deadline);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                Event event;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    event \u003d new Event(tokens[2], tokens[1], tokens[3]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    e.printMessage();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                taskList.add(event);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                Ui.print(\"Error reading task from save file.\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                nextLine \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                nextLine \u003d null;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return new TaskList(taskList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Saves the current TaskList into the save file."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param taskListObject TaskList object to be saved."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void save(TaskList taskListObject) throws DukeSaveFailedException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            fileWriter \u003d new FileWriter(directory);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            throw new DukeSaveFailedException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d taskListObject.getTaskArray();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        for (int z \u003d 0; z \u003c taskList.size(); z++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                bufferedWriter.write(taskList.get(z).toStorageString());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                bufferedWriter.write(\"\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                bufferedWriter.flush();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeSaveFailedException();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 131
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeDoneEmptyListException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeIndexOutOfBoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * Class containing the list of Tasks, and methods to modify it."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * @author Lim Daekoon"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Constructs an empty TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Constructs a TaskList with the content passed in."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param taskList Array containing list of Tasks to be loaded in."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Marks a task with the specified index as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param parser Parser object containing a valid \"done\" command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @throws DukeDoneEmptyListException If the list is empty and there is nothing to mark as done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @throws DukeIndexOutOfBoundException If index specified in the command is out of bound."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void markAsDone(Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        int index \u003d parser.getIndex();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        // EXCEPTION: WHEN INDEX IS OUT OF RANGE"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        if (index \u003c 1 || index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            String errorMessage;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeDoneEmptyListException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeIndexOutOfBoundException(index, taskList.size());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        taskList.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String[] outputs \u003d new String[2];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[0] \u003d \"Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[1] \u003d \"  \" + taskList.get(index - 1).toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Ui.printBlock(outputs);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Adds a new Todo object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param parser Parser object containing a valid \"todo\" command."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void addTodo(Parser parser) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Todo newTodo \u003d new Todo(parser.getDescription());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        taskList.add(newTodo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String[] outputs \u003d new String[3];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[0] \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[1] \u003d \"  \" + newTodo.toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[2] \u003d String.format(\"Now you have %d tasks in the list.\", taskList.size());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Ui.printBlock(outputs);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Lists the existing tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            Ui.printBlock(\"There is nothing to list - the todo list is empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Ui.printBlock(toStringArray());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    ArrayList\u003cTask\u003e getTaskArray() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Adds a new Deadline Task to the TaskList."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param parser Parser object containing a \"deadline\" command."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @throws DukeException If the command is invalid."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void addDeadline(Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(parser.getDescription(), parser.getTime());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String[] outputs \u003d new String[3];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[0] \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[1] \u003d \"  \" + newDeadline.toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[2] \u003d String.format(\"Now you have %d tasks in the list.\", taskList.size());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Ui.printBlock(outputs);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Adds a new Event Task to the TaskList."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param parser Parser object containing a \"deadline\" command."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @throws DukeException If the command is invalid."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void addEvent(Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Event newEvent \u003d new Event(parser.getDescription(), parser.getTime());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        taskList.add(newEvent);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String[] outputs \u003d new String[3];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[0] \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[1] \u003d \"  \" + newEvent.toString();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[2] \u003d String.format(\"Now you have %d tasks in the list.\", taskList.size());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Ui.printBlock(outputs);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Deletes the task with the specified index."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param parser Parser object containing a valid \"delete\" command."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @throws DukeDoneEmptyListException If the list is empty and there is nothing to delete."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @throws DukeIndexOutOfBoundException If index specified in the command is out of bound."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void deleteTask(Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        int index \u003d parser.getIndex();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        // EXCEPTION: WHEN INDEX IS OUT OF RANGE"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        if (index \u003c 1 || index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            String errorMessage;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeDoneEmptyListException();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                throw new DukeIndexOutOfBoundException(index, taskList.size());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Task oldTask \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String[] outputs \u003d new String[3];"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[0] \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[1] \u003d \"  \" + oldTask.toString();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        outputs[2] \u003d String.format(\"Now you have %d tasks in the list.\", taskList.size());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Ui.printBlock(outputs);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Finds the task that matches the specified search term, and lists them out."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param parser Parser object containing a valid \"find\" command."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void find(Parser parser) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Task currentTask;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String regex \u003d String.format(\"(.*)%s(.*)\", parser.getSearchTerm());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        for (int z \u003d 0; z \u003c taskList.size(); z++) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            currentTask \u003d taskList.get(z);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            if (currentTask.getTaskName().matches(regex)) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                matches.add(currentTask);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        if (matches.size() \u003c 1) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            Ui.printBlock(\"There were no matching tasks in your list.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            String[] stringArray \u003d new String[matches.size()];"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            for (int z \u003d 0; z \u003c matches.size(); z++) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                stringArray[z] \u003d String.format(\"%3d.\" + matches.get(z).toString(), z + 1);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            Ui.printBlock(stringArray);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    // Converts taskList into a String Array"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private String[] toStringArray() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String[] stringArray \u003d new String[taskList.size()];"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        for (int z \u003d 0; z \u003c taskList.size(); z++) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            stringArray[z] \u003d String.format(\"%3d.\" + taskList.get(z).toString(), z + 1);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return stringArray;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 198
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * Class handling pretty printing and input reading for the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * Note that you do not need to create an instance of this class to print, only for reading input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * @author Lim Daekoon"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private static final String LINE \u003d \"--------------------------------------------\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private static final String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Constructs the new UI Object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Prints out the specified String with indentation."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param output String to be printed out."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public static void print(String output) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        System.out.println(INDENT + output);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Prints out multiple Strings with proper indenting and top and bottom horizontal lines."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param outputs Array containing all the strings to be printed out in a single block."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public static void printBlock(String[] outputs) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        print(LINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        for (String output : outputs) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            print(\" \" + output);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        print(LINE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Prints out a single line of String within a block."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param output String to be printed out in a block."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public static void printBlock(String output) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        print(LINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        print(\" \" + output);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        print(LINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Reads in a line of input, and parses it."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @return Parser object that parsed the line of input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @throws DukeException If there is a problem with the command read in."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Parser readCommand() throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return new Parser(sc.nextLine());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 63
    }
  },
  {
    "path": "src/main/java/exception/DukeDeadlineMissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class DukeDeadlineMissingDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public DukeDeadlineMissingDateException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(\"For adding deadlines, please add the deadline date as well.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeDoneEmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class DukeDoneEmptyListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public DukeDoneEmptyListException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(\"The todo list is empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeEventMissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class DukeEventMissingDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public DukeEventMissingDateException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(\"For adding event, please add the event start date as well.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void printMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Ui.printBlock(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 19
    }
  },
  {
    "path": "src/main/java/exception/DukeIndexOutOfBoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class DukeIndexOutOfBoundException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Creates an exception for when the index specified is out of bound of the size of array."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param input Input passed in by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param max Maximum size of the array (to be passed in by the program)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public DukeIndexOutOfBoundException(int input, int max) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        this.errorMessage \u003d String.format("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                \"There is no task number #%d. Please enter a range between 1 and %d.\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": "                input, max);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void printMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        Ui.printBlock(this.errorMessage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 26
    }
  },
  {
    "path": "src/main/java/exception/DukeMissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class DukeMissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public DukeMissingDescriptionException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(\"Please add in the description as well.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeMissingIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class DukeMissingIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public DukeMissingIndexException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(\"Please add in the index as well.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeMissingSearchTermException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class DukeMissingSearchTermException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public DukeMissingSearchTermException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(\"Please add in the search term.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeNoSuchCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class DukeNoSuchCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public DukeNoSuchCommandException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(\"No such command found.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeSaveFailedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class DukeSaveFailedException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public DukeSaveFailedException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(\"Failed to save to file.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 9
    }
  },
  {
    "path": "src/main/java/exception/DukeWrongDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class DukeWrongDateFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public DukeWrongDateFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(\"The date is in wrong format. Please enter in the following format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "daekoon": 8
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeWrongDateFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * Class used to create and store Deadline tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * @author Lim Daekoon"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private Date by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Constructs a new deadline class with \u0027done\u0027 status set to false."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param task Description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param by Deadline of this task, in String form"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Deadline(String task, String by) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.by \u003d dateFormatter.parse(by);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            throw new DukeWrongDateFormatException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Constructs a new deadline class with the \u0027done\u0027 status passed in as a parameter."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Used when loading data from saved file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param task Description of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param done Status of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param by Deadline of this task, in String form."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Deadline(String task, String done, String by) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.by \u003d dateFormatter.parse(by);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            throw new DukeWrongDateFormatException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            super.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Converts this Deadline object into storage string form."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @return Data of this object, in storage string form."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String output \u003d \"D|\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            output \u003d output + \"1|\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            output \u003d output + \"0|\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        output \u003d output + super.taskName + \"|\" + dateFormatter.format(this.by);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateFormatter.format(by) + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 71
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeWrongDateFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * Class used to create and store Event tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": " * @author Lim Daekoon"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private Date at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Constructs a new Event object with \u0027done\u0027 status set to false."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param task Description of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param at Time this event occurs, in String form"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Event(String task, String at) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.at \u003d dateFormatter.parse(at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            throw new DukeWrongDateFormatException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Constructs a new Event object with the \u0027done\u0027 status passed in as a parameter."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Used when loading data from saved file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param task Description of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param done Status of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param at Time this event occurs, in String form."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Event(String task, String done, String at) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            this.at \u003d dateFormatter.parse(at);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            throw new DukeWrongDateFormatException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            super.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Converts this Event object into storage string form."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @return Data of this object, in storage string form."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String output \u003d \"E|\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            output \u003d output + \"1|\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            output \u003d output + \"0|\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        output \u003d output + super.taskName + \"|\" + dateFormatter.format(this.at);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateFormatter.format(at) + \")\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 70
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    String taskName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    // Default constructor for this class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        this.taskName \u003d task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    // Returns a string containing the information of this object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.taskName);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    // Marks this task as done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    // Method used to convert this object into a storable string form."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public abstract String toStorageString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 34
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Constructs a new Todo object with \u0027done\u0027 status set to false."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param task Description of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Constructs a new Todo object with the \u0027done\u0027 status passed in as a parameter."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Used when loading data from saved file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param task Description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @param done Status of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public Todo(String task, String done) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        if (done.equals(\"1\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            super.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * Converts this Todo object into storage string form."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     * @return Data of this object, in storage string form."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daekoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        String output \u003d \"T|\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        if (super.isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            output \u003d output + \"1|\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daekoon"
        },
        "content": "            output \u003d output + \"0|\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        output \u003d output + super.taskName;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 45
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void getTypeTest() throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        assertEquals(new Parser(\"bye\").getType(), \"bye\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void getDescriptionTest() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        assertEquals(new Parser(\"todo test\").getDescription(), \"test\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    public void getIndexTest() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": "        assertEquals(new Parser(\"delete 1\").getIndex(), 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daekoon": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "done a"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": "todo Hello World"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": "deadline Test without date"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "deadline Test with date /by tomorrow"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": "event Test without date"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": "event Event with date /at 3rd July"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "daekoon": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daekoon"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daekoon"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daekoon"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daekoon"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daekoon"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daekoon"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daekoon"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daekoon"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daekoon"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daekoon"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daekoon"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daekoon"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daekoon"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daekoon"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daekoon"
        },
        "content": "java -classpath ../bin seedu.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daekoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daekoon"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daekoon"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daekoon"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daekoon"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daekoon"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daekoon"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daekoon"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "daekoon": 34
    }
  }
]
