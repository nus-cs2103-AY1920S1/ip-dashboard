[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "\ttoolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 22,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "T | 1 | borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "D | 0 | return book  |  Saturday 5pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "E | 1 | project meeting  |  tomorrow 3-6pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "D | 0 | project increments  |  Thursday 2359"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "D | 1 | return book  | 2nd of December 2019, 6.0pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "D | 0 | return book  |  2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "D | 0 | finish readings  |  23rd of July 2023, 12:59am"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "E | 1 | wedding dinner  |  30th of October 2025, 9:20pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "T | 1 | finish project"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "E | 0 | dinner  |  2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "D | 0 | finish project  |  3rd of January 2020, 6:10pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "D | 0 | todo event  |  14th of April 1995, 11:59am"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This is a Personal Assistant Chatbot named Duke. It acts like a task manager to help a person keep track of"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * tasks to do, various deadlines and events. The name Duke was chosen in honor of Duke, the Java Mascot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private TaskList tasklist;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the Duke class with a certain filepath."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Creates a new user interface and storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Load any existing tasks from the file found in filepath to a list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * If no file is found in the filepath, shows an error and creates a new list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param filePath location of file containing previously saved list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Runs the Duke application."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Shows a welcome message and starts receiving commands from user inputs."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes commands accordingly."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        boolean isTerminated \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        while (!isTerminated) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                ui.sendLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                c.execute(tasklist, ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                isTerminated \u003d c.isTerminated();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                ui.sendMessage(e.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                ui.sendLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Represents the main class of the Duke application."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Starts up a new Duke application with a filepath showing location of previously saved tasks."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param args string array of arguments, entry point of program."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 67,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.ListFullException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command adds a Deadline to the list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the task and its deadline to be added."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param task name of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param deadline deadline to be met."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public AddDeadlineCommand(String task, String deadline) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the adding of Deadline to the list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Firstly checks whether list of tasks is already full (maximum 100 tasks)."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Then reformats date and time of the deadline provided and creates a new Deadline to be added to list of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Finally outputs what has been added successfully to the list of tasks using the UI."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what has been added."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if list of tasks is full or if dateTime provided is invalid."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (tasklist.size() \u003e\u003d 100) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new ListFullException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            DateTime dateTime \u003d new DateTime(deadline);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist.add(new Deadline(task, dateTime.toReformat()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task thing \u003d tasklist.get(tasklist.size() - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(\"  \" + thing.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(String.format(\"Now you have %d tasks in the list.\", tasklist.size()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 63
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.ListFullException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.format.DateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command adds an Event to the list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the task and its time to be added."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param task name of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param time time of event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public AddEventCommand(String task, String time) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the adding of Event to the list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Firstly checks whether list of tasks is already full (maximum 100 tasks)."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Then reformats date and time of the event provided and creates a new Event to be added to list of tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Finally outputs what has been added successfully to the list of tasks using the UI."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what has been added."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if list of tasks is full or if dateTime provided is invalid."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (tasklist.size() \u003e\u003d 100) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new ListFullException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            DateTime dateTime \u003d new DateTime(time);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist.add(new Event(task, dateTime.toReformat()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task thing \u003d tasklist.get(tasklist.size() - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(\"  \" + thing.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(String.format(\"Now you have %d tasks in the list.\", tasklist.size()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 63
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.ListFullException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command adds a Todo to the list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String item;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the task to be added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item name of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public AddTodoCommand(String item) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the adding of Todo to the list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Firstly checks whether list of tasks is already full (maximum 100 tasks)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Then creates a new Todo to be added to list of tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Finally outputs what has been added successfully to the list of tasks using the UI."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what has been added."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if list of tasks is full."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (tasklist.size() \u003e\u003d 100) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new ListFullException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist.add(new Todo(item));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task thing \u003d tasklist.get(tasklist.size() - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(\"  \" + thing.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(String.format(\"Now you have %d tasks in the list.\", tasklist.size()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 59
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command terminates the application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Stops application from reading anymore user inputs."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return terminated."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the termination of the application."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initiates saving(overwriting) of list of tasks using storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Show any errors in saving and outputs a final farewell message to the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to say bye to the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage saves list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            storage.saveFile(tasklist);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            System.out.println(\"Unable to save data: \" + e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendBye();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 41
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public abstract void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public abstract boolean isTerminated();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command deletes task from the list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String itemIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises deleting of a task using the task index."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param itemIndex task index."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public DeleteTaskCommand(String itemIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.itemIndex \u003d itemIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the deletion of a task from the list of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Firstly converts the task index string to an integer."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Then check that the task index entered by the user is valid."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Finally remove the task from the list of tasks and output what has been successfully deleted using the UI."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what has been deleted."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if task index is invalid."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        // convert string to int"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        int index \u003d Integer.parseInt(itemIndex) - 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasklist.size()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task item \u003d tasklist.get(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // delete task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasklist.remove(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(\"  \" + item.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(String.format(\"Now you have %d tasks in the list.\", tasklist.size()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 61
    }
  },
  {
    "path": "src/main/java/duke/command/DoneTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command marks task as done from the list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class DoneTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String itemIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises marking a task as done using the task index."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param itemIndex task index."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public DoneTaskCommand(String itemIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.itemIndex \u003d itemIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the marking of a task as done from the list of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Firstly converts the task index string to an integer."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Then check that the task index entered by the user is valid."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Finally mark the task as done from the list of tasks and output what has been successfully"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * completed using the UI."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what has been done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if task index is invalid."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        // convert string to int"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        int index \u003d Integer.parseInt(itemIndex) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasklist.size()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task item \u003d tasklist.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // tick completed task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            item.setDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage(\"  \" + item.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 61
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command gives users a way to find a task by searching for a keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the keyword to be searched."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param keyword keyword to be searched."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes the search of a task from the list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * If any task is found to contain the searched keyword string, prints the task out."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to print out matching tasks in a new list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ui.sendMessage(\"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        for (int i \u003d 0; i \u003c tasklist.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String task \u003d tasklist.get(i).toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            boolean isMatch \u003d task.contains(keyword);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (isMatch) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                ui.sendMessage((i + 1) + \".\" + task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 53
    }
  },
  {
    "path": "src/main/java/duke/command/SendTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * This command lists down all tasks from the list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class SendTasksCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures that Duke application continues to read in user inputs."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return not terminated."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public boolean isTerminated() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Executes listing down of all existing tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param ui user interface to inform user what tasks are available."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param storage is not used here."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ui.sendMessage(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        for (int i \u003d 0; i \u003c tasklist.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            Task item \u003d tasklist.get(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            ui.sendMessage((i + 1) + \".\" + item.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 37
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class InvalidDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"☹ OOPS!!! Please provide the date and time in the correct format as follows: \""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                + \"DD/MM/YYYY HHMM (eg. 2/12/2019 1800)\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"☹ OOPS!!! Please indicate the correct task index.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/ListFullException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class ListFullException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"☹ OOPS!!! You can add no more than 100 tasks!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"☹ OOPS!!! Please provide a date and time.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"☹ OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingEventException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"☹ OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingKeywordException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"☹ OOPS!!! Please indicate keyword to be searched.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"☹ OOPS!!! Please indicate a task index.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class MissingTodoException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 9
    }
  },
  {
    "path": "src/main/java/duke/format/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.InvalidDateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Teaching Duke to understand dates and times."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String year;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises a DateTime."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Ensures no white spaces at front and back of string before reformatting it."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param dateTime raw string extracted from original user input string."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public DateTime(String dateTime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.dateTime \u003d dateTime.strip();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Converts original dateTime string to a different format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * eg. Converts 2/12/2019 1800 -\u003e 2nd of December 2019, 6pm."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return reformatted string."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if invalid dateTime given."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toReformat() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        reformat(dateTime);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return \" \" + day + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private void reformat(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        String[] splitStr \u003d dateTime.split(\"/\", 3);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (splitStr.length \u003c 3) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            reformatDay(splitStr[0]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            reformatMonth(splitStr[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String[] splitTime \u003d splitStr[2].split(\" \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (splitTime.length \u003c 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                reformatYear(splitTime[0]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                reformatTime(splitTime[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private void reformatDay(String split) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        int i \u003d Integer.parseInt(split);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (i \u003e 31 || i \u003c 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (i \u003d\u003d 11 || i \u003d\u003d 12 || i \u003d\u003d 13) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            day \u003d split + \"th\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (i % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            day \u003d split + \"st\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (i % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            day \u003d split + \"nd\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (i % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            day \u003d split + \"rd\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            day \u003d split + \"th\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private void reformatMonth(String split) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        int i \u003d Integer.parseInt(split);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        switch (i) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            month \u003d \"January\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            month \u003d \"February\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            month \u003d \"March\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            month \u003d \"April\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            month \u003d \"May\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            month \u003d \"June\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            month \u003d \"July\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case 8:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            month \u003d \"August\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case 9:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            month \u003d \"September\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case 10:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            month \u003d \"October\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            month \u003d \"November\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        case 12:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            month \u003d \"December\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private void reformatYear(String split) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        year \u003d split;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private void reformatTime(String split) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        int t \u003d Integer.parseInt(split);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        int min \u003d t % 100;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        int hr \u003d t / 100;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (t \u003e 2359) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (hr \u003d\u003d 0) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (min \u003d\u003d 0) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                time \u003d \"12am\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else if (min \u003c\u003d 9) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                time \u003d \"12:0\" + min + \"am\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                time \u003d \"12:\" + min + \"am\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (hr \u003c 12) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (min \u003d\u003d 0) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                time \u003d hr + \"am\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else if (min \u003c\u003d 9) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                time \u003d hr + \":0\" + min + \"am\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                time \u003d hr + \":\" + min + \"am\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (hr \u003d\u003d 12) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (min \u003d\u003d 0) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                time \u003d \"12pm\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else if (min \u003c\u003d 9) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                time \u003d hr + \":0\" + min + \"pm\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                time \u003d hr + \":\" + min + \"pm\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            hr \u003d hr - 12;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (min \u003d\u003d 0) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                time \u003d hr + \"pm\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else if (min \u003c\u003d 9) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                time \u003d hr + \":0\" + min + \"pm\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                time \u003d hr + \":\" + min + \"pm\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 164
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.SendTasksCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.DoneTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.DeleteTaskCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingTaskIndexException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingTodoException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingDeadlineException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingEventException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingDateTimeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.MissingKeywordException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Determines which command to be executed by Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    String fullCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private static Command command;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Parser(String fullCommand) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Recognises certain user inputs as a valid Duke command to be executed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param fullCommand raw user input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return a suitable command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws DukeException if incomplete or invalid user input given."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            command \u003d new ByeCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            command \u003d new SendTasksCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (fullCommand.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // to identify which task completed, split command at space"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String[] splitStr \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // if less than 2 words"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (splitStr.length \u003c 2) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingTaskIndexException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                // take 2nd word"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                String itemIndex \u003d splitStr[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                command \u003d new DoneTaskCommand(itemIndex);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // split command at first space"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String[] splitStr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // if less than 2 words"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (splitStr.length \u003c 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingTodoException();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                // take 2nd word onwards"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                String item \u003d splitStr[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                command \u003d new AddTodoCommand(item);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // split command at first space"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String[] splitStr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // if less than 2 words"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (splitStr.length \u003c 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingDeadlineException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                // take 2nd word onwards"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                String item \u003d splitStr[1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    String[] data \u003d item.split(\"/by\", 2);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    if (data.length \u003d\u003d 2 \u0026\u0026 !data[1].isEmpty() \u0026\u0026 !data[1].equals(\" \")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        String task \u003d data[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        String deadline \u003d data[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        command \u003d new AddDeadlineCommand(task, deadline);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        throw new MissingDateTimeException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    throw new MissingDateTimeException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // split command at first space"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String[] splitStr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // if less than 2 words"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (splitStr.length \u003c 2) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingEventException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                // take 2nd word onwards"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                String item \u003d splitStr[1];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    String[] data \u003d item.split(\"/at\", 2);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    if (data.length \u003d\u003d 2 \u0026\u0026 !data[1].isEmpty() \u0026\u0026 !data[1].equals(\" \")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        String task \u003d data[0];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        String time \u003d data[1];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        command \u003d new AddEventCommand(task, time);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        throw new MissingDateTimeException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    throw new MissingDateTimeException();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // to identify which task completed, split command at space"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String[] splitStr \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // if less than 2 words"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (splitStr.length \u003c 2) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingTaskIndexException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                // take 2nd word"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                String itemIndex \u003d splitStr[1];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                command \u003d new DeleteTaskCommand(itemIndex);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // to extract keyword, split command at space"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String[] splitStr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // if less than 2 words"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (splitStr.length \u003c 2) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                throw new MissingKeywordException();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                // take 2nd word"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                String keyword \u003d splitStr[1];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                command \u003d new FindCommand(keyword);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 141
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Deals with the loading and saving of tasks to the assigned file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // keep track of number of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private static int count \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Creates a new list of tasks and load tasks one by one from the saved file in filepath to this list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return list of saved tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws FileNotFoundException if no such file is found in filepath."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        // create a file object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        Scanner load \u003d new Scanner(f);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        while (load.hasNext()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String item \u003d load.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            loadTask(item, tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Figures out the type of task being loaded from saved file, creates the new task and adds to the"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * new list of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * For each task being created, check if it is done already and mark it accordingly while loading."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item entire task as a string."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasks new task list to be loaded with tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private static void loadTask(String item, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (item.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // split command into 3 parts"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String[] splitStr \u003d item.split(\" \\\\| \", 3);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasks.add(new Todo(splitStr[2]));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (splitStr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                tasks.get(count).setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (item.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // split command into 4 parts"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String[] splitStr \u003d item.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasks.add(new Deadline(splitStr[2], splitStr[3]));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (splitStr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                tasks.get(count).setDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else if (item.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            // split command into 4 parts"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            String[] splitStr \u003d item.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            tasks.add(new Event(splitStr[2], splitStr[3]));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            if (splitStr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                tasks.get(count).setDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Saves the existing list of tasks to the filepath."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param tasklist existing list of tasks."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @throws IOException if unable to save file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void saveFile(TaskList tasklist) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        FileWriter save \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        for (int i \u003d 0; i \u003c tasklist.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            save.write(tasklist.get(i).saveTask());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        save.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 96
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Represents a type of task known as Deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // the Deadline subclass adds one field"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises a Deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * A Deadline consists of the task itself and a deadline to be met."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item name of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param by deadline to be met."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // the Deadline subclass has one constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Deadline(String item, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        super(item);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Prints a Deadline as a string to the user in a specific format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return Deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides toString method in Task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[D][\" + \"/\" + \"] \" + super.toString() + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[D][\" + \"x\" + \"] \" + super.toString() + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Saves a Deadline as a string to the file in a specific format."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return Deadline."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides saveTask method in Task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"D\" + \" | \" + \"1\" + \" | \" + super.toString() + \" | \" + by + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"D\" + \" | \" + \"0\" + \" | \" + super.toString() + \" | \" + by + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Represents a type of task known as Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // the Event subclass adds one field"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises an Event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * An Event consists of the task itself and a time when it will happen."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item name of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param at time of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // the Event subclass has one constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Event(String item, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        super(item);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Prints an Event as a string to the user in a specific format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return Event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides toString method in Task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[E][\" + \"/\" + \"] \" + super.toString() + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[E][\" + \"x\" + \"] \" + super.toString() + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Saves an Event as a string to the file in a specific format."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return Event."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides saveTask method in Task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"E\" + \" | \" + \"1\" + \" | \" + super.toString() + \" | \" + at + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"E\" + \" | \" + \"0\" + \" | \" + super.toString() + \" | \" + at + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Represents a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String item;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises a Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * A Task consist of the task name and whether the task has been done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item name of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Task(String item) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Marks this Task as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Returns the task name as a string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return name of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return this.item;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Returns the task name as a string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return name of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overridden method by Deadline, Event and Todo, define method so as not to make the Task class an abstract class."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return this.item;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 49
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Represents a list of tasks inputted by the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Returns a particular task with the requested index from this list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param index task number."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return task with the requested index."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static Task get(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Returns the total number of tasks in this list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return total number of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static int size() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Deletes a particular task with the requested index from this list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param index task number."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static void remove(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static void add(Task task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Represents a type of task known as Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises a Todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * A Todo consists of the task itself."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param item name of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // the Todo subclass has one constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Todo(String item) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        super(item);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Prints a Todo as a string to the user in a specific format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return Todo."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides toString method in Task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[T][\" + \"/\" + \"] \" + super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"[T][\" + \"x\" + \"] \" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Saves a Todo as a string to the file in a specific format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return Todo."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    // overrides saveTask method in Task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"T\" + \" | \" + \"1\" + \" | \" + super.toString() + \"\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            return \"T\" + \" | \" + \"0\" + \" | \" + super.toString() + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 49
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Represents the user interface for the Duke application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " * Controls how outputs are shown to the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Initialises the UI class with a new scanner to take in user inputs."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Shows welcome message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static void showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        Ui.sendLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        Ui.sendGreet();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        Ui.sendLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Reads in user inputs."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @return the current line of active user command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Prints line divider."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static void sendLine() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Prints greetings to the user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static void sendGreet() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Shows an error to the user when no previously saved file is found."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static void showLoadingError() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        sendLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        System.out.println(\"File not found. Creating new list...\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        sendLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Prints any messages the Duke application wants to communicate with the user, with the correct indentation."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * @param input messages from Duke."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static void sendMessage(String input) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        System.out.println(\"     \" + input);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     * Prints farewell message to the user."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public static void sendBye() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 85
    }
  },
  {
    "path": "src/test/java/duke/format/DateTimeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class DateTimeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void toReformat_correctFormat_success() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(\" 2nd of December 2019, 6pm\", new DateTime(\" 2/12/2019 1800 \").toReformat());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(\" 12th of September 2020, 12:01am\", new DateTime(\" 12/9/2020 0001 \").toReformat());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(\" 23rd of March 2025, 12:55pm\", new DateTime(\"   23/3/2025 1255   \").toReformat());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void toReformat_missingTime_exceptionThrown() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\" 2nd of December 2019, 6pm\", new DateTime(\" 2/12/2019 \").toReformat());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please provide the date and time in the correct format as follows: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + \"DD/MM/YYYY HHMM (eg. 2/12/2019 1800)\", e.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void toReformat_missingYear_exceptionThrown() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\" 2nd of December 2019, 6pm\", new DateTime(\" 2/12 1800 \").toReformat());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please provide the date and time in the correct format as follows: \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + \"DD/MM/YYYY HHMM (eg. 2/12/2019 1800)\", e.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void toReformat_invalidDay_exceptionThrown() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\" 2nd of December 2019, 6pm\", new DateTime(\" 32/12/2019 1800 \").toReformat());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please provide the date and time in the correct format as follows: \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + \"DD/MM/YYYY HHMM (eg. 2/12/2019 1800)\", e.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void toReformat_invalidMonth_exceptionThrown() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\" 2nd of December 2019, 6pm\", new DateTime(\" 2/00/2019 1800 \").toReformat());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please provide the date and time in the correct format as follows: \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + \"DD/MM/YYYY HHMM (eg. 2/12/2019 1800)\", e.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void toReformat_invalidTime_exceptionThrown() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\" 2nd of December 2019, 6pm\", new DateTime(\" 2/12/2019 2400 \").toReformat());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please provide the date and time in the correct format as follows: \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    + \"DD/MM/YYYY HHMM (eg. 2/12/2019 1800)\", e.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 72
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.SendTasksCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.DoneTaskCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.DeleteTaskCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_correctCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new ByeCommand().getClass(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"bye\").parse(\"bye\").getClass());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new SendTasksCommand().getClass(),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"list\").parse(\"list\").getClass());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new DoneTaskCommand(\"2\").getClass(),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"done 2\").parse(\"done 2\").getClass());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new AddTodoCommand(\"project increments\").getClass(),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"todo project increments\").parse(\"todo \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        + \"project increments\").getClass());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new AddDeadlineCommand(\"return book \", \" 15/09/2019 1700\").getClass(),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"deadline return book /by 15/09/2019 1700\").parse(\"deadline \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        + \"return book /by 15/09/2019 1700\").getClass());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new AddEventCommand(\"project meeting \", \" 17/12/2019 1500\").getClass(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"event project meeting /at 17/12/2019 1500\").parse(\"event \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                        + \"project meeting /at 17/12/2019 1500\").getClass());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new DeleteTaskCommand(\"5\").getClass(),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"delete 5\").parse(\"delete 5\").getClass());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        assertEquals(new FindCommand(\"book\").getClass(),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                new Parser(\"find book\").parse(\"find book\").getClass());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingDone_exceptionThrown() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new DoneTaskCommand(\"2\"),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"done\").parse(\"done\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please indicate a task index.\", e.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingTodo_exceptionThrown() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new AddTodoCommand(\"project increments\"),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"todo\").parse(\"todo\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a todo cannot be empty.\", e.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingDeadline_exceptionThrown() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new AddDeadlineCommand(\"return book \", \" 15/09/2019 1700\"),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"deadline\").parse(\"deadline\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a deadline cannot be empty.\", e.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingDateTime1_exceptionThrown() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new AddDeadlineCommand(\"return book \", \" 15/09/2019 1700\"),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"deadline return book \").parse(\"deadline return book \"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please provide a date and time.\", e.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingDateTime2_exceptionThrown() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new AddEventCommand(\"project meeting \", \" 17/12/2019 1500\"),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"event project meeting /at \").parse(\"event \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                            + \"project meeting /at \"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please provide a date and time.\", e.toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingEvent_exceptionThrown() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new AddEventCommand(\"project meeting \", \" 17/12/2019 1500\"),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"event\").parse(\"event\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of an event cannot be empty.\", e.toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingDelete_exceptionThrown() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new DeleteTaskCommand(\"5\"),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "                    new Parser(\"delete\").parse(\"delete\"));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please indicate a task index.\", e.toString());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new SendTasksCommand(), new Parser(\"blah\").parse(\"blah\"));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.toString());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    public void parse_missingKeyword_exceptionThrown() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(new FindCommand(\"book\"), new Parser(\"find\").parse(\"find\"));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please indicate keyword to be searched.\", e.toString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 138
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "﻿Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "       [T][?] borrow book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "       [D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     2.[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     3.[E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     4.[D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     2.[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     3.[E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     4.[D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     ☹ OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     2.[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     3.[E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     4.[D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     1.[T][?] borrow book"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     2.[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     3.[D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 83
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "﻿"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khiangleon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khiangleon"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "khiangleon": 21
    }
  }
]
