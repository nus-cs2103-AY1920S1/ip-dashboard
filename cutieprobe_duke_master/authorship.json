[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "cutieprobe": 6
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 83,
      "cutieprobe": 17
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private static final ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private static void handleList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        if (TASKS.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            System.out.println(\"     There are no tasks for now!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        for (int i \u003d 0; i \u003c TASKS.size(); i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            System.out.printf(\"     %d.%s\\n\", i + 1, TASKS.get(i));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private static void handleDone(String line) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            String[] input \u003d line.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            Task task \u003d TASKS.get(Integer.parseInt(input[1]) - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            System.out.printf(\"       %s\\n\", task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Oops! Please enter a valid task number.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private static void handleDelete(String line) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            String[] input \u003d line.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            Task task \u003d TASKS.get(Integer.parseInt(input[1]) - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            TASKS.remove(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            System.out.printf(\"       %s\\n\", task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            System.out.printf(\"     Now you have %d tasks in the list.\\n\", TASKS.size());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Oops! Please enter a valid task number.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private static void handleToDo(String line) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String[] input \u003d line.split(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        for (int i \u003d 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            description \u003d description.concat(\" \" + input[i]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        description \u003d description.trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Oops! The task description cannot be empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        TASKS.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.printf(\"       %s\\n\", task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.printf(\"     Now you have %d tasks in the list.\\n\", TASKS.size());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private static void handleDeadLine(String line) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String[] input \u003d line.split(\" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String by \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        boolean isDescription \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        for (String word: input) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            if (word.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            } else if (word.equals(\"/by\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                isDescription \u003d false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            } else if (isDescription) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                description \u003d description.concat(\" \" + word);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                by \u003d by.concat(\" \" + word);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        description \u003d description.trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        by \u003d by.trim();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Oops! The task description cannot be empty.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        if (by.isBlank()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Oops! The task deadline cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        Task task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        TASKS.add(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.printf(\"       %s\\n\", task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.printf(\"     Now you have %d tasks in the list.\\n\", TASKS.size());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private static void handleEvent(String line) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String[] input \u003d line.split(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String at \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        boolean isDescription \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        for (String word: input) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            if (word.equals(\"event\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            } else if (word.equals(\"/at\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                isDescription \u003d false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            } else if (isDescription) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                description \u003d description.concat(\" \" + word);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                at \u003d at.concat(\" \" + word);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        description \u003d description.trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        at \u003d at.trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Oops! The task description cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        if (at.isBlank()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            throw new DukeException(\"Oops! The task dates/times cannot be empty.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        Task task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        TASKS.add(task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.printf(\"       %s\\n\", task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.printf(\"     Now you have %d tasks in the list.\\n\", TASKS.size());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    private static void handleException() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.println(\"     Oops! I\u0027m sorry. I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     * Main method of duke project."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        String greeting \u003d \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                + \"     What can I do for you?\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            if (line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            if (line.equals(\"list\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                handleList();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            String[] input \u003d line.split(\" \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                switch (input[0]) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                    handleDone(line);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                    handleDelete(line);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                    handleToDo(line);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                    handleDeadLine(line);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                    handleEvent(line);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                    throw new DukeException(\"Oops! I don\u0027t understand your command.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "                System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "cutieprobe": 171
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 7
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 16
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 29
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "deadline CS2103 iP /by today"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "event birthday party /at tmr 6pm-8pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "blah"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "deadline presentation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "deadline /by this week"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "event watch movie"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "event /at 12 Sept"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "done 12"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "done nani"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "if [ ! -d \"../bin\" ]; then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]; then"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "fi"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java; then"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "fi"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "if diff ACTUAL.TXT EXPECTED.TXT; then"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "else"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cutieprobe"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "cutieprobe": 29
    }
  }
]
