[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": "run{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    mainClassName \u003d \"Duke\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 19,
      "-": 15
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Creates an AddCommand object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Adds the task to the tasklist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Adds the task to the tasklist."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param tasks to handle the tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param ui to get user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param storage to store tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        tasks.addTask(this.task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        ui.printAddMessage(tasks, this.task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 34
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Abstract class blueprint for all commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param tasks to handle the tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param ui to get user input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param storage to store tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public abstract void execute (TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * If bye is keyed in,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @return true to terminate the input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 18
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public Deadline(String desc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Reading the date as entered by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Throws ParseException if the format is not met."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param time of the event in String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @throws ParseException when unable to Parse the date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void parseTime(String time) throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(time);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public Date getDueDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by : \" + this.date + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 31
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Creates an DeleteCommand object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Deletes a task from the tasklist at a certain index"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param task to be deleted"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Deletes the specified task from the tasklist."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param tasks to handle the tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param ui to get user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param storage to store tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        Task task \u003d tasks.getTask(this.index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        tasks.delete(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        ui.printDeleteMessage(tasks, task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 36
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 42
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Creates a DoneCommand object"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param index of the task to be marked as done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Marks the specified task as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param tasks to handle the tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param ui to get user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param storage to store tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        Task task \u003d tasks.getTask(this.index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            storage.writeToHardDisk(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        ui.printDoneMessage(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 38
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": " * Duke, a personal chat bot assistant that helps you manage your tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": " * @author KaiBin"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": " * @since 19-08-2019"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ckb055"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * JavaFX tools"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Duke tools"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Images for the user and Duke"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            (\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            (\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Empty constructor."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Contructs a duke object that accesses the file from the specified filepath"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param filePath of the TaskList"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        });"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        });"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Main method to run Duke"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param args the filepath of the tasklist in the harddisk"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        new Duke(\"C:\\\\repos\\\\duke\\\\out\\\\data\\\\TaskList.txt\").run();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * To handle user input"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        );"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    // Duke\u0027s response, customisable"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 190,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public DukeException (String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 5
    }
  },
  {
    "path": "src/main/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public Event(String desc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Reading the date as entered by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Throws ParseException if the format is not met."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param time of the event in String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @throws ParseException when unable to Parse the date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void parseTime(String time) throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\").parse(time);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public Date getDueDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at : \" + this.date + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 32
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    ExitCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Exits the bot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param tasks to handle the tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param ui to get user input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param storage to store tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        ui.closeScanner();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 23
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private String word;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public FindCommand(String word) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        for (Task task : tasks.getWholeList()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            if (task.getTask().contains(this.word)) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                System.out.println(count + \".\" + task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 24
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Lists all files in the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param tasks to handle the tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param ui to get user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param storage to store tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        tasks.showList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 24
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Parses the sentence entered by the user and returns various commands"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param input by the user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @return other commands"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    // parse the command string keyed in by the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public static Command parse (String input) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        String[] userInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        String firstWord \u003d userInput[0]; //firstword of the user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        //try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            switch (firstWord) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    return new ExitCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    return new ListCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    int indexDone \u003d Integer.parseInt(userInput[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    return new DoneCommand(indexDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    int indexDelete \u003d Integer.parseInt(userInput[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    return new DeleteCommand(indexDelete);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    String descTodo \u003d userInput[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    if (descTodo.isEmpty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    ToDo todo \u003d new ToDo(descTodo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    return new AddCommand(todo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    String descDeadline \u003d userInput[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    if (descDeadline.isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    String[] deadlineInfo \u003d descDeadline.split(\"/by\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    if (deadlineInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! There is no due date specified.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    String actionD \u003d deadlineInfo[0]; // the action of the deadline"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    String dueDateD \u003d deadlineInfo[1]; // the due date of the deadline"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    Deadline deadline \u003d new Deadline(actionD);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        deadline.parseTime(dueDateD);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        throw new DukeException(\"Incorrect format for due date of deadline!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    return new AddCommand(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    String descEvent \u003d userInput[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    if (descEvent.isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    String[] eventInfo \u003d descEvent.split(\"/at\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    if (eventInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! There is no due date specified.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    String actionE \u003d eventInfo[0]; // the action of the event"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    String dueDateE \u003d eventInfo[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    Event event \u003d new Event(actionE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        event.parseTime(dueDateE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        throw new DukeException(\"Incorrect format for due date of Event!!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    return new AddCommand(event);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    String query \u003d userInput[1];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    return new FindCommand(query);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                default :"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        //} catch (DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        //    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        //}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        //return new AddCommand();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 84
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": " *  Represents the file to load-up and save the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Constructs a storage object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param filepath refers to the file path of TaskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public Storage (String filepath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * WriteToFile method to only be used by Storage class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Saves the taskslist to the file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param filePath the directory of the TaskList file, in the form of a String"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param textToAdd text that is meant to be appended"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // boolean param to append and not overwrite"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        fw.append(textToAdd);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Loads up the tasklist from the saved file in the harddisk."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @return ArrayList of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @throws DukeException if the file is not found."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            File loadUpFile \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            Scanner scLoad \u003d new Scanner(loadUpFile);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            while (scLoad.hasNextLine()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                String sentence \u003d scLoad.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                String[] taskInfo \u003d sentence.split(\" \\\\u007C \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                if (taskInfo[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    ToDo taskT \u003d new ToDo(taskInfo[2]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        taskT.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    tasks.add(taskT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                } else if (taskInfo[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    Deadline taskD \u003d new Deadline(taskInfo[2]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        taskD.parseTime(taskInfo[3]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        taskD.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    tasks.add(taskD);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                } else if (taskInfo[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    Event taskE \u003d new Event(taskInfo[2]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        taskE.parseTime(taskInfo[3]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    if (taskInfo[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                        taskE.markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    tasks.add(taskE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            scLoad.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            throw new DukeException(\"Error, File Not Found.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void writeToHardDisk(TaskList tasks) throws DukeException{"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            String taskListFilePath \u003d \"C:\\\\repos\\\\duke\\\\out\\\\data\\\\TaskList.txt\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            FileWriter fw \u003d new FileWriter (taskListFilePath);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                if (tasks.getTask(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    writeToFile(taskListFilePath, \"D | \" + tasks.getTask(i).isDone() + \" | \""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                            + tasks.getTask(i).getTask() + \" | \" + ((Deadline) tasks.getTask(i)).getDueDate());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                } else if (tasks.getTask(i) instanceof Event) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    writeToFile(taskListFilePath, \"E | \" + tasks.getTask(i).isDone() + \" | \""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                            + tasks.getTask(i).getTask() + \" | \" + ((Event) tasks.getTask(i)).getDueDate());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    writeToFile(taskListFilePath, \"T | \" + tasks.getTask(i).isDone() + \" | \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                            + tasks.getTask(i).getTask());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                if (i !\u003d tasks.getSize() - 1) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                    writeToFile(taskListFilePath, \"\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            System.out.println(\"An error occurred \" + e.getMessage());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 115
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public Task (String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Returns tick if the task is done,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * otherwise returns X."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @return Tick or X string symbol"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public int isDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.task;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 35
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Overloaded constructor to initialise empty arraylist"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * To get the number of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @return the size of the arraylist in an integer form"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * To add a task into the tasklist"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param task to be added"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * To delete a certain task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param task to be deleted"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void delete(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.tasks.remove(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * To get a task in the tasklist"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @param index of the task the user wishes to retrieve"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @return the specified task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Prints a list of the tasklist"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void showList() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        // prints a list of all tasks stored in this tasklist"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            System.out.println(i + 1 + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Gets the whole tasklist"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @return an arraylist of tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public ArrayList\u003cTask\u003e getWholeList() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 67
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public ToDo(String desc) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 10
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ckb055"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ckb055"
        },
        "content": " * TextUi of the Application"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ckb055"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /** Duke Logo to display upon startup. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ckb055"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    // empty constructor"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * showWelcome greets the user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Reads the command from the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * @return a command in String form"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * Printing various messages"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void printRemovedMessage(Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done\\n\" + task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void printDoneMessage(Task task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done\\n\" + task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void printDeleteMessage(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\\t\" + task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        tasks.delete(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void printAddMessage(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\\t\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ckb055"
        },
        "content": "                + task + \"\\n\" + \"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void printListMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        tasks.showList(); // this prints the list of tasks"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(\"___________________________________________________\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     * A method to close the scanner"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ckb055"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void closeScanner() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        this.sc.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ckb055"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(\"Error while loading\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    public void showError(String s) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ckb055"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ckb055"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 90
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ckb055"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ckb055"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ckb055": 2
    }
  }
]
