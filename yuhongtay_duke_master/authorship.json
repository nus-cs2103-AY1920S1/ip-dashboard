[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "[[T][✘] borrow book]"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 1
    }
  },
  {
    "path": "src/main/java/Border.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "public class Border {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        String output \u003d \"    \";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        for (int n \u003d 0 ; n \u003c 60 ; n ++){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            output +\u003d \"_\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 9
    }
  },
  {
    "path": "src/main/java/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    LIST(\"list\"), DONE(\"done\"), DELETE(\"delete\"), TODO(\"todo\"), DEADLINE(\"deadline\"), EVENT(\"event\");"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    private Commands(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public static Commands getByName(String keyword) throws DukeException{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        for(Commands command : values()){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            if(command.getName().equals(keyword)){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                return command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        throw new DukeException((new Border()) + \"\\n     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + (new Border()) + \"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 26
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "public class DateTime{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    private LocalDateTime start;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    private String display;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    private static DateTimeFormatter getDay \u003d DateTimeFormatter.ofPattern(\"dd\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    private static DateTimeFormatter getTime \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    private static DateTimeFormatter getMonth\u003d DateTimeFormatter.ofPattern(\"MMM\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public static DateTime setDeadline(String date_time){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        DateTime deadline \u003d new DateTime();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        deadline.start \u003d LocalDateTime.parse(date_time, formatter);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        deadline.display \u003d deadline.start.format(getMonth) + \" \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                + getDayOfMonth(deadline.start.format(getDay)) + \" \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                + deadline.start.format(getTime);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public static DateTime setEventTime (String date_time) throws DukeException{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        DateTime event \u003d new DateTime();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        int divider \u003d date_time.indexOf(\"-\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        if (divider \u003d\u003d -1 || (divider \u003d\u003d date_time.length() -1)){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            throw new DukeException((new Border()) + \"\\n     ☹ OOPS!!! Need to have end time.\\n\" + (new Border()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        String end \u003d date_time.substring(divider + 1, date_time.length());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        event.start \u003d LocalDateTime.parse(date_time.substring(0, divider), formatter);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        event.endTime \u003d LocalTime.parse(end, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        event.display \u003d event.start.format(getMonth) + \" \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                + getDayOfMonth(event.start.format(getDay)) + \" \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                + event.start.format(getTime) + \"-\" + event.endTime.format(getTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    private static String getDayOfMonth(String dd) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        if (dd.substring(0,1).equals(\"0\")){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            dd \u003d dd.substring(1,dd.length());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        int day \u003d Integer.parseInt(dd);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        if (day \u003e\u003d 11 \u0026\u0026 day \u003c\u003d 13) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            return day + \"th\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        switch (day % 10) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            case 1:  return day + \"st\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            case 2:  return day + \"nd\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            case 3:  return day + \"rd\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            default: return day + \"th\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        return display;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 60
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    DateTime date_Time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public Deadline(String description) throws DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        int divider \u003d description.indexOf(\"/by\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        if (divider \u003d\u003d -1 || (divider \u003d\u003d description.length() - 3)){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            throw new DukeException((new Border()) + \"\\n     ☹ OOPS!!! Incorrect Deadline format.\\n \" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    \"    Please key in Deadline (taskname) /by date(d/MM/yyyy) time(HHmm) \\n\" + (new Border()));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        date_Time \u003d DateTime.setDeadline(description.substring(divider + 4, description.length()));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        super.description \u003d super.description.substring(0, divider);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        String output \u003d \"[D][\" + super.getStatusIcon() + \"]\" + \" \" + super.description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                + \"(by: \" + date_Time.toString() + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        Task_List schedule \u003d new Task_List();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        System.out.println(new Border());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m \\n\" + logo + \"\\n    What can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        System.out.println(new Border() + \"\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        while (!input.equals(\"bye\")){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            schedule.add(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        System.out.println((new Border()) + \"\\n     Bye. Hope to see you again soon! \\n\" + (new Border()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 15,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public DukeException(String message, Throwable cause){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    DateTime date_Time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public Event(String description) throws DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        int divider \u003d description.indexOf(\"/at\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        if (divider \u003d\u003d -1 || (divider \u003d\u003d description.length() - 3)){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            throw new DukeException((new Border()) + \"\\n     ☹ OOPS!!! Incorrect Event format\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    \"    Please key in Deadline (taskname) /by date(d/MM/yyyy) start_time(HHmm)-end_time(HHmm) \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    + (new Border()));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        date_Time \u003d DateTime.setEventTime(description.substring(divider + 4, description.length()));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        super.description \u003d super.description.substring(0, divider);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        String output \u003d \"[E][\" + super.getStatusIcon() + \"]\" + \" \" + super.description + \"(at: \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                + date_Time.toString() + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 21
    }
  },
  {
    "path": "src/main/java/FileWriterClass.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "public class FileWriterClass {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                System.out.println(\"written in \" + filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                fw.write(textToAdd);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                throw new DukeException((new Border()) + \"\\n     ☹ Something went wrong: \" + e.getMessage() + \"\\n\" + (new Border()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 19
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    protected boolean deleted;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        this.deleted \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 21
    }
  },
  {
    "path": "src/main/java/Task_List.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "public class Task_List {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    ArrayList \u003cTask\u003e schedule \u003d new ArrayList\u003c\u003e ();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    int task_Num \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public void add(String task){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        String[] word_Arr \u003d task.split(\" \", 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            Commands command \u003d Commands.getByName(word_Arr[0]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    System.out.println(this);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            if (word_Arr.length \u003c 2)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                                throw new DukeException((new Border()) + \"\\n     ☹ OOPS!!! Which task did you complete again?\\n\" + (new Border()));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            schedule.get(Integer.parseInt(word_Arr[1]) - 1).markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            FileWriterClass.writeToFile(filePath, schedule.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            System.out.println(new Border());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            System.out.println(\"       \" + schedule.get(Integer.parseInt(word_Arr[1]) - 1).toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            System.out.println(new Border());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            throw new DukeException((new Border()) + \"\\n     ☹ OOPS!!! Index out of bounds.\\n\" + (new Border()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            throw new DukeException((new Border()) + \"\\n     ☹ OOPS!!! Please enter a single integer index of task to delete.\\n\" + (new Border()));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            if (word_Arr.length \u003c 2) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                                throw new DukeException((new Border()) + \"\\n     ☹ OOPS!!! What do you want to delete again?\\n\" + (new Border()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            Task removed_Task \u003d schedule.get(Integer.parseInt(word_Arr[1]) - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            schedule.remove(removed_Task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            FileWriterClass.writeToFile(filePath, schedule.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            task_Num --;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            System.out.println(new Border());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            System.out.println(\"       \" + removed_Task.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            System.out.println(\"      Now you have \" + task_Num + \" tasks in the list.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            System.out.println(new Border());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            throw new DukeException((new Border()) + \"\\n     ☹ OOPS!!! Index out of bounds.\\n\" + (new Border()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                            throw new DukeException((new Border()) +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                                    \"\\n     ☹ OOPS!!! Please enter a single integer for index of task to delete.\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                                    + (new Border()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    } finally {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        Task new_task \u003d track(word_Arr);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        schedule.add(new_task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        task_Num++;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        System.out.println(new Border());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        System.out.println(\"       \" + new_task.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        System.out.println(\"     Now you have \" + task_Num + \" tasks in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        System.out.println(new Border() + \"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    } catch (DukeException e){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    private Task track(String[] word_Arr) throws DukeException{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            if (word_Arr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                check_Decription(word_Arr, \"todo\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                return new Todo(word_Arr[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            } else if (word_Arr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                check_Decription(word_Arr, \"deadline\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                return new Deadline(word_Arr[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                check_Decription(word_Arr, \"event\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "                return new Event(word_Arr[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        } catch(DukeException e){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    private void check_Decription(String[] word_Arr, String task_Type) throws DukeException{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        if (word_Arr.length \u003c 2) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            throw new DukeException((new Border()) + \"\\n     ☹ OOPS!!! The description of a \" + task_Type + \" cannot be empty.\\n\" + (new Border()));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        String output \u003d (new Border()) + \"\\n\" + \"     Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        for (int index \u003d 0; index \u003c task_Num; index ++){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            Task task \u003d schedule.get(index);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "            output +\u003d (\"     \" + (index + 1) + \".\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        return output + (new Border()) + \"\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 116
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        String output \u003d \"[T][\" + super.getStatusIcon() + \"]\" + \" \" + super.description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuhongtay"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yuhongtay": 21
    }
  }
]
