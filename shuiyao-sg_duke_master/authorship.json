[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    mainClassName \u003d \"cs2103t.duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 15,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "[T][✓] read book 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "[E][✘] project meeting at: 1 FEBRUARY 2019 14:00 to 15:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "[T][?] read book 2"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "[D][?] return book 2 by: 3 MAY 2019"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 4
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.date.MyDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected MyDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.Deadline object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param by          deadline date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.by \u003d MyDate.genMyDate(by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Generates a cs2103t.duke.Deadline task from input String."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param s deadline date and time represented by String."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return cs2103t.duke.Deadline task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static Deadline genDeadline(String s) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] newInputArray \u003d s.split(\"/by\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String des, by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            des \u003d newInputArray[0].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            by \u003d newInputArray[1].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new Deadline(des, by);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Illegal input for deadline. \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + \"Please key in \u0027deadline \u003ctask\u003e /by \u003ctime\u003e\u0027\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Illegal input for time. Please key in the format \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + \"\u0027DD/MM/YYYY\u0027[SPACE]\u0027hhmm\u0027\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return \"[D]\" + super.toString() + \" by: \" + by.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 52
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents a Personal Assistant Chatbot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Starts the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param args arguments passed in."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 15,
      "-": 2
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.date.MyDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates an cs2103t.duke.Event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected MyDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs an cs2103t.duke.Event object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param at          event date and time represented by String."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.at \u003d MyDate.genMyDate(at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Generates an cs2103t.duke.Event task from input String."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param s String representation of event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return cs2103t.duke.Event task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static Event genEvent(String s) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] newInputArray \u003d s.split(\"/at\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String des, at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            des \u003d newInputArray[0].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            at \u003d newInputArray[1].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new Event(des, at);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Illegal input for event. \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + \"Please key in \u0027event \u003ctask\u003e /at \u003ctime\u003e\u0027\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Illegal input for time. Please key in the format \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    + \"\u0027DD/MM/YYYY\u0027[SPACE]\u0027hhmm-hhmm\u0027\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return \"[E]\" + super.toString() + \" at: \" + at.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 50
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a parser to deal with making sense of the user command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.Parser object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Parser(TaskList list) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Parses user\u0027s command to instructions for the bot to execute."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param input command from user input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return cs2103t.duke.command.Command command to be executed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Command parseCommand(String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (input.isBlank()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Empty user input is not allowed\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new ListCommand(this.list);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] inputArray \u003d input.split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (inputArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                int index \u003d Integer.parseInt(inputArray[1]) - 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new DoneCommand(this.list, index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(\"Please enter an integer after \u0027done\u0027\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(\"Input is not an integer. \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        + \"Please enter an integer after \u0027done\u0027\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(\"Please input a number between 1 and \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        + this.list.size() + \" (inclusive)\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (inputArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                int index \u003d Integer.parseInt(inputArray[1]) - 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new DeleteCommand(this.list, index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(\"Please enter an integer after \u0027delete\u0027\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(\"Input is not an integer. \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        + \"Please enter an integer after \u0027delete\u0027\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                throw new DukeIllegalArgumentException(\"Please input a number between 1 and \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                        + list.size() + \" (inclusive)\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (inputArray[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String des \u003d reformString(inputArray, 1, inputArray.length - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new ToDoCommand(this.list, des);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (inputArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String s \u003d reformString(inputArray, 1, inputArray.length - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new DeadlineCommand(this.list, s);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (inputArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String s \u003d reformString(inputArray, 1, inputArray.length - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new EventCommand(this.list, s);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (inputArray[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String s \u003d reformString(inputArray, 1, inputArray.length - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new FindCommand(this.list, s);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String secondLine \u003d \"Permissible command: [list], [done], [todo], [deadline], [event], [bye]\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        throw new DukeIllegalArgumentException(\"Illegal user input.\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                + String.format(\"%1$\" + (secondLine.length() + 5) + \"s\", secondLine));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static String reformString(String[] arr, int start, int end) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        for (int i \u003d start; i \u003c\u003d end; i++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            output +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return output.trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 104
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.DukeFileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a file I/O class to deal with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.Storage object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param filePath file path."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Appends text to the back of a file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param input text to append."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws DukeFileNotFoundException if file not found."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException               if failed to read or write to file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void appendText(String input) throws DukeFileNotFoundException, IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filePath, true); // if file not found, need to create new file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fw.write(input + System.lineSeparator());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeFileNotFoundException(\"File \" + filePath + \" not found by cs2103t.duke.Duke\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Replaces chosen text in the file with a new String."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param oldString text to be overwritten."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param newString new text."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException if failed to read or write to file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void overwriteText(String oldString, String newString) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            List\u003cString\u003e inputList \u003d Files.readAllLines(Paths.get(filePath));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            for (String s : inputList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                if (s.equals(oldString)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    output +\u003d newString + System.lineSeparator();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    output +\u003d s + System.lineSeparator();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fw.write(output);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeFileNotFoundException(\"File \" + filePath + \" not found by cs2103t.duke.Duke\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Deletes the chosen text from the file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param toDelete text to delete."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException if failed to read or write to file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void deleteText(String toDelete) throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            List\u003cString\u003e inputList \u003d Files.readAllLines(Paths.get(filePath));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String output \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            for (String s : inputList) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                if (!s.equals(toDelete)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    output +\u003d s + System.lineSeparator();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fw.write(output);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeFileNotFoundException(\"File \" + filePath + \" not found by cs2103t.duke.Duke\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Generates a cs2103t.duke.TaskList from file input."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return cs2103t.duke.TaskList with tasks remaining in the file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public TaskList genTaskListFromFile() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                String nextLineOfFile \u003d fileScanner.nextLine().trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                Task task \u003d Task.genTaskFromFileString(nextLineOfFile);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            System.out.println(\"File \" + filePath + \" not found by Duke. New task list generated\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Prints the file input."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void printFile() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String heading \u003d \"File successfully loaded. Remaining tasks: \";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            System.out.printf(\"%1$\" + (heading.length() + 5) + \"s\\n\", heading);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                String nextLineOfFile \u003d fileScanner.nextLine().trim();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                System.out.printf(\"%1$\" + (nextLineOfFile.length() + 5) + \"s\\n\", nextLineOfFile);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 138
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.RedundantOperationException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.Task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws DukeIllegalArgumentException if encountered invalid user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Task(String description) throws DukeIllegalArgumentException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new DukeIllegalArgumentException(\"Please specify your task description after your command\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return (isDone ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            throw new RedundantOperationException(\"The task has already been done\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Converts String in file to cs2103t.duke.Task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param s String representation of tasks in file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return cs2103t.duke.Task specified by the String."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static Task genTaskFromFileString(String s) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        char taskType \u003d s.charAt(1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String isDone \u003d s.charAt(4) + \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int index \u003d s.indexOf(\"] \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String taskContent \u003d s.substring(index + 1).trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Task todo \u003d new ToDo(taskContent);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (isDone.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                todo.markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return todo;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String[] deadlineContentArray \u003d taskContent.split(\"by:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Task deadline \u003d new Deadline(deadlineContentArray[0].trim(), deadlineContentArray[1].trim());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (isDone.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                deadline.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String[] eventContentArray \u003d taskContent.split(\"at:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Task event \u003d new Event(eventContentArray[0].trim(), eventContentArray[1].trim());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (isDone.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                event.markAsDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.getDescription();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 88
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a list of the tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final int INDENT_LEVEL \u003d 5;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private List\u003cTask\u003e listBody;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.TaskList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.listBody \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Adds task to the cs2103t.duke.TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param task task to be added to task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.listBody.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Deletes task from the cs2103t.duke.TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param index index from user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.listBody.remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Retrieves task from the cs2103t.duke.TaskList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param index index from user input."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return task to find."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return this.listBody.get(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Returns size of the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return size of the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return this.listBody.size();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public TaskList query(String text) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        for (Task task : this.listBody) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (task.toString().contains(text)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                taskList.addTask(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        for (int i \u003d 0; i \u003c listBody.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Task task \u003d listBody.get(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String temp \u003d index + \".\" + task.toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            output +\u003d String.format(\"%1$\" + (temp.length() + INDENT_LEVEL) + \"s\\n\", temp);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 80
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a text UI to deal with interactions with the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final int TEXT_INDENT_LEVEL \u003d 5;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String INDENT_BY_FOUR \u003d \" \" + \" \" + \" \" + \" \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d INDENT_BY_FOUR"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String FILE_PATH \u003d \"F:/CS2103T/Duke/data/duke.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String GREET_MESSAGE_FIRST_LINE \u003d \"Hello! I\u0027m cs2103t.duke.Duke\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String GREET_MESSAGE_SECOND_LINE \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.print(indentText(GREET_MESSAGE_FIRST_LINE, TEXT_INDENT_LEVEL));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.print(indentText(GREET_MESSAGE_SECOND_LINE, TEXT_INDENT_LEVEL));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static String indentText(String input, int indentLevel) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return String.format(\"%1$\" + (input.length() + indentLevel) + \"s\\n\", input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Starts the text UI."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        TextUi.greet();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        Storage storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        TaskList list \u003d storage.genTaskListFromFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        storage.printFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        Parser parser \u003d new Parser(list);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String fileInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                Command command \u003d parser.parseCommand(fileInput);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                command.execute();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                if (command.isByeCommand()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    sc.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 74
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a cs2103t.duke.ToDo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.ToDo object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param description task description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 21
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a bye command for exiting the program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.print(indentText(BYE_MESSAGE, TEXT_INDENT_LEVEL));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 20
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents command to be executed by cs2103t.duke.Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected static final int TEXT_INDENT_LEVEL \u003d 5;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected static final String INDENT_BY_FOUR \u003d \" \" + \" \" + \" \" + \" \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected static final String HORIZONTAL_LINE \u003d INDENT_BY_FOUR"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected static final String FILE_PATH \u003d \"F:/CS2103T/Duke/data/duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected TaskList list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.command.Command object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param taskList input task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Command(TaskList taskList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.list \u003d taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Executes the command. Returns void."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public abstract void execute() throws IOException;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected static String indentText(String input, int indentLevel) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return String.format(\"%1$\" + (input.length() + indentLevel) + \"s\\n\", input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected static void printTask(TaskList list, Task task, String firstLine) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String lastLine \u003d \"Now you have\" + \" \" + list.size() + \" \" + \"tasks in the list.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.print(indentText(firstLine, TEXT_INDENT_LEVEL));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.print(indentText(task.toString(), TEXT_INDENT_LEVEL + 2));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.print(indentText(lastLine, TEXT_INDENT_LEVEL));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Checks whether the cs2103t.duke.command.Command is a cs2103t.duke.command.ByeCommand."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return true if it is a cs2103t.duke.command.ByeCommand, false otherwise"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public boolean isByeCommand() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 62
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a deadline command to create a deadline task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String TASK_ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.command.DeadlineCommand object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list  input task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param input task description and date specified by user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DeadlineCommand(TaskList list, String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task \u003d Deadline.genDeadline(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void execute() throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.list.addTask(super.task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage.appendText(super.task.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printTaskAdded(super.list, super.task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void printTaskAdded(TaskList list, Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printTask(list, task, TASK_ADDED_MESSAGE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 41
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a delete command to delete task from task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String TASK_DELETED_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.command.DeleteCommand object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list  input task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param index index from user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DeleteCommand(TaskList list, int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task \u003d this.list.getTask(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void execute() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.list.deleteTask(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        storage.deleteText(super.task.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printTaskDeleted(super.list, super.task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void printTaskDeleted(TaskList list, Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printTask(list, task, TASK_DELETED_MESSAGE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 43
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a done command to indicate that a task is done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String TASK_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.command.DoneCommand object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list  input task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param index index from user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DoneCommand(TaskList list, int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task \u003d this.list.getTask(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void execute() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String initialTask \u003d super.task.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        storage.overwriteText(initialTask, super.task.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printTaskDone(super.task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void printTaskDone(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.print(indentText(TASK_DONE_MESSAGE, TEXT_INDENT_LEVEL));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.print(indentText(task.toString(), TEXT_INDENT_LEVEL));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 46
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates an event command to create an event task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String TASK_ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs an cs2103t.duke.command.EventCommand object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list  input task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param input command from user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public EventCommand(TaskList list, String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task \u003d Event.genEvent(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void execute() throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.list.addTask(super.task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage.appendText(super.task.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printTaskAdded(super.list, super.task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void printTaskAdded(TaskList list, Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printTask(list, task, TASK_ADDED_MESSAGE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 41
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a find command to search for a keyword."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String FIND_MESSAGE \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private String text;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.command.FindCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list input task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param text text to find specified by user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public FindCommand(TaskList list, String text) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        TaskList taskList \u003d this.list.query(this.text);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printList(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void printList(TaskList list) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.print(indentText(FIND_MESSAGE, TEXT_INDENT_LEVEL));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(list);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 37
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a list command to list out all the tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.command.ListCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list input task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public ListCommand(TaskList list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printList(super.list);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void printList(TaskList list) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.print(indentText(LIST_MESSAGE, TEXT_INDENT_LEVEL));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(list);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 32
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a cs2103t.duke.ToDo command to create a cs2103t.duke.ToDo task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static final String TASK_ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a cs2103t.duke.command.ToDoCommand object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param list task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param des  task description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public ToDoCommand(TaskList list, String des) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(list);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.task \u003d new ToDo(des);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void execute() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super.list.addTask(super.task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.storage.appendText(super.task.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printTaskAdded(super.list, super.task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private static void printTaskAdded(TaskList list, Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        printTask(list, task, TASK_ADDED_MESSAGE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 42
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/date/Month.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a month, from January to December."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public enum Month {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    JANUARY(1),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    FEBRUARY(2),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    MARCH(3),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    APRIL(4),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    MAY(5),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    JUNE(6),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    JULY(7),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    AUGUST(8),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    SEPTEMBER(9),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    OCTOBER(10),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    NOVEMBER(11),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    DECEMBER(12);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int value;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    Month(int value) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Parses int to corresponding Month object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param i integer representation of month."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return Month object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static Month parseFromInt(int i) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        switch (i) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return JANUARY;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return FEBRUARY;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return MARCH;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return APRIL;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return MAY;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return JUNE;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 7:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return JULY;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 8:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return AUGUST;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 9:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return SEPTEMBER;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 10:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return OCTOBER;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 11:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return NOVEMBER;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        case 12:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return DECEMBER;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    protected static Month parseFromString(String month) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (month.equalsIgnoreCase(\"JANUARY\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return JANUARY;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"FEBRUARY\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return FEBRUARY;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"MARCH\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return MARCH;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"APRIL\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return APRIL;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"MAY\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return MAY;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"JUNE\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return JUNE;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"JULY\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return JULY;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"AUGUST\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return AUGUST;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"SEPTEMBER\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return SEPTEMBER;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"OCTOBER\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return OCTOBER;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"NOVEMBER\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return NOVEMBER;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else if (month.equalsIgnoreCase(\"DECEMBER\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return DECEMBER;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 93
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/date/MyDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Encapsulates a date and time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class MyDate {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private Month month;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int fromHour;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int fromMin;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int toHour;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private int toMin;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private MyDate(int day, int month, int year, int fromHour, int fromMin, int toHour, int toMin) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.month \u003d Month.parseFromInt(month);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.fromHour \u003d fromHour;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.fromMin \u003d fromMin;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.toHour \u003d toHour;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.toMin \u003d toMin;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    private MyDate(int day, Month month, int year, int fromHour, int fromMin, int toHour, int toMin) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.fromHour \u003d fromHour;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.fromMin \u003d fromMin;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.toHour \u003d toHour;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        this.toMin \u003d toMin;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Generates a MyDate object with a date String."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param date String representation of date."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @return MyDate object specified by the String."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public static MyDate genMyDate(String date) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] tempArray \u003d date.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (tempArray.length \u003e 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int day \u003d Integer.parseInt(tempArray[0]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            Month month \u003d Month.parseFromString(tempArray[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int year \u003d Integer.parseInt(tempArray[2]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (tempArray.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new MyDate(day, month, year, -1, -1, -1, -1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int fromHour \u003d Integer.parseInt(tempArray[3].substring(0, 2));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int fromMin \u003d Integer.parseInt(tempArray[3].substring(3));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            if (tempArray.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                return new MyDate(day, month, year, fromHour, fromMin, -1, -1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int toHour \u003d Integer.parseInt(tempArray[5].substring(0, 2));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            int toMin \u003d Integer.parseInt(tempArray[5].substring(3));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new MyDate(day, month, year, fromHour, fromMin, toHour, toMin);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] dateArray \u003d tempArray[0].split(\"/\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int day \u003d Integer.parseInt(dateArray[0]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int month \u003d Integer.parseInt(dateArray[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int year \u003d Integer.parseInt(dateArray[2]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (tempArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new MyDate(day, month, year, -1, -1, -1, -1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String[] timeArray \u003d tempArray[1].split(\"-\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int fromHour \u003d Integer.parseInt(timeArray[0].substring(0, 2));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int fromMin \u003d Integer.parseInt(timeArray[0].substring(2));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        if (timeArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            return new MyDate(day, month, year, fromHour, fromMin, -1, -1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int toHour \u003d Integer.parseInt(timeArray[1].substring(0, 2));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        int toMin \u003d Integer.parseInt(timeArray[1].substring(2));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return new MyDate(day, month, year, fromHour, fromMin, toHour, toMin);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return toHour \u003c 0"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                ? fromHour \u003c 0"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                ? day + \" \" + month.toString() + \" \" + year"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                : day + \" \" + month.toString() + \" \" + year + \" \" + String.format(\"%02d\", fromHour) + \":\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                + String.format(\"%-2s\", fromMin).replace(\u0027 \u0027, \u00270\u0027)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                : day + \" \" + month.toString() + \" \" + year + \" \" + String.format(\"%02d\", fromHour) + \":\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                + String.format(\"%-2s\", fromMin).replace(\u0027 \u0027, \u00270\u0027) + \" to \""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                + String.format(\"%02d\", toHour) + \":\" + String.format(\"%-2s\", toMin).replace(\u0027 \u0027, \u00270\u0027);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 102
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exceptions/DukeArrayIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents ArrayIndexOutOfBoundsException for cs2103t.duke.Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeArrayIndexOutOfBoundsException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Contructs a DukeArrayIndexOutOfBoundsException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param message exception message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DukeArrayIndexOutOfBoundsException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 16
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents DukeException in general"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a DukeException object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param message exception message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String horizontalLine \u003d \" \" + \" \" + \" \" + \" \" + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        return horizontalLine + \"\\n\" + String.format(\"%1$\" + (super.getMessage().length() + 5) + \"s\\n\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                super.getMessage()) + horizontalLine + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 23
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exceptions/DukeFileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents FileNotFoundException for cs2103t.duke.Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeFileNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a DukeFileNotFoundException object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param message exception message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DukeFileNotFoundException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 16
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exceptions/DukeIllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents IllegalArgumentException for cs2103t.duke.Duke. Thrown when encountered invalid user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeIllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a DukeIllegalArgumentException object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param message exception message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public DukeIllegalArgumentException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 16
    }
  },
  {
    "path": "src/main/java/cs2103t/duke/exceptions/RedundantOperationException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " * Represents RedundantOperationException. Thrown when there is redundant operation"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class RedundantOperationException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * Constructs a RedundantOperationException object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     * @param message exception message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public RedundantOperationException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 16
    }
  },
  {
    "path": "src/test/java/cs2103t/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.exceptions.DukeIllegalArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void genDeadline_illegalFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String input \u003d \"return book BY 02/03/2019\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            assertEquals(\"[D]\" + \"[\" + \"\\u2718\" + \"]\" + \" return book by: 2 MARCH 2019\", Deadline.genDeadline(input));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        } catch (DukeIllegalArgumentException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String horizontalLine \u003d \" \" + \" \" + \" \" + \" \" + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String message \u003d \"Illegal input for deadline. \" + \"Please key in \u0027deadline \u003ctask\u003e /by \u003ctime\u003e\u0027\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            String error \u003d horizontalLine + \"\\n\" + String.format(\"%1$\" + (message.length() + 5) + \"s\\n\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "                    message) + horizontalLine + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "            assertEquals(error, e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 25
    }
  },
  {
    "path": "src/test/java/cs2103t/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 12
    }
  },
  {
    "path": "src/test/java/cs2103t/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import cs2103t.duke.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        String input \u003d \"project meeting /at 01/09/2019 1400-1630\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        assertEquals(\"[E]\" + \"[\" + \"\\u2718\" + \"]\" + \" project meeting at: 1 SEPTEMBER 2019 14:00 to 16:30\", Event.genEvent(input).toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 14
    }
  },
  {
    "path": "src/test/java/cs2103t/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "package cs2103t.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    public void markAsDoneTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        Task task \u003d new Task(\"read\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        assertEquals(\"[\" + \"\\u2718\" + \"]\", task.getStatusIcon());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        assertEquals(\"[\" + \"\\u2713\" + \"]\", task.getStatusIcon());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 15
    }
  },
  {
    "path": "tutorials/gradleTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle is a _build automation tool_ used to automate build processes. There are many ways of integrating Gradle into a project. In this guide, we will be using the _Gradle wrapper_."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* [Introduction](#introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Gradle Support to Your Project](#adding-gradle-support-to-your-project)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Plugins](#adding-plugins)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [CheckStyle](#checkstyle)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Shadow](#shadow)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Dependencies](#adding-dependencies)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [JUnit](#junit)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Further Reading](#further-reading)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "As a developer, you write a _build file_ that describes the project. A build file mainly consists of _plugins_, _tasks_ and _properties_. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* **Plugins** extend the functionality of Gradle. For example, the `java` plugin adds support for `Java` projects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* **Tasks** are reusable blocks of logic.  For example, the task `clean` simply deletes the project build directory. Tasks can be composed of other tasks or be dependent on another task. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* **Properties** change the behavior of tasks. For instance, `mainClassName` of the `application` plugin is a compulsory property which tells Gradle which class is the entrypoint to your application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  As Gradle favors [_convention over configuration_](https://en.wikipedia.org/wiki/Convention_over_configuration), there is not much to you need to configure if you follow the recommended directory structure."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Gradle Support to Your Project "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Pull the branch named `gradle`. Merge it to the `master` branch. This will add the Gradle wrapper to your project."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout --track origin/gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout master"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   git merge gradle"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open the `build.gradle` file in an editor. Update the following code block to point to the main class (i.e., the one containing the `main` method) of your application. The code below assumes your main class is `seedu.duke.Duke`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   ```groovy"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "       mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "1. To check if Gradle has been added to the project correctly, open a terminal window, navigate to the root directory of your project and run the command `gradlew run`. This should result in Gradle running the main method of your project."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Simply run the command `gradlew {taskName}` in the terminal and Gradle will run the task! Here are some example commands:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew tasks` (or `gradlew tasks --all`): shows a list of tasks available"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew run`: runs the main class of your project"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Some plugins may add more helpful tasks so be sure to check their documentation!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "#### Using Gradle from within Intellij"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "1. After adding support for Gradle, Intellij might automatically ask you (via a pop-up at the bottom right corner of the Window) whether to import the project as a Gradle project. In that case, go ahead and say yes."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t happen, import the Gradle project by `Help \u003e Find Action \u003e Import Gradle Project`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Import Gradle](assets/ImportGradle.png)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t work either, close Intellij, delete the Intellij project files (i.e., `.idea` folder and `*.iml` files), and set up the project again, but instead of choosing `Create project from existing sources`, choose `Import project from external model` -\u003e `Gradle`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "After this, IntelliJ IDEA will identify your project as a Gradle project and you will gain access to the `Gradle Toolbar`. Through the toolbar, you run Gradle tasks and view your project\u0027s dependencies."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "You can click on the Gradle icon in the Gradle toolbar and create a new run configuration for running Gradle tasks without needing to type a `gradlew` command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "![Gradle icon](assets/GradleIcon.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Plugins"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle plugins are reusable units of build logic. Most common build tasks are provided as core plugins by Gradle. Given below are instructions on how to use some useful plugins:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "### CheckStyle"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "To add support for _Checkstyle_ (a tool to check if your code complies with a set of style rules), which comes as a core plugin, simply add the line `id \u0027checkstyle\u0027` into the `plugins` block."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Your build file should look something like this now:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "// ..."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Checkstyle expects configuration files for checkstyle to be in `./config/checkstyle/` by convention."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "A sample checkstyle rule configuration is provided in the branch."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin adds a few _tasks_ to your project. Run `gradlew checkstyleMain checkstyleTest` to verify that you have set up Checkstyle properly (the command will check your main code and test code against the style rules)."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for CheckStyle plugin](https://docs.gradle.org/current/userguide/checkstyle_plugin.html)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "### Shadow"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Shadow is a plugin that packages an application into an executable jar file. To use it, first add the following line to your Gradle build file:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin can be configured by setting some properties. Let\u0027s try to produce a jar file with the name in format of `{baseName}-{version}.jar`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Add the following block to your build file:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "Now you can run the command `gradlew shadowJar`.It publishes an executable jar to `./build/libs/`. You should be able to able to execute the created jar file by double-clicking it or using the command `java -jar {jarName}`?"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for Shadow plugin](https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "* [More about the Shadow plugin](https://imperceptiblethoughts.com/shadow/introduction/)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Dependencies"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle can automate the management of dependencies to third-party libraries. Given below are some examples."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "JUnit is a testing framework for Java. It allows developers to write tests and run them. To manage JUnit dependency via Gradle, add the following to your build file:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Then, configure Gradle to use JUnit by adding the following block to your build file:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "By convention, java tests belong in `src/test/java` folder. Create a new `test/java` folder in under `src`."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "src"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "├─main"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "│  └─java"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "│     └─seedu/duke/Duke.java"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "└─test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    └─java"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "        └─seedu/duke/cs2103t.duke.DukeTest.java"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "If you have imported your Gradle project into IntelliJ IDEA, you will notice that IDEA is able to mark the test directory as the _Test root_ (colored in green by default) automatically."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shuiyao-sg"
        },
        "content": "You can now write a test (e.g., `test/java/seedu/duke/cs2103t.duke.DukeTest.java`) and run it with `gradlew test`."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "## Further Reading"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Now that you have a general idea of how to accomplish basic tasks with Gradle, here\u0027s a list of material you can read to further your understanding."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* [Official Gradle Documentation](https://docs.gradle.org/current/userguide/userguide.html)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "----------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "shuiyao-sg": 2,
      "-": 168
    }
  }
]
