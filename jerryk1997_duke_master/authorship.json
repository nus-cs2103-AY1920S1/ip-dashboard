[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    mainClassName \u003d \"Launcher\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 28,
      "-": 15
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Deadline is a subclass of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Deadline represents a task with a description and a"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * corresponding deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private String deadlineString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private LocalDateTime deadlineDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Constructs a Deadline object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param deadline deadline of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Deadline(String description, String deadline, Priority priority) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        super(description, priority);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.deadlineString \u003d makeDeadline(deadline);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.deadlineDate \u003d storeAsDateTime(deadlineString);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Constructs a Deadline object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * This constructor is for when the Deadline is being loaded"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * from memory and hence can be already completed and the"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * status of completion needs to be a parameter as well."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param deadline Date of the deadline"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param status Status of completion"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Deadline(String description, String deadline, boolean status, Priority priority) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        super(description, priority);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.deadlineString \u003d makeDeadline(deadline);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.deadlineDate \u003d storeAsDateTime(deadlineString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.isDone \u003d status;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Formats the String deadline."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param deadline Unformatted String deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @return String Formatted String deadline"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String makeDeadline(String deadline) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String[] deadlineArr \u003d deadline.split(\" \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        temp.append(deadlineArr[0]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (!deadlineArr[0].contains(\":\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            temp.append(\":\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        for (int i \u003d 1; i \u003c deadlineArr.length; i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            temp.append(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            temp.append(deadlineArr[i]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return temp.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Converting to a format to be stored on file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Task is converted to a string that is stored on the"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * hard disk, and can be read easily when loaded so that"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * the information can be loaded onto the Task List when the"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * program first starts."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @return String Formatted string to be stored."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder fileFormat \u003d new StringBuilder();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(taskPriority.toString() + \"~\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(\"D~\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            fileFormat.append(\"1~\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            fileFormat.append(\"0~\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(this.description);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(\"~\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(this.deadlineString);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return fileFormat.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String task \u003d \"[D][\" + this.getStatusIcon() + \"] \" + description + \" (\" + deadlineString + \")\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 95
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        dialog.setMinSize(Region.USE_COMPUTED_SIZE, Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 61
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Duke is the main body of the program. It takes in the"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * user\u0027s input and processes it accordingly."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            tasks.updateQueue();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        Parser parser \u003d new Parser(ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            String output \u003d parser.parseCommand(input, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            storage.update(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return ui.showException(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String output \u003d run(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        assert output !\u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 56,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Event is a subclass of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Event describes something that is happening"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * at a certain time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private String eventDateString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private LocalDateTime eventDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Constructs a Event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param eventDate Date of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Event(String description, String eventDate, Priority priority) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        super(description, priority);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.eventDateString \u003d makeEventDate(eventDate);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.eventDate \u003d storeAsDateTime(eventDateString);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Constructs a Event object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * This constructor is for when the Event is being loaded"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * from memory and hence can be already completed and the"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * status of completion needs to be a parameter as well."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param deadline Date of the deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param status Status of completion"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Event(String description, String eventDate, boolean status, Priority priority) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        super(description, priority);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.eventDateString \u003d makeEventDate(eventDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.eventDate \u003d storeAsDateTime(eventDateString);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.isDone \u003d status;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Formats the String date."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param eventDate Unformatted String date"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @return String Formatted String date"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String makeEventDate(String eventDate) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String[] eventDateArr \u003d eventDate.split(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        temp.append(eventDateArr[0]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (!eventDateArr[0].contains(\":\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            temp.append(\":\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        for (int i \u003d 1; i \u003c eventDateArr.length; i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            temp.append(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            temp.append(eventDateArr[i]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return temp.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Converting to a format to be stored on file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Task is converted to a string that is stored on the"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * hard disk, and can be read easily when loaded so that"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * the information can be loaded onto the Task List when the"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * program first starts."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @return String Formatted string to be stored."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder fileFormat \u003d new StringBuilder();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(taskPriority.toString() + \"~\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(\"E~\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            fileFormat.append(\"1~\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            fileFormat.append(\"0~\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(this.description);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(\"~\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(this.eventDateString);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return fileFormat.toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String task \u003d \"[E][\" + this.getStatusIcon() + \"] \" + this.description + \" (\" + eventDateString + \")\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 95
    }
  },
  {
    "path": "src/main/java/IncorrectInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class IncorrectInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public IncorrectInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 5
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private Duke duke \u003d new Duke(\"tasks.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(Ui.showWelcome(), dukeImage));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 50
    }
  },
  {
    "path": "src/main/java/NoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class NoDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public NoDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 5
    }
  },
  {
    "path": "src/main/java/NoExistingListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class NoExistingListException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public NoExistingListException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Parser is a class that aids in parsing through the user input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * and understanding the commands and executing them accordingly."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Commands are passed into a method and appropriate actions are"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * taken to create tasks, remove tasks, or add tasks etc."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private String taskDesc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    Priority taskPriority \u003d Priority.LOW;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Constructs a Parser object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Parser object is constructed and passed a Ui object to"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * help with printing the outputs back to the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param ui ui object for user interaction"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Parser(Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Parses through the user\u0027s input and makes changes to the"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * task list accordingly."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * First token of the string is checked to see if it is a valid"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * instruction. If invalid an IncorrectInputException is thrown."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * If a task is given without description a NoDescriptionException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * is thrown. Otherwise the task is processed accordingly."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param input String input from the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param taskList The current list of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String parseCommand(String input, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        assert input !\u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        preProcessInput(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (taskType.equals(\"bye\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return ui.showGoodbye();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (taskType.equals(\"list\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return ui.showTaskList(taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (taskType.equals(\"priority\")){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            String output \u003d ui.showPriorityTaskList("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                    taskList.getPriorityTaskList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            taskList.updateQueue();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (taskDesc.isEmpty()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            throw new NoDescriptionException("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                    \":( OOPS!!! The description of \" + taskType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (taskType.equals(\"done\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return doneCommand(taskDesc, taskList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (taskType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return deleteCommand(taskDesc, taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (taskType.equals(\"find\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return ui.showFoundTasks(taskList.searchFor(taskDesc));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return todoCommand(taskDesc, taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return deadlineCommand(taskDesc, taskList);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else  if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return eventCommand(taskDesc, taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return \"assert testing\"; //Returning a string since method must return string"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private void preProcessInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (inputArr[0].equals(\"high\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            taskPriority \u003d Priority.HIGH;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            inputArr \u003d Arrays.copyOfRange(inputArr,1, inputArr.length);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (inputArr[0].equals(\"medium\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            taskPriority \u003d Priority.MEDIUM;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            inputArr \u003d Arrays.copyOfRange(inputArr,1, inputArr.length);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (inputArr[0].equals(\"low\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            inputArr \u003d Arrays.copyOfRange(inputArr,1, inputArr.length);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        //Extracting task type and description from input"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        taskType \u003d inputArr[0];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        taskDesc \u003d getDesc(inputArr);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (!correctInput(taskType)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            throw new IncorrectInputException("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                    \":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private String doneCommand(String taskDesc, TaskList taskList) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        int taskNum \u003d Integer.parseInt(taskDesc);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        Task task \u003d taskList.getTask(taskNum);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return ui.showTaskAlreadyDone(task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            task.doTask();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return ui.showTaskDone(task);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private String deleteCommand(String taskDesc, TaskList taskList) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        int taskNum \u003d Integer.parseInt(taskDesc);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        Task task \u003d taskList.getTask(taskNum);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        taskList.deleteTask(taskNum);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return ui.showTaskDeleted(task, taskList);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private String todoCommand(String taskDesc, TaskList taskList) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        Task newTodo \u003d new Todo(taskDesc, taskPriority);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        taskList.addTask(newTodo);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return ui.showTaskAdded(newTodo, taskList);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private String deadlineCommand(String taskDesc, TaskList taskList) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String[] taskDescArr \u003d taskDesc.split(\" /\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        Task newDeadline \u003d new Deadline(taskDescArr[0], taskDescArr[1], taskPriority);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        taskList.addTask(newDeadline);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return ui.showTaskAdded(newDeadline, taskList);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private String eventCommand(String taskDesc, TaskList taskList) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String[] taskDescArr \u003d taskDesc.split(\" /\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        Task newEvent \u003d new Event(taskDescArr[0], taskDescArr[1], taskPriority);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        taskList.addTask(newEvent);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return ui.showTaskAdded(newEvent, taskList);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Extracts the description and date of the task"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * leaving the command out."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param inputArr String[] of the whole input by the user"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @return String String representing the description and date."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public static String getDesc(String[] inputArr) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        for (int i \u003d 1; i \u003c inputArr.length; i++) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            if (i !\u003d inputArr.length - 1) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                builder.append(inputArr[i]);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                builder.append(\" \");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                builder.append(inputArr[i]);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public static boolean correctInput(String input) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return input.equals(\"todo\") ||"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                input.equals(\"event\") ||"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                input.equals(\"deadline\") ||"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                input.equals(\"list\") ||"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                input.equals(\"done\") ||"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                input.equals(\"bye\") ||"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                input.equals(\"delete\") ||"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                input.equals(\"find\") ||"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                input.equals(\"priority\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 194
    }
  },
  {
    "path": "src/main/java/Priority.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "enum Priority {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    HIGH, MEDIUM, LOW;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 3
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.util.ListIterator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Storage is a class that handles operations to store user input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * of the tasks and write it onto the computer\u0027s memory so that it is"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * preserved after the application terminates."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    File taskListFile;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Constructs a Storage object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Takes in a file path so that it can be used later"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * to direct where to store the information."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param filePath File path to the storage location"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        taskListFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Generates a LinkedList of tasks based on what the user has"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * saved from the last use of this program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * The tasks are stored in a pre determined format. All this"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * method does is read the tasks line by line and create new"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Task objects based on the strings and adds them to a"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * LinkedList to be returned."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @return LinkedList\u003cTask\u003e List representing the tasks saved"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @throws DukeException Exception thrown if no existing list is found"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public LinkedList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            System.out.println(\"loaded\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            if (!taskListFile.exists()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                throw new NoExistingListException(\"No saved List found.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            Scanner sc \u003d new Scanner(taskListFile);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            LinkedList\u003cTask\u003e taskList \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                String nextTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                String[] nextTaskArr \u003d nextTask.split(\"~\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                boolean status \u003d nextTaskArr[2].equals(\"1\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                Priority taskPriority \u003d getPriority(nextTaskArr[0]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                switch (nextTaskArr[1]) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                        taskList.add("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                                new Todo(nextTaskArr[3], status, taskPriority));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                        taskList.add("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                                new Deadline(nextTaskArr[3], nextTaskArr[4], status, taskPriority));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                        taskList.add("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                                new Event(nextTaskArr[3], nextTaskArr[4], status, taskPriority));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                     default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                        assert false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return new LinkedList\u003cTask\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private Priority getPriority(String priorityString) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (priorityString.equals(\"HIGH\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return Priority.HIGH;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (priorityString.equals(\"MEDIUM\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return Priority.MEDIUM;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (priorityString.equals(\"LOW\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return Priority.LOW;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return Priority.MEDIUM;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Updates the file that saves the tasks based on the"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * LinkedList of tasks stored in the TaskList file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * The method takes in a TaskList object, extracts the Linked"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * List stored and goes through every task stored, converting"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * them into strings and appending the string to a stringbuilder"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * before converting the stringbuilder into a string to be written"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * onto the file storing the information. Every change is not an"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * addition but rather the whole file is overwritten again."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param taskList TaskList object representing the current list of tasks"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public void update(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        FileWriter fw \u003d new FileWriter(taskListFile);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        LinkedList\u003cTask\u003e list \u003d taskList.getList();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        ListIterator\u003cTask\u003e iter \u003d list.listIterator();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            Task current \u003d iter.next();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            sb.append(current.toFileFormat());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String taskListString \u003d sb.toString();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fw.write(taskListString);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 128
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Task is an object simulating a task, eg events."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * This class contains attributes that every task should have"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * such as whether the task is done or what the description of"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * the task is. This class also has methods that can change"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * the attributes of the task, which are common among all"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * tasks such as doing the task and storing the deadlines"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * of the task as a Java date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    protected Priority taskPriority;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Constructs a Task object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * A task generally constructed with a description what to do."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param description Description of what the task is about."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Task(String description, Priority taskPriority) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.taskPriority \u003d taskPriority;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Generates the status icon of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Method returns either a tick or a cross icon based"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * on whether the task is done. Uses unicode."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @return String representing the unicode of the icon."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return \"\\u2718\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Changes the value of boolean isDone to True."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Converts a String to a LocalDateTime object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * This method converts a string of the format \"dd/mm/yyyy HHMM\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * into a LocalDateTime object. e.g. \"2/12/2019 1800\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param date String of the format given above."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @return LocalDateTime LocalDateTime object representing the date."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    protected LocalDateTime storeAsDateTime(String date) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String[] temp \u003d date.split(\" \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        int timeInt \u003d Integer.parseInt(temp[2]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String hour \u003d (timeInt / 100) + \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String minutes \u003d (timeInt % 100) + \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String dateString \u003d temp[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String[] dateStringArr \u003d dateString.split(\"/\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        //If day of the week is single digit pad with 0"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (dateStringArr[0].length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            dateStringArr[0] \u003d \"0\" + dateStringArr[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        //If month is single digit pad with 0"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (dateStringArr[1].length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            dateStringArr[1] \u003d \"0\" + dateStringArr[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        //Formatting for LocalDateTime to parse"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        sb.append(dateStringArr[2]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        sb.append(\"-\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        sb.append(dateStringArr[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        sb.append(\"-\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        sb.append(dateStringArr[0]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        sb.append(\"T\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (hour.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            hour \u003d \"0\" + hour;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (minutes.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            minutes \u003d \"0\" + minutes;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        sb.append(hour + \":\" + minutes + \":00\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return LocalDateTime.parse(sb.toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Priority getPriority() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return taskPriority;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Filler method to imitate an interface."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @return String empty string"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    protected String toFileFormat() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String task \u003d \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public int compareTo(Task task) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (this.taskPriority \u003d\u003d task.taskPriority) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (this.taskPriority \u003d\u003d Priority.HIGH) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (this.taskPriority \u003d\u003d Priority.LOW) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (task.taskPriority \u003d\u003d Priority.HIGH) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (task.taskPriority \u003d\u003d Priority.LOW) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 143
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.util.ListIterator;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.util.PriorityQueue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * TaskList represents a list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * The class supports the storing of the tasks, and"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * operations that can change or interact with this list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private LinkedList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    private PriorityQueue\u003cTask\u003e priorityTaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Constructs a TaskList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Initializes the LinkedList of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        taskList \u003d new LinkedList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        priorityTaskList \u003d new PriorityQueue\u003cTask\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Constructs a TaskList object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Passes an existing list of tasks to be"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * stored in this TaskList object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        assert !(taskNum \u003c 0) : \"Negative task number\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        taskList.remove(taskNum -1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        updateQueue();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        assert task !\u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        updateQueue();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public LinkedList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Task getTask(int taskNum) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        assert !(taskNum \u003c 0) : \"Negative task number\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return taskList.get(taskNum -1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public PriorityQueue\u003cTask\u003e getPriorityTaskList() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return priorityTaskList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return taskList.isEmpty();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Searches for the target String in every task\u0027s description."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Loops through the list of tasks tries to match the target String"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * a substring in the task description."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param target Target string to search for"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @return LinkedList\u003cTask\u003e of matching tasks"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public LinkedList\u003cTask\u003e searchFor(String target) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        ListIterator\u003cTask\u003e iter \u003d taskList.listIterator();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        LinkedList\u003cTask\u003e tasksFound \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        Task current;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            current \u003d iter.next();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            String description \u003d current.getDesc();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            if (description.contains(target)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                tasksFound.add(current);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return tasksFound;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public void updateQueue() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        int numOfTask \u003d taskList.size();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        PriorityQueue\u003cTask\u003e updatedQueue \u003d new PriorityQueue\u003c\u003e();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        for (int i \u003d 0; i \u003c numOfTask; i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            Task current \u003d taskList.get(i);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            updatedQueue.add(current);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        priorityTaskList \u003d updatedQueue;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 102
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Todo is a subclass of a Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Todo represents a task with no deadline, and only"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * contains a decription of what is to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Constructs a Todo object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Todo(String description, Priority priority) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        super(description, priority);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Constructs a Todo object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * This constructor is for when it is being loaded from memory"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * and may have already been completed, so its isDone status must"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * be updated accordingly."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param status Status of completion"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public Todo(String description, boolean status, Priority priority) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        super(description, priority);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        this.isDone \u003d status;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Converting to a format to be stored on file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Task is converted to a string that is stored on the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * hard disk, and can be read easily when loaded so that"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * the information can be loaded onto the Task List when the"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * program first starts."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @return String Formatted string to be stored."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String toFileFormat() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder fileFormat \u003d new StringBuilder();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(taskPriority.toString() + \"~\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(\"T~\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            fileFormat.append(\"1~\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            fileFormat.append(\"0~\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        fileFormat.append(this.description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return fileFormat.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String task \u003d \"[T][\" + this.getStatusIcon() +  \"] \" + description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 59
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.util.ListIterator;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import java.util.PriorityQueue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * Ui is a class that designed to output the how the program"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " * responds to the user inputs."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String welcomeMessage \u003d line()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + indent() + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + indent() + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + line();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return welcomeMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String showGoodbye() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String exitMessage \u003d line()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + indent() + \"Bye. Hope to see you again soon\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + line();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return exitMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public static String indent() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return \"    \" ;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public static String line() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder line \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        line.append(indent());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        for (int i \u003d 0; i \u003c 47; i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            line.append(\"_\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        line.append(\"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String stringLine \u003d line.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return stringLine;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String showTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            String output \u003d line()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                    + indent() + \"There are no tasks in the list currently.\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                    + line();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            LinkedList\u003cTask\u003e taskLinkedList \u003d taskList.getList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            ListIterator\u003cTask\u003e iter \u003d taskLinkedList.listIterator();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            output.append(line());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            output.append(indent() + \"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            while (iter.hasNext()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                String currentTask \u003d iter.next().toString();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                output.append(indent() + count + \".\" + currentTask + \"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            output.append(line());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            return output.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String showTaskDone(Task task) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String output \u003d line()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + indent() + \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + indent() + \"  \" + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + line();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String showTaskAlreadyDone(Task task) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String output \u003d line()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + indent() + \"This task has already been done.\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + indent() + \"  \" + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + line();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String showTaskAdded(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(line());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(indent() + \"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(indent() + \"  \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(indent());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (taskList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            output.append(\"Now you have 1 task in the list.\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            output.append(\"Now you have \" + taskList.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(line());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String showTaskDeleted(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(line());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(indent() + \"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(indent() + \"  \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(indent());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (taskList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            output.append(\"Now you have 1 task in your list.\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            output.append(\"Now you have no tasks in your list.\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            output.append(\"Now you have \" + (taskList.size()) + \" tasks in your list.\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(line());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * Prints the list of tasks which has descriptions"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * matching that of a target String."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     * @param taskList List of matching tasks"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String showFoundTasks(LinkedList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        ListIterator\u003cTask\u003e iter \u003d taskList.listIterator();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        Task current;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(line());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            output.append(indent() + \"There are no matching tasks in your list.\\n\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            output.append(indent() + \"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        while(iter.hasNext()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            current \u003d iter.next();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            output.append(indent() + count + \".\" + current.toString() + \"\\n\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(line());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String showPriorityTaskList(PriorityQueue\u003cTask\u003e priorityTaskList) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(line());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(indent() + \"Here is the list of your tasks prioritised.\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        while (!priorityTaskList.isEmpty()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            Task currentTask \u003d priorityTaskList.poll();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            String taskPriority \u003d currentTask.getPriority().toString();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            output.append(indent() + taskPriority + \" \" + currentTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        output.append(line());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String showException(DukeException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String output \u003d line()"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + indent() + e.getMessage() + \"\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + line();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String output \u003d line()"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + indent() + \"You do not have a saved task list.\\n\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                + line();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 187
    }
  },
  {
    "path": "src/main/java/text-ui-testing/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "if ! javac -cp /Users/jerry/duke/src -Xlint:none -d ../bin /Users/jerry/duke/src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "then"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "else"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 35
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public void makeDeadlineTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        assertEquals(\"by: 2/12/2019 1800\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "                new Deadline(\"submissions\", \"by 2/12/2019 1800\").makeDeadline(\"by 2/12/2019 1800\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 11
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public void correctInputTest(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        Assertions.assertEquals(true, Parser.correctInput(\"bye\"));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    public void getDescTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String event \u003d (\"event project meeting /at 2/12/2019 1800\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        String[] eventArr \u003d event.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "        Assertions.assertEquals(\"project meeting /at 2/12/2019 1800\", Parser.getDesc(eventArr));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 17
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "HIGH~T~1~lunch date"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "LOW~E~1~project~at: 23/12/2019 1515"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "MEDIUM~E~1~project~at: 23/9/2019 1200"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "HIGH~E~0~project~at: 23/9/2019 1200"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerryk1997"
        },
        "content": "LOW~T~1~die"
      }
    ],
    "authorContributionMap": {
      "jerryk1997": 5
    }
  }
]
