[
  {
    "path": "src/main/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "D | 1 | return book | Mon Dec 02 06:00:00 SGT 2019"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "E | 1 | b | Wed Aug 28 17:25:22 SGT 2019"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "D | 1 | return book | Mon Dec 02 06:00:00 SGT 2019"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "E | 1 | b | Tue Dec 03 07:00:00 SGT 2019"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    protected Date deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Deadline(String description, Date deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + getDescription() + \" (by: \" + this.deadline + \")\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private boolean exited \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private List\u003cTask\u003e toDoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    //set a variable to store the fixed file path of duke.txt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    private static String filePath \u003d \"/Users/joannayap/Downloads/duke/src/main/data/duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Date parseDate(String date) throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Date twentyFourHourFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        String twelveHourFormat \u003d new SimpleDateFormat(\"dd/MM/yyy hh:mm\").format(twentyFourHourFormat);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return new SimpleDateFormat(\"dd/MM/yyy hh:mm\").parse(twelveHourFormat);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //Create a file writer object to represent the hard disk"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void appendToFile(String type, String desc, Date date) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            if (date \u003d\u003d null)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                writeToFile(type + \" | 1 | \" + desc + \"\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            else"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                writeToFile(type + \" | 1 | \" + desc + \" | \" + date + \"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            System.out.println(\"Something went wrong \" + e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    //create a method to update a specific line in file ( when the task is marked as done)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public static void updateText(int lineNumber) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Path path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //read all the line in the files"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        List\u003cString\u003e lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        String oldText \u003d lines.get(lineNumber);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        lines.set(lineNumber, oldText.substring(0, 3) + \" 0 \" + oldText.substring(6, oldText.length()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Files.write(path, lines, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public static void deleteText(int lineNumber) throws IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Path path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //read all the line in the files"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        List\u003cString\u003e lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        lines.remove(lineNumber);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Files.write(path, lines, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void markTaskDone(String input) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //parse out the task number"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        int taskNum \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //Ge the specific task object from toDoList"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Task updatedTask \u003d toDoList.get(taskNum);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //Mark the task as done in duke.txt"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            updateText(taskNum);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            System.out.println(\"Something went wrong \" + e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        updatedTask.markAsDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        System.out.println(updatedTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void addTodoTask(String input) throws EmptyDescException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        if (input.length() \u003c 5) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            throw new EmptyDescException(\"todo\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            String desc \u003d input.substring(5);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            appendToFile(\"T\", desc, null);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Todo newTodo \u003d new Todo(desc);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            toDoList.add(newTodo);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            int numTask \u003d toDoList.size();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \"  \""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                    + newTodo + \"Now you have \" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                    numTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void addDeadlineTask(String input) throws EmptyDescException, Exception {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        if (input.length() \u003c 9) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            throw new EmptyDescException(\"deadline\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            int deadlineIndex \u003d input.indexOf(\u0027/\u0027) + 4;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            String deadline \u003d input.substring(deadlineIndex);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            String desc \u003d input.substring(9, deadlineIndex - 5);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Date deadlineDate \u003d null;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            deadlineDate \u003d parseDate(deadline);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            appendToFile(\"D\", desc, deadlineDate);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(desc, deadlineDate);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            toDoList.add(newDeadline);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            int numTask \u003d toDoList.size();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \"  \""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                    + newDeadline + \"Now you have \" +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                    numTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void addEventTask(String input) throws EmptyDescException, Exception {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            throw new EmptyDescException(\"event\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            int timeIndex \u003d input.indexOf(\u0027/\u0027) + 4;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            String time \u003d input.substring(timeIndex);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            String desc \u003d input.substring(6, timeIndex - 5);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Date timeDate \u003d null;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            timeDate \u003d parseDate(time);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            appendToFile(\"E\", desc, timeDate);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            Event newEvent \u003d new Event(desc, timeDate);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            toDoList.add(newEvent);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            int numTask \u003d toDoList.size();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + \"  \""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                    + newEvent + \"Now you have \" +"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                    numTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void deleteTask(String input) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        int taskNum \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        //delete text from duke.txt"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            deleteText(taskNum);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            System.out.println(\"Something went wrong \" + e.getMessage());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Task removedTask \u003d toDoList.remove(taskNum);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + removedTask +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                \"Now you have \" + toDoList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void respond() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        while (!exited \u0026\u0026 scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                giveRespond(input);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            } catch (IllegalArgumentException e1) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                System.out.println(e1);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            } catch (EmptyDescException e2) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                System.out.println(e2);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void determineInputType(String input) throws IllegalArgumentException, EmptyDescException {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            markTaskDone(input);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            addTodoTask(input);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                addDeadlineTask(input);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                addEventTask(input);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            deleteTask(input);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void giveRespond(String input) throws IllegalArgumentException, EmptyDescException {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                exited \u003d true;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                int index \u003d 1;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                for (Task s : toDoList) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                    System.out.print(index + \". \" + s);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "                determineInputType(input);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        Duke D1 \u003d new Duke();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        D1.respond();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "Joanna-YJA": 264
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "         super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 6
    }
  },
  {
    "path": "src/main/java/EmptyDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class EmptyDescException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public EmptyDescException(String type) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return \" OOPS!!! The description of a \" + type + \" cannot be empty.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    protected Date time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Event(String description, Date time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + getDescription() + \" (at: \" + this.time + \")\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 14
    }
  },
  {
    "path": "src/main/java/IllegalArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class IllegalArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public IllegalArgumentException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return  \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 10
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Joanna-YJA"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Joanna-YJA": 10
    }
  }
]
