[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "victorvic54": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    private DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * A subclass of Task that categorized itself as an important thing to-do"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * before a particular time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param description description of the Deadline (Task)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param by the date of the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    // get the date and time with specific format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        return by.format(dateTimeFormatter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + by.format(dateTimeFormatter) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": " * Main class of the application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * Setting up several classes ready to be called."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param filePath the location of the file where the task is stored."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * Executes and runs the main program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        String inputText \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        while (!inputText.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                Parser.parse(tasks, ui, inputText, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                inputText \u003d sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            } catch (Exception err) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                System.out.println(\"[Exception]\" + err);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        ui.exitMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    // Program starts here"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        new Duke(\"C:/Users/User/Desktop/duke.txt\").run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 48,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * To handle several logic error from the program that is thrown to this exception."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param message the details that the developer used to notify the users of an error."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    private DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * A subclass of Task that categorized itself as an occasion that will"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * be held at a particular time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param description description of the Event (Task)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param at the date of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    // get the date and time with specific format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        return at.format(dateTimeFormatter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + at.format(dateTimeFormatter) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 29
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * Convert a String into a LocalDateTime that is understood by the computer."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param rawTimestamp time and date in string format."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @return LocalDateTime with desired format."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @throws DukeException if there is logic error or bad input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public static LocalDateTime convertDateAndTime(String rawTimestamp) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        String[] dateTime \u003d rawTimestamp.split(\" \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        String[] datePortion \u003d dateTime[0].split(\"/\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        String timePortion \u003d dateTime[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        if (dateTime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            int date \u003d Integer.parseInt(datePortion[0]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            int month \u003d Integer.parseInt(datePortion[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            int year \u003d Integer.parseInt(datePortion[2]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            int hour \u003d Integer.parseInt(timePortion.substring(0, 2));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            int minute \u003d Integer.parseInt(timePortion) % 100;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            return LocalDateTime.of(year, month, date, hour, minute);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            throw new DukeException(\"Date time format invalid\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * To deals with making sense of the user command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param tasks the TaskList from the txt file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param ui the message for interaction."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param inputText the text that user input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param storage the location for retrieval and write the updated file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public static void parse(TaskList tasks, Ui ui, String inputText, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        String[] keyList \u003d inputText.split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        String actionKey \u003d keyList[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            if (inputText.equals(\"list\")) { // to print all the list of plans"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                ui.printList(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            } else if (actionKey.equals(\"done\")) { // mark as done if the plan is finished"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                int index \u003d Integer.parseInt(inputText.split(\" \")[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                Task selectedTask \u003d tasks.getListOfTasks().get(index - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                selectedTask.markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                ui.printTaskDone(selectedTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                storage.writeFile(tasks.getListOfTasks());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            } else if (actionKey.equals(\"delete\")) { // delete a specific plan"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                int index \u003d Integer.parseInt(keyList[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                ui.printTaskDelete(tasks.getListOfTasks(), index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                tasks.deleteTask(index - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                storage.writeFile(tasks.getListOfTasks());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            } else if (actionKey.equals(\"find\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                String textToSearch \u003d keyList[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                ui.searchTaskKeyword(tasks, textToSearch);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            } else { // to handle addition of a specific type of plan"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                if (actionKey.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    if (keyList.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    String[] contentList \u003d keyList[1].split(\" /by \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    if (contentList.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Time need to be specified\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    LocalDateTime convertedTimeStamp \u003d convertDateAndTime(contentList[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(contentList[0], convertedTimeStamp);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    tasks.addTask(newDeadline);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    ui.printAddTask(tasks, newDeadline);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    storage.writeFile(tasks.getListOfTasks());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                } else if (actionKey.equals(\"event\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    if (keyList.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    String[] contentList \u003d keyList[1].split(\" /at \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    if (contentList.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Time need to be specified\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    LocalDateTime convertedTimeStamp \u003d convertDateAndTime(contentList[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    Event newEvent \u003d new Event(contentList[0], convertedTimeStamp);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    tasks.addTask(newEvent);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    ui.printAddTask(tasks, newEvent);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    storage.writeFile(tasks.getListOfTasks());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                } else if (actionKey.equals(\"todo\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    if (keyList.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    Todo newTodo \u003d new Todo(inputText.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    tasks.addTask(newTodo);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    ui.printAddTask(tasks, newTodo);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    storage.writeFile(tasks.getListOfTasks());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        } catch (Exception err) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            System.out.println(\"[Exception] \" + err);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 110
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    private static String filePath \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * To deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param filePath the location where the previous list of tasks is being saved."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * Load the list of task from collection of words/Strings."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @return LinkedList of Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @throws FileNotFoundException if no file detected."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @throws DukeException if there is logic error or bad input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @throws IOException file corrupted."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public LinkedList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        LinkedList\u003cTask\u003e loadedTasks \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                String taskDetails \u003d sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                String[] taskArray \u003d taskDetails.split(\" \\\\| \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                String actionTask \u003d taskArray[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                String taskDescription \u003d taskArray[2];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                boolean isDone \u003d taskArray[1].equals(\"1\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                if (actionTask.equals(\"T\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    Todo newTodo \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                        newTodo.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    loadedTasks.add(newTodo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                } else if (actionTask.equals(\"D\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(taskDescription, Parser.convertDateAndTime(taskArray[3]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                        newDeadline.markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    loadedTasks.add(newDeadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                } else if (actionTask.equals(\"E\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    Event newEvent \u003d new Event(taskDescription, Parser.convertDateAndTime(taskArray[3]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                        newEvent.markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    loadedTasks.add(newEvent);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    throw new DukeException(\"Not an action!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        } catch (FileNotFoundException err) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            System.out.println(\"File not found!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            System.out.println(\"[Duke Exception]\" + err);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            System.out.println(err);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        return loadedTasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * Write and save the file every time there is an update/actions."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param updatedTask the file that is updated as a result of an action."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @throws FileNotFoundException if no file detected."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @throws IOException file corrupted."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public static void writeFile(LinkedList\u003cTask\u003e updatedTask) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        boolean isFileExists \u003d file.exists();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            if (!isFileExists) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            for (Task subTask: updatedTask) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                if (subTask instanceof Todo) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    String newTodo \u003d \"T | \""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + (subTask.isDone ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + \" | \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + (subTask.getDescription());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    fw.write(newTodo + System.lineSeparator());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                } else if (subTask instanceof Deadline) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    String newDeadline \u003d \"D | \""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + (subTask.isDone ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + \" | \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + (subTask.getDescription())"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + \" | \""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + (((Deadline) subTask).getBy());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    fw.write(newDeadline + System.lineSeparator());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                } else if (subTask instanceof Event) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    String newEvent \u003d \"E | \""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + (subTask.isDone ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + \" | \""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + (subTask.getDescription())"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + \" | \""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                            + (((Event) subTask).getAt());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    fw.write(newEvent + System.lineSeparator());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                    throw new DukeException(\"Task is unknown\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            System.out.println(\"Error when trying to write a file\" + e.getMessage());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 134
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * A class that handle the creation, deletion, and markAsDone of a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * This class has 3 subclass: (Deadline, Event, and Todo class)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param description the description of a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        return \"added: \" + description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 32
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    private LinkedList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * Default constructor. Create an empty task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        this.tasks \u003d new LinkedList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * To manage a list of task with several methods."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param tasks the list of current tasks that are loaded from a txt file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public LinkedList\u003cTask\u003e getListOfTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 33
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * A subclass of Task that categorized itself as a regular thing that need to be done."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param description description of the Todo (Task)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 15
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": " * To deals with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void exitMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(\"File loaded unsuccessful\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * Printing the list of task from a taskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param taskList the list of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        for (Task subTask : taskList.getListOfTasks()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            System.out.println(counter + \". \" + subTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * To find the task that matches the keyword with the description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param taskList a list of tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param keyword the text/keyword that will be searched from the list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void searchTaskKeyword(TaskList taskList, String keyword) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        for (Task subTask : taskList.getListOfTasks()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            if (subTask.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                System.out.println(counter + \". \" + subTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * Prints out the task that is marked as done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param selectedTask a selected task from a list of tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void printTaskDone(Task selectedTask) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(\"[\" + selectedTask.getStatusIcon() + \"] \" + selectedTask.getDescription());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * Adds a newTask into the current taskList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param taskList a list of tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param newTask a new task to be added to the list of tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void printAddTask(TaskList taskList, Task newTask) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(newTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getListOfTasks().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * To delete a task at a certain location."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param deletedTask a LinkedList that stores the list of tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     * @param index the location of the task to be deleted."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void printTaskDelete(LinkedList\u003cTask\u003e deletedTask, int index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(deletedTask.get(index - 1));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        System.out.println(\"Now you have \" + (deletedTask.size() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 87
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void testGetDateTime() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        String description \u003d \"exampleDescription\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.of(2019, 8, 12, 12, 50);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        assertEquals(2, new Deadline(description, localDateTime).getBy().split(\" \").length);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 14
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void testGetDateTime() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        String description \u003d \"exampleDescription\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.of(2019, 8, 12, 12, 50);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        assertEquals(2, new Event(description, localDateTime).getAt().split(\" \").length);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 15
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    public void testStringOutput() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        String description \u003d \"exampleDescription\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "victorvic54"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "        assertEquals(\"[T][1] exampleDescription\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "                new Todo(description).toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "victorvic54"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "victorvic54": 15
    }
  }
]
