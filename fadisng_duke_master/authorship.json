[
  {
    "path": "Duke_List.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "D @ 0 @ project @ 12/12/2012 1200"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": "T @ 0 @ borrow a chinese book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "E @ 0 @ project meeting @ 12/12/0012 1100"
      }
    ],
    "authorContributionMap": {
      "fadisng": 3
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "run {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 23,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "Shows you your current list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### `list` - Display current list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### Feature 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "Adds a task into the list of tasks. Dates and times are to be input as the following format:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "`DD/MM/YYYY HHMM`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### `todo [description]` - Adds a todo task into the list with the description."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### `event [description] /at [date time]` - Adds an event task into the list with the description, date and time."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": " "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### `deadline [description] /by [date time]` - Adds a deadline task into the list with the description, date and time."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "`todo read book`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": "`event project meeting /at 20/12/2019 1600`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": "`deadline homework /by 15/10/2019 2359`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### Feature 3"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "Deletes a task from the list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fadisng"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### `delete [index]` - Removes a task from the list at the given index."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fadisng"
        },
        "content": "`delete 2` - Deletes the 2nd task in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### Feature 4"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fadisng"
        },
        "content": "Find a task from the list of tasks with a given keyword."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fadisng"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### `find [keyword]` - Displays a list of tasks with the given keyword from the current list of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fadisng"
        },
        "content": "Examples of usage:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fadisng"
        },
        "content": "`find book` - Returns a list of tasks with the word \u0027book\u0027."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### Feature 5"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fadisng"
        },
        "content": "Mark a task as done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fadisng"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### `done [index]` - Changes the cross beside the description to a tick of the task at the given index."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fadisng"
        },
        "content": "Examples of usage:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fadisng"
        },
        "content": "`done 1` - Marks the first task in the current list of tasks as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### Feature 6"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fadisng"
        },
        "content": "Update the description or date and time of a task. Dates and times are to be input as the following format:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fadisng"
        },
        "content": "`DD/MM/YYYY HHMM`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fadisng"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fadisng"
        },
        "content": "### `update [description/date] of [task description] /to [new description/date time]`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fadisng"
        },
        "content": "Examples of usage:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fadisng"
        },
        "content": "`update description of borrow book /to borrow a Chinese book`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fadisng"
        },
        "content": "`update date of project meeting /to 12/12/2012 1200`"
      }
    ],
    "authorContributionMap": {
      "fadisng": 66,
      "-": 17
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Represents the command to add a task into the arraylist."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        tasks.getList().add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        storage.writeFile(tasks.getList());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return toString() + ui.printTask(tasks.getList().size(), task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 24
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Abstract class to represent the possible commands given to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Executes the different commands respectively."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @param tasks Arraylist of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @param ui User interaction that comes with the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @param storage To deal with saving tasks into the file after executing the command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Deadline class to represent a task with a date to be done by."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) throws ParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(by);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"d MMMM yyyy, hmma\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String formattedDate \u003d formatter.format(this.date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String formattedDate \u003d formatter.format(this.date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return \"D @ 1 @ \" + this.description +  \" @ \" + formattedDate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return \"D @ 0 @ \" + this.description + \" @ \" + formattedDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void setDate(Date newDate) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.date \u003d newDate;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 44
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Represents a command to remove a task from the arraylist."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        Task taskRemoved \u003d tasks.getList().remove(taskNumber);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        storage.writeFile(tasks.getList());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return toString() + ui.printTask(tasks.getList().size(), taskRemoved);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 23
    }
  },
  {
    "path": "src/main/java/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "fadisng": 16
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Method to return a text from Duke with a Duke image."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @param text String that Duke returns"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @param img Image of Duke"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @return a DialogBox with the given text and image."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 65
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Represents a command that ticks off a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        Task taskDone \u003d tasks.getList().get(taskNumber);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        taskDone.markAsDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        storage.writeFile(tasks.getList());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return toString() + \" \" + taskDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public int getTaskNumber() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return taskNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } else if (obj \u003d\u003d null || obj.getClass() !\u003d this.getClass()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            DoneCommand command \u003d (DoneCommand) obj;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return taskNumber \u003d\u003d command.getTaskNumber();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 41
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Main driving class for Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Creates a new instance of Duke with the given txt file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @param file txt file to store the list of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public Duke(String file) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        storage \u003d new Storage(file);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        list \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        });"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        });"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String response \u003d getResponse(input);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                DialogBox.getUserDialog(input, user),"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                DialogBox.getDukeDialog(response, duke)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            response \u003d c.execute(list, ui, storage);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            response \u003d \"Date in wrong format\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 159,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Represents exceptions specific to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 9
    }
  },
  {
    "path": "src/main/java/Duke_List.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "D @ 1 @ art project @ 04/04/2009 1600"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": "T @ 0 @ borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "T @ 0 @ borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "T @ 0 @ sleep"
      }
    ],
    "authorContributionMap": {
      "fadisng": 4
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * An exception that occurs when a task has no description."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Event class to represent a task that occurs on a certain date."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(at);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public Event(String description, boolean isDone, String at) throws ParseException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(at);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"d MMMM yyyy, hmma\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String formattedDate \u003d formatter.format(this.date);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void setDate(Date newDate) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.date \u003d newDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String formattedDate \u003d formatter.format(this.date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return \"E @ 1 @ \" + this.description + \" @ \" + formattedDate;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return \"E @ 0 @ \" + this.description + \" @ \" + formattedDate;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 44
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Represents the command for Duke to terminate."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 11
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Represents a command that searches for a task with a given keyword."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public FindCommand(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String str \u003d toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            if (task.getDescription().contains(description)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        for (Task task : matchingTasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            str +\u003d count + \".\" + task + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 36
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Represents a command to print out the tasks in the arraylist."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        int listCount \u003d 1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String str \u003d toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            str +\u003d listCount + \".\" + task + \"\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            listCount++;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 23
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Duke duke \u003d new Duke(\"Duke_List.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "fadisng": 19
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 50
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Parser class to handle user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Parses the input string and determines the type of command given."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @param str The input string supplied to Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @return Returns the corresponding command depending on the first word of the input string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public static Command parse(String str) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String[] arr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        String next \u003d arr[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        switch (next) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            c \u003d new FindCommand(arr[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            c \u003d new ListCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            c \u003d new DoneCommand(Integer.parseInt(arr[1]) - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            c \u003d new DeleteCommand(Integer.parseInt(arr[1]) - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        case \"update\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            int a \u003d 3;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            String taskName \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            while (!arr[a].contains(\"/to\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                taskName +\u003d \" \" + arr[a];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                a++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            String updatedInfo \u003d arr[a + 1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            for (int i \u003d a + 2; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                updatedInfo +\u003d \" \" + arr[i];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            if (arr[1].contains(\"description\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                c \u003d new UpdateDescriptionCommand(taskName.trim(), updatedInfo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            } else if (arr[1].contains(\"date\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                c \u003d new UpdateDateCommand(taskName.trim(), updatedInfo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                throw new UnknownTaskException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            if (next.equals(\"todo\") || next.equals(\"deadline\") || next.equals(\"event\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                    throw new EmptyDescriptionException(\"☹ OOPS!!! The description of a \" + next + \" cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                    for (int i \u003d 1; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                        description +\u003d \" \" + arr[i];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                throw new UnknownTaskException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            if (next.equals(\"todo\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                t \u003d new Todos(description.trim());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                int index \u003d description.indexOf(\"/\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                String date \u003d description.substring(index + 4);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                String desc \u003d description.substring(1, index - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                if (next.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                    t \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                    t \u003d new Event(desc, date);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            c \u003d new AddCommand(t);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 83
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private String file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public Storage(String file) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Method that reads the designated file and stores the content into an arraylist."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Is called upon when Duke initialises."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @return Returns an arraylist of tasks written in the file given the file path."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public ArrayList\u003cTask\u003e load()  {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            File f \u003d new File(file);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                String next \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                String[] arr \u003d next.split(\"@\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                boolean isDone \u003d arr[1].contains(\"1\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                String description \u003d arr[2];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                if (arr[0].contains(\"T\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                    t \u003d new Todos(description.trim(), isDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                } else if (arr[0].contains(\"D\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                    t \u003d new Deadline(description.trim(), isDone, arr[3].trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                    t \u003d new Event(description.trim(), isDone, arr[3].trim());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            System.out.println(\"Date in wrong format\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Rewrites the file with the new arraylist of tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @param list arraylist of tasks that are updated after every command given to Duke."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void writeFile(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                textToAdd +\u003d task.print() + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 71
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Represents a task which could be something to do, an event or a deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void setDescription(String newDescription) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.description \u003d newDescription;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void setDate(Date newDate) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.date \u003d newDate;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * A method to write a task into a file according to the format that it can read."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @return Returns the string format of a task to write into the designated file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 56
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Class to represent the arraylist containing the tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.taskList \u003d list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Method to find a task given a description in the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @param description keyword to find the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @return returns the task with given keyword"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @throws TaskNotFoundException no task with given keyword is found"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public Task findTask(String description) throws TaskNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        Task t \u003d new Task(\"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        boolean flag \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            if (task.getDescription().contains(description)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                t \u003d task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                flag \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        if (flag) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            throw new TaskNotFoundException(\"Task not found.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 38
    }
  },
  {
    "path": "src/main/java/TaskNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * An exception that occurs when Duke is unable to decipher which command is given."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class TaskNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public TaskNotFoundException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 9
    }
  },
  {
    "path": "src/main/java/Todos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Todos class to represent a task to do in the list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class Todos extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public Todos(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public Todos(String description, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return \"T @ 1 @ \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return \"T @ 0 @ \" + this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 28
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * A class to handle User Interactions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * Method to print task and number of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @param count number of tasks in the list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @param t type of task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     * @return String representation of task and number of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String printTask(int count, Task t) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        assert count \u003e 0 : \"Number of tasks cannot be negative.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return \"  \" + t + \"\\nNow you have \" + count + \" task in the list.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return \"  \" + t + \"\\nNow you have \" + count + \" tasks in the list.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 21
    }
  },
  {
    "path": "src/main/java/UnknownTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * An exception that occurs when Duke is unable to decipher which command is given."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class UnknownTaskException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public UnknownTaskException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 9
    }
  },
  {
    "path": "src/main/java/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public abstract class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 6
    }
  },
  {
    "path": "src/main/java/UpdateDateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class UpdateDateCommand extends UpdateCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private String newDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public UpdateDateCommand(String taskDescription, String newDate) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.newDate \u003d newDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            task \u003d tasks.findTask(taskDescription);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            tasks.getList().remove(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            Date date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(newDate);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            task.setDate(date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } catch (TaskNotFoundException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return \"Date in wrong format.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        tasks.getList().add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        storage.writeFile(tasks.getList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return toString() + ui.printTask(tasks.getList().size(), task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"Got it. I\u0027ve updated this task\u0027s date:\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 38
    }
  },
  {
    "path": "src/main/java/UpdateDescriptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class UpdateDescriptionCommand extends UpdateCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    private String newDescription;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public UpdateDescriptionCommand(String taskDescription, String newDescription) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        this.newDescription \u003d newDescription;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            task \u003d tasks.findTask(taskDescription);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            tasks.getList().remove(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            task.setDescription(newDescription);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        } catch (TaskNotFoundException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        tasks.getList().add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        storage.writeFile(tasks.getList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return toString() + ui.printTask(tasks.getList().size(), task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        return \"Got it. I\u0027ve updated this task\u0027s description:\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 30
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "fadisng": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "fadisng": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Test class to test parse() method in Parser."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void parseTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        assertEquals(new DoneCommand(2), Parser.parse(\"done 3\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 14
    }
  },
  {
    "path": "src/test/java/TodosTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fadisng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fadisng"
        },
        "content": " * Test class to test the print() and toString() method in Todos class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fadisng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fadisng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fadisng"
        },
        "content": "public class TodosTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void testPrint() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        assertEquals(\"T @ 1 @ borrow book\", new Todos(\"borrow book\", true).print());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fadisng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fadisng"
        },
        "content": "        assertEquals(\"[T][\\u2713] play basketball\", new Todos(\"play basketball\", true).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fadisng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fadisng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fadisng": 23
    }
  }
]
