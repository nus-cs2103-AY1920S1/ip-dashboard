[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//sourceSets.main.resources { srcDirs \u003d [\"src/main/java\"]; include \"**/*.*\" }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 36
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 84
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 1
    }
  },
  {
    "path": "src/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "       [T][✗] borrow book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     1.[T][✗] borrow book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "       [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     Now you have 1 tasks in the list."
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 23
    }
  },
  {
    "path": "src/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "deadline return book /by Sunday"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 3
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import storage.StorageInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Main class used to drive the program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * @author Wilfred Bradley Tan, A0185405E."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Object used to execute commands. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private Command command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** User interface to display feedback and instructions to user. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Storage object to facilitate loading and saving of tasks. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private StorageInterface storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** List of tasks added by the user. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Creates Duke with an absolute filePath."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param args String[]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Initialises a Duke object with a filePath and loads existing tasks if any."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param filePath Filepath where tasks will be saved and loaded from."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            taskList \u003d storage.load();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Initiates the system by requesting for user input. Executes the next command after parsed"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * by the Parser and fed to the command object. Error messages will be shown if invalid commands are given."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                command \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                command.execute(ui, taskList, storage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 70,
      "-": 4
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import storage.StorageInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Command class that executes parsed commands given to it."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Command portion of the input. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private String commandString;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Description portion of the input. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Date when the task starts. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private LocalDate startDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Time when the task starts. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Time when the task ends. */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Index for deletion or marking tasks as done. */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Keyword for finding the task in a list. */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Drives the system by processing the given commands and doing the corresponding actions."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param ui UserInterface which provides feedback to the user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param taskList TaskList which carries out tasks which edit the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param storage Storage which determines the location and format of saved data."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @throws DukeException Exception is thrown when invalid or incomplete commands are given."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void execute(Ui ui, TaskList taskList, StorageInterface storage) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        switch (getCommandString()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            TaskList filteredList \u003d taskList.find(getKeyword());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            ui.showFindSuccess();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            ui.showList(filteredList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            Task currTodo \u003d new Todo(getDesc());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            taskList.add(currTodo, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            ui.showAddSuccess(currTodo, taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            Task currDeadline \u003d new Deadline(getDesc(), getStartDate(), getStartTime());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            taskList.add(currDeadline, storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            ui.showAddSuccess(currDeadline, taskList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            Task currEvent \u003d new Event(getDesc(), getStartDate(), getStartTime(),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                    getEndTime());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            taskList.add(currEvent, storage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            ui.showAddSuccess(currEvent, taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                Task deletedTask \u003d taskList.get(getIndex() - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                taskList.remove(getIndex() - 1, storage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                ui.showDeleteSuccess(deletedTask, taskList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                throw new DukeException(\"     Deleted item is out of bounds! Task not deleted\", e);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                Task doneTask \u003d taskList.get(getIndex() - 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                taskList.setDone(doneTask, storage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                ui.showDoneSuccess(doneTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                throw new DukeException(\"     Selected item is out of bounds! Task not deleted\", e);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            ui.showList(taskList);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            ui.showBye();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            ui.showInvalidInputError();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Adds a command to the current Command object and generates a new Command for method chaining."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Command object with command added."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Command addCommandString(String commandString) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.commandString \u003d commandString;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Adds a description to the current Command object and generates a new Command for method chaining."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Command object with description added."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Command addDesc(String desc) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Adds a start date to the current Command object and generates a new Command for method chaining."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Command object with start date added."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Command addStartDate(LocalDate startDate) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Adds a start time to the current Command object and generates a new Command for method chaining."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Command object with start time added."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Command addStartTime(LocalTime startTime) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Adds an end time to the current Command object and generates a new Command for method chaining."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Command object with end time added."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Command addEndTime(LocalTime endTime) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Adds an index to the current Command object and generates a new Command for method chaining."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Command object with index added."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Command addIndex(int index) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Adds a keyword to the current Command object and generates a new Command for method chaining."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Command object with keyword added."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Command addKeyword(String keyword) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the command of the Command object."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Command of Task."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public String getCommandString() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.commandString;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the description of the Command object."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Description of Task."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.desc;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the start date of the Command object."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Start Date of Task."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public LocalDate getStartDate() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.startDate;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the start time of the Command object."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Start time of Task."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public LocalTime getStartTime() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.startTime;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the end time of the Command object."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return End time of the Task."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public LocalTime getEndTime() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.endTime;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the index of the Command object."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Index of Task."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.index;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the keyword of the Command object."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Keyword of the Command object."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public String getKeyword() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.keyword;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 219
    }
  },
  {
    "path": "src/main/java/command/package-info.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Command package which contains classes that can be used to execute commands received by the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package command;"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 4
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * DukeException class which can be thrown when exceptions related to Duke are raised. Will eventually be caught by"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Duke Object."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Initialises a DukeException object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param errorMessage Custom error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param err Throwable which is raised by the exception caught."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public DukeException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 17
    }
  },
  {
    "path": "src/main/java/exception/package-info.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Exception package which contains custom exceptions for Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package exception;"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 4
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Parser class used to process Strings into variables that the Command object can execute."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Command portion of the input. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private String commandString;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Description portion of the input. */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private String desc;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Date when the task starts. */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private LocalDate startDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Time when the task starts. */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Time when the task ends. */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Index for deletion or marking tasks as done. */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Keyword for finding the task in a list. */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Parses user input into a Command object containing its required components such as description, date and time"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     *      according to the command given."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param userInput Input provided by the user."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @throws DukeException Exception is thrown when there is an invalid format provided. For example,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     *      missing date / time or incorrect date / time format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        Scanner sc \u003d new Scanner(userInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        Command newCommand \u003d new Command();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        String commandString \u003d sc.next();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        newCommand.addCommandString(commandString);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        switch (commandString) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newCommand.addKeyword(sc.next());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newCommand.addDesc(sc.next());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                String[] descriptionAndDate \u003d sc.nextLine().split(\"/\", 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                newCommand.addDesc(descriptionAndDate[0]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                String[] dateTimeArr \u003d descriptionAndDate[1].split(\" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                newCommand.addStartDate(LocalDate.parse(dateTimeArr[0], dateFormatter()));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                String[] timeRange \u003d dateTimeArr[1].split(\"-\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                if (timeRange.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                    newCommand.addStartTime(LocalTime.parse(dateTimeArr[1], timeFormatter()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                    newCommand.addStartTime(LocalTime.parse(timeRange[0], timeFormatter()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                    newCommand.addEndTime(LocalTime.parse(timeRange[1], timeFormatter()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                throw new DukeException(\"    Incomplete command, please include a date and time\", e);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                throw new DukeException(\"    Incomplete command, please add a description, date and time.\", e);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newCommand.addIndex(sc.nextInt());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!! I\u0027m sorry, but I don\u0027t know what that means :-(\", null);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return newCommand;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Parses Strings into Task objects."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param taskData String in the format type|isDone|desc|startDate(optional)|startTime(optional)|endTime(optional)."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @throws ParseException Exception is thrown when an invalid task is loaded."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public static Task parseStringToTask(String taskData) throws ParseException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        LocalDate newStartDate;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        LocalTime newStartTime;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        LocalTime newEndTime;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        String[] dataArr \u003d taskData.split(\"[|]\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        type \u003d dataArr[0];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        isDone \u003d (dataArr[1].equals(\"1\")) ? true : false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        desc \u003d dataArr[2];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newTask \u003d new Todo(desc);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newTask.setDone(isDone);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newStartDate \u003d LocalDate.parse((dataArr[3]), dateFormatter());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newStartTime \u003d LocalTime.parse((dataArr[4]), timeFormatter());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newTask \u003d new Deadline(desc, newStartDate, newStartTime);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newTask.setDone(isDone);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newStartDate \u003d LocalDate.parse((dataArr[3]), dateFormatter());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newStartTime \u003d LocalTime.parse((dataArr[4]), timeFormatter());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newEndTime \u003d LocalTime.parse((dataArr[5]), timeFormatter());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newTask \u003d new Event(desc, newStartDate, newStartTime, newEndTime);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            newTask.setDone(isDone);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            throw new ParseException(\"invalid task loaded\", 0);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * DateTimeFormatter which can be used to validate the formats of date strings."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return DateTimeFormatter to validate date formats."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public static DateTimeFormatter dateFormatter() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return DateTimeFormatter.ofPattern(\"[dd/MM/yyyy][dd/MM/yy][dd-MM-yyyy]\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                + \"[dd-MM-yy]\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * DateTimeFormatter which can be used to validate the formats of time strings."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return DateTimeFormatter to validate time formats."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public static DateTimeFormatter timeFormatter() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return DateTimeFormatter.ofPattern(\"[HHmm][HH:mm][H]\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 165
    }
  },
  {
    "path": "src/main/java/parser/package-info.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Parser package which contains classes which can process user input into objects that can be used by Command objects."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package parser;"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 4
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Storage class which handles the loading and saving of Task data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class Storage implements StorageInterface {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Filepath to load from and save to. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Initialises a Storage object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param filePath File path to load to and save from."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Loads a file and parses the data into Tasks which are stored in a TaskList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Tasklist that contains the loaded tasks."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @throws IOException Exception is thrown when an invalid file path is provided."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public TaskList load() throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            FileInputStream fis \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            InputStreamReader isr \u003d new InputStreamReader(fis, \"UTF-8\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(isr);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            //load tasks into task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                Task newTask \u003d Parser.parseStringToTask(line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                tasks.add(newTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            System.out.println(\"Failed to parse String to task\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return new TaskList(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Saves the data of the TaskList in a text file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param taskList TaskList that is to be saved."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                String formattedData \u003d formatData(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                writer.append(formattedData);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                writer.append(\"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            System.out.println(\"invalid filePath\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Formats the data of a Task in the format of type|isDone|desc|startDate(optional)|startTime(optional)|endTime"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * (optional)."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param currTask Task that will be formatted."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return String of the formatted Task data."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public String formatData(Task currTask) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        data +\u003d currTask.getType() + \"|\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        data +\u003d currTask.getDone() ? \"1|\" : \"0|\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        data +\u003d currTask.getDescription();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        if (currTask instanceof Deadline) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            data +\u003d \"|\" + ((Deadline) currTask).getDate().format(dateFormatter)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                    + \"|\" + ((Deadline) currTask).getTime().format(timeFormatter);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        if (currTask instanceof Event) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            data +\u003d \"|\" + ((Event) currTask).getStartDate().format(dateFormatter)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                    + \"|\" + ((Event) currTask).getStartTime().format(timeFormatter)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                    + \"|\" + ((Event) currTask).getEndTime().format(timeFormatter);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 113
    }
  },
  {
    "path": "src/main/java/storage/StorageInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public interface StorageInterface {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public TaskList load() throws IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void save(TaskList taskList);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 12
    }
  },
  {
    "path": "src/main/java/storage/package-info.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Storage package which contains classes that handle the loading and saving of tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package storage;"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 4
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Deadline class indicated with type \"D\" which contains a date and time on top of other Task components."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Date of the Deadline. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Time of the Deadline. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Initialises a Deadline object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param description Description of the Deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param date Date of the Deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param time Time of the Deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Deadline(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * String of the type followed by status icon, description, date and time of Deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return String in the given format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + date + \" \" + time + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the date of the Deadline."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Date of the Deadline."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the time of the Deadline."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Time of the Deadline."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 52
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Event class indicated with type \"E\" which contains a start date, start time and end time on top of the other"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * components that Task has."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Date when the event starts. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private LocalDate startDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Time when the event starts. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Time when the event ends. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Initialises and Event object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param description Description of the Event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param startDate Date when the Event starts."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param startTime Time when the Event starts."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param endTime Time when the Event ends."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Event(String description, LocalDate startDate, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the date when the Event starts."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Start date of Event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public LocalDate getStartDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return startDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the time when the Event starts."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Start time of the Event."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public LocalTime getStartTime() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return startTime;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the time when the Event ends."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return End time of the Event."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public LocalTime getEndTime() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return endTime;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * String of the type followed by status icon, description, start date, start time and end time of the Event."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return String in the given format."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + startDate + \" \" + startTime"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                + \"-\" + endTime + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 65
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Task class which can be extended to create sub tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Type of Task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Description of Task. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Boolean indicated whether Task is done or not. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Initialises a Task object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param description Description of the Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the status icon of the task. Shows a tick if done and an \"x\" if Task is not done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Status icon of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Sets the Task as done or not depending on the argument."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param isDone boolean to determine whether Task is marked as done or not."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the type of the Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Type of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the description of the Task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Description of the Task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the status of the Task (i.e. whether done or not)."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Status of the Task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * String of the status icon followed by description."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return String in the given format."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 72
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Todo class indicated with type \"T\" which contains a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Initialises a Todo class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param description Description of the Todo class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * String of the type followed by status icon and description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return String in the given format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return \"[\" + this.type + \"]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 25
    }
  },
  {
    "path": "src/main/java/task/package-info.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Task package which contains the various types of tasks that the user can create."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package task;"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 4
    }
  },
  {
    "path": "src/main/java/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import storage.StorageInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * TaskList class which handles the commands related to the task list such as add and remove."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** List of tasks. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Initialises the TaskList object with an empty task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Initialises the TaskList object with the provided task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param taskList Task list used to initialise TaskList object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        this.tasks \u003d taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Finds a task from the taskList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param keyword Keyword that user is searching for in task\u0027s description. For example, \"testString\" contains"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     *                the \"test\" keyword."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return TaskList that contains the tasks that were found."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public TaskList find(String keyword) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                tasks.stream().filter(t -\u003e t.getDescription().contains(keyword))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return new TaskList(filteredList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param task Task that is to be added to the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param storage Storage object to save changes."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @throws DukeException Exception is thrown when an invalid task is added. For example, an incomplete command or"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     *      tasks with null description."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void add(Task task, StorageInterface storage) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        if (task.getDescription() !\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            storage.save(this);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            throw new DukeException(\"    Sorry, that\u0027s an incomplete command. Failed to add task.\", null);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Removes the task from the task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param index Index of the task to be removed."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param storage Storage object to save changes."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @throws DukeException Exception is thrown when an invalid index is provided i.e. IndexOutOfBoundsException"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void remove(int index, StorageInterface storage) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        storage.save(this);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Sets the task as done in the Storage."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param task Task which will be set as done."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param storage Storage object to save changes."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @throws DukeException Exception is thrown when an invalid index is provided i.e. IndexOutOfBoundsException"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void setDone(Task task, StorageInterface storage) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        storage.save(this);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return ArrayList of tasks."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the size of the task list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Integer indicating the size of the task list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Gets the task from the index stated."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param index Index of the task to be retrieved."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return Task which is retrieved."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 108
    }
  },
  {
    "path": "src/main/java/tasklist/package-info.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Tasklist package which contains classes that handle actions pertaining to modifying or querying the tasklist."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package tasklist;"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 4
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Ui class which generates feedback to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Shows a welcome message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                + \"    What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Shows a good bye message."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Shows the list of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param taskList TaskList that is to be shown."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @throws DukeException Throws an exception if it is an invalid list or there exists and invalid task in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void showList(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "            System.out.println(\"    \" + (i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Shows a formatted error message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param errorMessage Error message that will be printed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Shows the loading error message."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        System.out.println(\"    No existing data. Duke initialised with an empty TaskList\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Shows the invalid input error message."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void showInvalidInputError() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        System.out.println(\"     ☹ OOPS!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void showFindSuccess() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Shows a message when a task has been successfully added."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param addedTask Task that is to be added."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param taskList TaskList that the Task is to be added to."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void showAddSuccess(Task addedTask, TaskList taskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                \"    Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                + \"      \" + addedTask + \"\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                + \"    Now you have \" + taskList.getSize() + \" tasks in this list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Shows a message when a task has been successfully deleted."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param deletedTask Task that is to be deleted."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param taskList TaskList that the Task is to be deleted from."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void showDeleteSuccess(Task deletedTask, TaskList taskList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                \"    Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                + \"      \" + deletedTask + \"\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                + \"    Now you have \" + taskList.getSize() + \" tasks in this list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Shows a message when a task is successfully marked as done."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param doneTask Task that is to be marked as done."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void showDoneSuccess(Task doneTask) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                \"     Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "                + \"     \" + doneTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Shows a standard line string."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        System.out.println(\"   ____________________________________________________________\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 106
    }
  },
  {
    "path": "src/main/java/ui/package-info.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Ui package which contains classes that provide feedback to users."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "package ui;"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 4
    }
  },
  {
    "path": "src/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 34
    }
  },
  {
    "path": "src/test/java/StorageStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import storage.StorageInterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class StorageStub implements StorageInterface {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public TaskList load() throws IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 15
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * Storage Test class to test the functionality of the Storage class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Absolute file path used to test loading and saving functionality. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private static final String FILEPATH \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Tests the success of formatting a Todo into the format used for saving / loading."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void formatData_todo_success() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        Task todoStub \u003d new Todo(\" testString\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        assertEquals(\"T|0| testString\", new Storage(FILEPATH).formatData(todoStub));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Tests the success of formatting a Deadline into the format used for saving / loading."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void formatData_deadline_success() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        Task deadlineStub \u003d new Deadline(\" testString \", dateStub(), timeStub());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        assertEquals(\"D|0| testString |26/11/1996|1234\", new Storage(FILEPATH).formatData(deadlineStub));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Tests the success of formatting a Event into the format used for saving / loading."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void formatData_event_success() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        Task eventStub \u003d new Event(\" testString \", dateStub(), timeStub(), timeStub());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        assertEquals(\"E|0| testString |26/11/1996|1234|1234\", new Storage(FILEPATH).formatData(eventStub));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Generates a LocalDate constant which can be used for testing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return LocalDate stub used for testing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public static LocalDate dateStub() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return LocalDate.parse(\"26/11/1996\", formatter);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Generates a LocalTime constant which can be used for testing."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return LocalTime stub used for testing."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public static LocalTime timeStub() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return LocalTime.parse(\"1234\", formatter);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 67
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import storage.StorageInterface;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " * TaskListTest class used to test the functionality of TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /** Storage stub with hard-coded file paths to pass as parameter for test methods. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    private StorageInterface storageStub \u003d new StorageStub();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Creates an ArrayList with the provided task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @param task Task that the ArrayList will be created with."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return ArrayList of the task provided."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public ArrayList\u003cTask\u003e createList(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        newList.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return newList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Tests the success of adding Todo / Deadline / Event tasks to a TaskList."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @throws DukeException Exception is raised when an invalid task is added."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public void add_tasks_success() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        Task todoStub \u003d new Todo(\" testString\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        ArrayList\u003cTask\u003e testTodoList \u003d createList(todoStub);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        TaskList todoTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        todoTaskList.add(todoStub, storageStub);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        assertEquals(testTodoList, todoTaskList.getTasks());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        Task deadlineStub \u003d new Deadline(\" testString \", dateStub(), timeStub());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        ArrayList\u003cTask\u003e testDeadlineList \u003d createList(deadlineStub);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        TaskList deadlineTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        deadlineTaskList.add(deadlineStub, storageStub);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        assertEquals(testDeadlineList, deadlineTaskList.getTasks());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        Task eventStub \u003d new Event(\" testString \", dateStub(), timeStub(), timeStub());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        ArrayList\u003cTask\u003e testEventList \u003d createList(eventStub);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        TaskList eventTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        eventTaskList.add(eventStub, storageStub);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        assertEquals(testEventList, eventTaskList.getTasks());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Generates a LocalDate constant which can be used for testing."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return LocalDate stub used for testing."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public static LocalDate dateStub() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return LocalDate.parse(\"26/11/1996\", formatter);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * Generates a LocalTime constant which can be used for testing."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     * @return LocalTime stub used for testing."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    public static LocalTime timeStub() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "        return LocalTime.parse(\"1234\", formatter);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 79
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//public class UiTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//    @BeforeEach"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//    public void setUpStreams() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//    @AfterEach"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//    public void restoreStreams() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//        System.setOut(originalOut);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//        System.setErr(originalErr);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 24
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "D|1| tomorrow |26/11/1996|1234"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wilfredbtan"
        },
        "content": "D|0| hello |11/11/1996|1234"
      }
    ],
    "authorContributionMap": {
      "wilfredbtan": 2
    }
  }
]
