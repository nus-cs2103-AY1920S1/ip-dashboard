[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    testRuntime \u0027org.junit.jupiter:junit-jupiter-engine:5.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "test {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "run{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 33,
      "-": 15
    }
  },
  {
    "path": "src/main/java/AfterTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// Adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class representation of \"aftertasks\" in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * An aftertask is a task which is to be done after a specific time. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class AfterTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    protected Date after;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Creates a new AfterTask."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param description Description of the AfterTask"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param after Date after which the AfterTask is to be done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public AfterTask(String description, Date after) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.after \u003d after;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns a String representation of this AfterTask."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return String representation of this AfterTask"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return \"[A]\" + super.toString() + \" (after: \" + after + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Gets the Date after which this AfterTask is to be done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Date after which the AfterTask is to be done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Date getAfter() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return this.after;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 41
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Enumerator class for all recognized command types."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "enum Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    AFTERTASK(\"aftertask\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    FIND(\"find\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String commandText;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    Command(String commandText) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.commandText \u003d commandText;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns a string representation of the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return A string representing the command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return commandText;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Attempts to match an input string to a valid command, which is returned."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param commandText String representation of the command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Command that matches the string, if exists"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @throws InvalidCommandException If there is no matching Command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static Command getFromString(String commandText) throws InvalidCommandException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Command[] allCommands \u003d Command.values();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        for (Command cmd : allCommands) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            if (commandText.equals(cmd.toString())) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                return cmd;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        throw new InvalidCommandException(Duke.PRINTED_OOPS + Duke.PRINTED_INVALID_COMMAND);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 49
    }
  },
  {
    "path": "src/main/java/DateParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class to help with parsing Dates to and from Strings."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class DateParser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private final SimpleDateFormat formatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Constructs a DateParser with a given date format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param format String that represents the expected format of the Date"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public DateParser(String format) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert format !\u003d null : \"DateParser constructor was given null argument\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert format.length() \u003e 0 : \"DateParser constructor was given empty String as argument\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        formatter \u003d new SimpleDateFormat(format);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Parses a String into a Date object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param str String representation of the Date"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Date parsed from String (if valid format)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @throws ParseException If the String cannot be parsed into a Date object according to given format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Date parse(String str) throws ParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert str !\u003d null : \"parse function was given a null argument\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return formatter.parse(str);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Formats a Date into a String."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param d The Date to be formatted"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return String representation of the Date, in the desired format"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String format(Date d) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert d !\u003d null : \"format function was given a null argument\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return formatter.format(d);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 48
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// @@author CS2103/T Software Engineering AY1920S1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// Referenced from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// with minor modifications "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class representation of a Date in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Creates a Deadline with a description and a Date by which it must be done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param description A String description of this Deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param by Date by which this Deadline must be completed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns a String representation of this Deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return String representation of this Deadline"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Get the date by which this Deadline must be done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Date by which this Deadline must be done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Date getBy() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 41,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String STYLE_DIALOG_DUKE \u003d "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        \"-fx-background-color: PALETURQUOISE;\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        + \"-fx-font-weight: BOLD;\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Gets a dialog box used by the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Gets a dialog box used by Duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        db.setStyle(STYLE_DIALOG_DUKE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 72
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Main class of the application."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String PRINTED_OOPS \u003d \"OOPS!!! \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String PRINTED_INVALID_COMMAND \u003d \"I\u0027m sorry, but I don\u0027t know what that means\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String PRINTED_DESCRIPTION_EMPTY_1 \u003d \"The description of a \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String PRINTED_DESCRIPTION_EMPTY_2 \u003d \" cannot be empty.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    // Delimiters"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String DELIM_BY \u003d \"/by\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String DELIM_AT \u003d \"/at\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String DELIM_AFTER \u003d \"/after\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String DATE_FORMAT \u003d \"dd-MM-yy HHmm\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final String USER_NAME \u003d System.getProperty(\"user.name\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public static final int MAX_TASKS \u003d 100;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private DateParser dateParser;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Exiter exiter;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Constructor method. This will initialize the other classes that Duke requires to operate."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.dateParser \u003d new DateParser(DATE_FORMAT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.storage \u003d new Storage(dateParser, \"C:\\\\Users\\\\\" + USER_NAME + \"\\\\Documents\\\\GitHub\\\\duke\\\\data.dat\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.exiter \u003d new Exiter();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.taskList \u003d storage.readDataFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Instructs the associated Ui object to print a greeting."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String printGreeting() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return this.ui.printGreeting();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Runs the Duke instance."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String nextLine \u003d ui.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert nextLine !\u003d null : \"Ui.nextLine() returned null.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        // Keep reading input until the bye command is received."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            processInputLine(nextLine);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            nextLine \u003d ui.nextLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /** Processes a single line of input by identifying the command that was given, then delegating it"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     *  to a subfunction to handle the command call."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String processInputLine(String line) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Command command \u003d parser.getCommandFromLine(line);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            String commandText \u003d command.toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            String response \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                response \u003d ui.printList(taskList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                response \u003d markTaskAsDone("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    parser.getIndexFromLine(line)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                );"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                response \u003d addDeadline("
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    parser.getBeforeDelim(line, commandText, DELIM_BY),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    parser.getAfterDelim(line, commandText, DELIM_BY)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                );"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                response \u003d addEvent("
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    parser.getBeforeDelim(line, commandText, DELIM_AT),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    parser.getAfterDelim(line, commandText, DELIM_AT)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                );"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                response \u003d addTodo("
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    parser.getArg(line, commandText)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                );"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            case AFTERTASK:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                response \u003d addAfterTask("
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    parser.getBeforeDelim(line, commandText, DELIM_AFTER),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    parser.getAfterDelim(line, commandText, DELIM_AFTER)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                );"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                response \u003d deleteTask("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    parser.getIndexFromLine(line)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                );"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                response \u003d findTask("
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    parser.getArg(line, commandText)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                );"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                response \u003d exitAfter(1000);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                throw new InvalidCommandException(PRINTED_OOPS + PRINTED_INVALID_COMMAND);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return ui.printException(e);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return ui.adviseDateFormat(DATE_FORMAT);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return ui.printIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String exitAfter(int ms) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert ms \u003e\u003d 0 : \"exitAfter was passed a negative argument\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        exiter.exitAfter(ms);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        storage.writeDataFile(taskList);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return ui.printGoodbye();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String findTask(String searchQueryStr) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return ui.displaySearchResults("
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            taskList.search(searchQueryStr),"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            searchQueryStr"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String deleteTask(int index) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Task taskToDelete \u003d taskList.get(index);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert taskToDelete !\u003d null : \"The task to be deleted cannot be found.\"; "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        taskList.remove(taskToDelete);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return ui.ackDeletion(taskToDelete, taskList.size());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String addDeadline(String desc, String date) throws EmptyDescriptionException, ParseException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        if (desc.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            throwEmptyDescriptionException(Command.DEADLINE);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Task newDeadline \u003d new Deadline(desc, dateParser.parse(date));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return addTask(newDeadline);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String addEvent(String desc, String date) throws EmptyDescriptionException, ParseException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        if (desc.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            throwEmptyDescriptionException(Command.EVENT);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        "
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Task newEvent \u003d new Event(desc, dateParser.parse(date));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return addTask(newEvent);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String addTodo(String desc) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        if (desc.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            throwEmptyDescriptionException(Command.TODO);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        "
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Task newTodo \u003d new Todo(desc); "
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return addTask(newTodo);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String addAfterTask(String desc, String date) throws EmptyDescriptionException, ParseException {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        if (desc.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            throwEmptyDescriptionException(Command.AFTERTASK);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Task newAfterTask \u003d new AfterTask(desc, dateParser.parse(date));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return addTask(newAfterTask);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void throwEmptyDescriptionException(Command cmd) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        throw new EmptyDescriptionException("
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            PRINTED_OOPS "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + PRINTED_DESCRIPTION_EMPTY_1"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + cmd.toString()"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + PRINTED_DESCRIPTION_EMPTY_2"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Task taskToMarkAsDone \u003d taskList.get(index);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert taskToMarkAsDone !\u003d null : \"The task to be marked as done is null.\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        taskToMarkAsDone.markAsDone();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return ui.ackDone(taskToMarkAsDone);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String addTask(Task newTask) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert newTask !\u003d null : \"The task to be added is null.\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return ui.ackAddition(newTask, taskList.size());"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 230,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Superclass from which all Duke-specific exceptions inherit."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Creates a DukeException with a specific message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param message Exception message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 13
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class representation of the Exception that occurs when an empty description is provided to a Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Creates an EmptyDescriptionException with a specific message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param message Exception message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// Adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class representation of events in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Creates a new Event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param description Description of the Event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param at Date at which the Event occurs"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns a String representation of this Event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return String representation of this Event"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Gets the Date at which this Event occurs."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Date at which the Event occurs"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Date getAt() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 40
    }
  },
  {
    "path": "src/main/java/Exiter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Exiter {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Shuts down the program after a specified duration (in milliseconds)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void exitAfter(int ms) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert ms \u003e\u003d 0 : \"exitAfter was passed a negative argument\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        TimerTask exitTask \u003d new TimerTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        };"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        timer.schedule(exitTask, ms);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 21
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class representation of the Exception thrown when Duke is given an invalid command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Creates an InvalidCommandException with a specific message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param message Exception message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 13
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Image userImage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Image dukeImage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Initializes the main window."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Sets the Duke implementation that controls this window."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            DialogBox.getDukeDialog(duke.printGreeting(), dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String response \u003d duke.processInputLine(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 64
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class to handle parsing of user input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Given a line, obtains the command that was present in that line."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param line The line input by the user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Command object representing the command that was present in the line"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @throws InvalidCommandException If there is no valid Command in the line"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Command getCommandFromLine(String line) throws InvalidCommandException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert line !\u003d null : \"getCommandFromLine was passed a null argument\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert line.length() \u003e 0 : \"getCommandFromLine was passed an empty String\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return Command.getFromString("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            line.split(\" \")[0]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            .trim()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Given a line, obtains the (numerical) index present in the line."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param line The line input by the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return The int index present in the line"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public int getIndexFromLine(String line) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert line !\u003d null : \"getIndexFromLine was passed a null argument\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert line.length() \u003e 0 : \"getIndexFromLine was passed an empty String\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return Integer.parseInt("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                line.split(\" \")[1]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            ) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Given a line, return the part of the line between the command and the provided delimiter."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param line Line input by user"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param command Command text within line"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param delim Desired delimiter"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return String representation of the part of the line between the command and delimiter"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String getBeforeDelim(String line, String command, String delim) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert line !\u003d null : \"getBeforeDelim was passed a null argument (line)\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert line.length() \u003e 0 : \"getBeforeDelim was passed an empty String (line)\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert command !\u003d null : \"getBeforeDelim was passed a null argument (command)\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert command.length() \u003e 0 : \"getBeforeDelim was passed an empty String (command)\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert delim !\u003d null : \"getBeforeDelim was passed a null argument (delim)\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert delim.length() \u003e 0 : \"getBeforeDelim was passed an empty String (delim)\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return line.split(command)[1]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            .split(delim)[0]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            .trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Given a line, return the part of the line after the provided delimiter."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param line Line input by user"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param command Command text within line"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param delim Desired delimiter"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return String representation of the part of the line after the delimiter"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String getAfterDelim(String line, String command, String delim) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return line.split(command)[1]"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            .split(delim)[1]"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            .trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns true if the provided line is not the BYE command."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param line Line input by user"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return true if the provided line is not the BYE command, false otherwise"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public boolean isNotByeCommand(String line) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert line !\u003d null : \"isNotByeCommand was passed a null argument\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert line.length() \u003e 0 : \"isNotByeCommand was passed an empty String\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return !line"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            .trim()"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            .equals("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                Command.BYE.toString()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Gets the argument from the line input by user, i.e the part of the line excluding the command"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param line Line input by user"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param command String representing the command within the line"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return The argument within the line"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String getArg(String line, String command) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert line !\u003d null : \"getArg was passed a null argument (line)\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert line.length() \u003e 0 : \"getArg was passed an empty String (line)\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert command !\u003d null : \"getArg was passed a null argument (command)\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert command.length() \u003e 0 : \"getArg was passed an empty String (command)\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return line"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                .split(command)[1]"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                .trim();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 121
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class to handle interfacing with the data file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private DateParser dateParser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Constructs a Storage object with a given date parser and a given filepath."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param dateParser DateParser object to handle the dates within the file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param filePath Path of the data file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Storage(DateParser dateParser, String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert dateParser !\u003d null : \"Storage constructor was passed a null arg (dateParser)\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert filePath !\u003d null : \"Storage constructor was passed a null arg (filePath)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert filePath.length() \u003e 0 : \"Storage constructor was passed an empty String (filePath)\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.dateParser \u003d dateParser;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Reads the tasks from the data file; returns them in a TaskList object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return TaskList representation of the contents of the data file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public TaskList readDataFile() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        Scanner inStream;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        TaskList taskList \u003d new TaskList(Duke.MAX_TASKS);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            inStream \u003d new Scanner(new FileInputStream(filePath));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            while (inStream.hasNextLine()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                String line \u003d inStream.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                switch (line.charAt(0)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    taskList.add(new Todo("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        line.substring(2, line.length())"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    ));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    String eventLine \u003d line.substring(2, line.length());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    taskList.add(new Event("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        eventLine.split(\"/\")[0],"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        dateParser.parse("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                            eventLine.split(\"/\")[1]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        )"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    ));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    String deadlineLine \u003d line.substring(2, line.length());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    taskList.add(new Deadline("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        deadlineLine.split(\"/\")[0],"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        dateParser.parse("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                            deadlineLine.split(\"/\")[1]"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        )"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    ));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                case \u0027A\u0027:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    String afterTaskLine \u003d line.substring(2, line.length());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    taskList.add(new AfterTask("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        afterTaskLine.split(\"/\")[0],"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        dateParser.parse("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                            afterTaskLine.split(\"/\")[1]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        )"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    ));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                if (line.charAt(1) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    taskList"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        .get(taskList.size() - 1)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                        .markAsDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            inStream.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            System.out.println(\"Data file not found, starting with empty task list\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return new TaskList(Duke.MAX_TASKS);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Writes the provided TaskList to the data file."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param taskList The TaskList to be written"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void writeDataFile(TaskList taskList) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert taskList !\u003d null : \"writeDataFile was passed a null argument\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        PrintWriter outStream;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            outStream \u003d new PrintWriter("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                new FileOutputStream(filePath)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                outStream.println("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    saveTask(t)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                );"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            outStream.close();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String saveTask(Task t) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert t !\u003d null : \"saveTask was passed a null Task to save\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String doneChar \u003d (t.isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String classChar;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String timeStr;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        if (t instanceof Todo) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            classChar \u003d \"T\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            classChar \u003d \"E\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            classChar \u003d \"D\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else if (t instanceof AfterTask) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            classChar \u003d \"A\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            classChar \u003d \" \";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        if (t instanceof Event) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            timeStr \u003d \"/\" + dateParser.format("
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                ((Event)t).getAt()"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            timeStr \u003d \"/\" + dateParser.format("
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                ((Deadline)t).getBy()"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else if (t instanceof AfterTask) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            timeStr \u003d \"/\" + dateParser.format("
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                ((AfterTask)t).getAfter()"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            );"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            timeStr \u003d \"\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return classChar + doneChar + t.getDescription() + timeStr;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 180
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "// @@author CS2103/T Software Engineering AY1920S1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// Referenced from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// with minor modifications "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Superclass from which all list items inherit."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Constructs a Task with a description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param description A String representation of this Task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Gets the status icon of this Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return A String containing the status icon of this Task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return (isDone ? \"O\" : \" \"); "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns a String representation of this Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return A String representation of this Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return \"[\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + getStatusIcon()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \"] \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns the description of this Task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return Description of this Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 57,
      "-": 1
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class to represent a list of Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Constructs a TaskList with the given size."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param size Size of the TaskList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public TaskList(int size) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(size);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Search the TaskList for all Tasks which have description containing the search string."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param searchStr Search term"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return A TaskList of all Tasks whose descriptions have the search term as a substring"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public TaskList search(String searchStr) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        TaskList newList \u003d new TaskList(super.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        for (int i \u003d 0; i \u003c super.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Task current \u003d super.get(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            if (current"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                .getDescription()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                .toLowerCase()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                .contains("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                    searchStr.toLowerCase()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                )"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            ) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                newList.add(current);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return newList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 44
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "// Adapted from https://nus-cs2103-ay1920s1.github.io/website/schedule/week2/project.html "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class representation of a Todo in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Constructs a Todo with a description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param description A string description of this Todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Returns a String representation of this Todo"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return A string representation of this Todo"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 25
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " * Class to handle interfacing with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    // Strings that Duke will output"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_LONG_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_GREETING \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_BYE \u003d \"Bye. Hope to see you again soon!\\nThis program will exit in one second.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_HEADER_LIST \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_HEADER_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_HEADER_SEARCH \u003d \"Here are the tasks matching the following query: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private static final String PRINTED_INDEX_OUT_OF_BOUNDS_EXCEPTION \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        \"You have entered an invalid index. Please try again.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Prints a goodbye message to the user, and closes off the input Scanner."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String printGoodbye() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        input.close();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return printWithLongLines(PRINTED_BYE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Prints a greeting to the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String printGreeting() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return printWithLongLines(PRINTED_GREETING);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Reads the next line of input from the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @return The next line of input from the user"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String nextLine() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Acknowledges the user\u0027s deletion of a Task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param deletedTask The Task that was deleted"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param listSize The new size of the TaskList"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String ackDeletion(Task deletedTask, int listSize) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert listSize \u003e\u003d 0 : \"ackDeletion was passed a negative listSize\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return printWithLongLines("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + deletedTask"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \"\\nNow you have \" "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + listSize"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \" tasks in the list.\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Acknowledges the user\u0027s completion of a Task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param doneTask The Task that was done"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String ackDone(Task doneTask) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return printWithLongLines("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            PRINTED_HEADER_DONE"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + doneTask"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Acknowledge the addition of a Task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param newTask The Task that was newly added"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param listSize The new size of the TaskList"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String ackAddition(Task newTask, int listSize) {        "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        assert listSize \u003e\u003d 0 : \"ackAddition was passed a negative listSize\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return printWithLongLines("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + newTask"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \"\\nNow you have \" "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + listSize"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \" tasks in the list.\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Prints the provided TaskList to the user."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param taskList The TaskList to be printed"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String printList(TaskList taskList) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return printListWithPreamble(taskList, PRINTED_HEADER_LIST);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String displaySearchResults(TaskList taskList, String query) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return printListWithPreamble(taskList, PRINTED_HEADER_SEARCH + query + \"\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Advises the user of the required date format."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param format The expected date format"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String adviseDateFormat(String format) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return printWithLongLines(\"Required date format: \" + format);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Displays an Exception\u0027s message to the user."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * @param e The Exception to be displayed"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String printException(Exception e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return printWithLongLines(e.getMessage());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     * Displays an explanatory note to the user that explains an IndexOutOfBoundsException."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public String printIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return printWithLongLines(PRINTED_INDEX_OUT_OF_BOUNDS_EXCEPTION);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String printWithLongLines(String stringToPrint) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        // The commented-out code is for printing the long horizontal lines above and below each message."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        // I chose not to remove this code in case I need it in future."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String outValue \u003d ("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            stringToPrint"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        );"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        System.out.println(outValue);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return outValue;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    private String printListWithPreamble(TaskList taskList, String preamble) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        String wholeList \u003d preamble + \"\\n\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            wholeList +\u003d String.valueOf(i + 1)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                + \".\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                + taskList.get(i);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            if (i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "                wholeList +\u003d \"\\n\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        return printWithLongLines(wholeList);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 160
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "      \u003cHBox alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "         \u003cVBox\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textAlignment\u003d\"center\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "         \u003c/VBox\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter command here\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void getBy_valid_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Date d1 \u003d new SimpleDateFormat(\"ddMMyy\").parse(\"070417\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Deadline dl1 \u003d new Deadline(\"Finish assignment\", d1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            assertEquals(dl1.getBy(), d1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            fail(e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 21
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    public void getBy_valid_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Date d1 \u003d new SimpleDateFormat(\"ddMMyy\").parse(\"070417\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            Event ev1 \u003d new Event(\"Project meeting\", d1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            assertEquals(ev1.getAt(), d1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            fail(e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeowWB": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "event project meeting /at tomorrow 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "deadline return book /by sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "bye"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LeowWB": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "        echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "            )"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeowWB"
        },
        "content": "    FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeowWB"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LeowWB": 22
    }
  }
]
