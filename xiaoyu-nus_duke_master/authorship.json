[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "xiaoyu-nus": 24
    }
  },
  {
    "path": "runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 21
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.MyPaths;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.MainWindow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            MainWindow mw \u003d fxmlLoader.getController();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            duke \u003d new Duke(MyPaths.TASK_LIST, mw);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            mw.setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 35
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.DukeIoException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Sheet sheet;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private MainWindow mw;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Duke(String pathToFile, MainWindow mw) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.mw \u003d mw;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.ui \u003d new Ui(mw);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        storage \u003d new Storage(pathToFile);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            sheet \u003d new Sheet(storage.load());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (DukeIoException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void start(String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            assert mw !\u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            String fullCommand \u003d mw.getInput();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            if (c.isExit()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                // exit"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            c.execute(sheet, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "xiaoyu-nus": 42
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                DialogBox.getDukeDialog( \"Hello! I\u0027m Nezuko \u003e\u003c\\n\" + \"What can I do for you?\\n\" ,dukeImage));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return this.userInput.getText();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                DialogBox.getUserDialog(input, userImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        duke.start(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void displayMsg(String response) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " }"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 61
    }
  },
  {
    "path": "src/main/java/duke/MyPaths.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Wraps paths to files."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class MyPaths {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /** Path to task list. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static final String TASK_LIST \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 10
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Parent class of various allowed commands in Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs a Command object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param command String of user input without the command head."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Instructs Sheet to execute the commend, Storage to update the file, and Ui to print message, if necessary."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param sh Sheet object to carry out the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param ui Ui object to print the message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param stor Storage object to update the change to file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @throws DukeException If error occurs when accessing the file by Storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public abstract void execute(Sheet sh, Ui ui, Storage stor) throws DukeException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Checks whether the command is an exit command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return True if the command is an exit command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * ToString method that returns the String representation of the object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return String representation of the Command object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return type + command;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 53
    }
  },
  {
    "path": "src/main/java/duke/command/CommandClear.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a command from user input String \"clear\"."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class CommandClear extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public CommandClear(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super.type \u003d \"Clear: \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void execute(Sheet sh, Ui ui, Storage stor) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showClearList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        sh.clearList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        stor.save(sh.getList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 24
    }
  },
  {
    "path": "src/main/java/duke/command/CommandDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.date.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a command from user input String \"deadline\"."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class CommandDeadline extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public CommandDeadline(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super.type \u003d \"Deadline: \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void execute(Sheet sh, Ui ui, Storage stor) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String[] commands \u003d command.split(\"/by\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        if (this.command.isBlank() || command.indexOf(\"/\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new MissingDescriptionException("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    \"\u003e \u003c Oh! Did you forget to add the task?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new MissingDescriptionException("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    \"\u003e \u003c OOPS!! Did you forget to add the deadline?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            assert commands.length \u003e 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            String description \u003d commands[0].trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            String deadline \u003d commands[1].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Task dlTask \u003d new Deadline(description, DateUtil.toTime(deadline));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            sh.add(dlTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            ui.showAdd(dlTask.toString().trim(), sh.getNumOfTask());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            stor.save(sh.getList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"Deadline: \" + command;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 46
    }
  },
  {
    "path": "src/main/java/duke/command/CommandDelete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.IllegalTaskIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.TaskNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a command from user input String \"delete\"."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class CommandDelete extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public CommandDelete(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super.type \u003d \"Delete: \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void execute(Sheet sh, Ui ui, Storage stor) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            if (index \u003e sh.getNumOfTask()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                if (sh.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    throw new TaskNotFoundException(\"\u003e \u003c Oops! The list is empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    throw new TaskNotFoundException(\"\u003e \u003c Oops! The list contains only \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            + sh.getNumOfTask()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            + (sh.getNumOfTask() \u003d\u003d 1 ? \" task.\" : \" tasks.\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            if (index \u003c 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                throw new TaskNotFoundException(\"\u003e \u003c Oops! Do we have non-positive tasks?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Task removed \u003d sh.delete(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            ui.showRemove(removed.toString().trim(), sh.getNumOfTask());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            stor.save(sh.getList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new IllegalTaskIndexException("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    \"\u003e \u003c Oops! Nezuko cannot recognise that task index. :-(\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"Delete: \" + command;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 50
    }
  },
  {
    "path": "src/main/java/duke/command/CommandDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.IllegalTaskIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.TaskNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a command from user input String \"done\"."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class CommandDone extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public CommandDone(String cmd) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(cmd);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super.type \u003d \"Done: \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void execute(Sheet sh, Ui ui, Storage stor) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            int index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            if (index \u003e sh.getNumOfTask()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                if (sh.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    throw new TaskNotFoundException(\"\u003e \u003c Oops! The list is empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    throw new TaskNotFoundException(\"\u003e \u003c Oops! The list contains only \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            + sh.getNumOfTask()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            + (sh.getNumOfTask() \u003d\u003d 1 ? \" task.\" : \" tasks.\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            if (index \u003c 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                throw new TaskNotFoundException(\"\u003e \u003c Oops! Do we have non-positive tasks?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Task doneTask \u003d sh.markAsDone(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            ui.showDone(doneTask.toString().trim());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            stor.save(sh.getList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new IllegalTaskIndexException("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    \"\u003e \u003c Oops! Nezuko cannot recognise that task index.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"Done: \" + command;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 50
    }
  },
  {
    "path": "src/main/java/duke/command/CommandEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.date.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a command from user input String \"event\"."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class CommandEvent extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public CommandEvent(String cmd) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(cmd);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super.type \u003d \"Event: \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void execute(Sheet sh, Ui ui, Storage stor) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String[] commands \u003d command.split(\"(/from)|(to)\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        if (this.command.isBlank() || command.indexOf(\"/\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new MissingDescriptionException("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    \"\u003e \u003c Oh! Did you forget to add the task?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } else if (commands.length \u003c 3) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new MissingDescriptionException("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    \"\u003e \u003c OOPS!!! The event span is incomplete.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            assert commands.length \u003e 3;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            String description \u003d commands[0].trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            String start \u003d commands[1].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            String end \u003d commands[2].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Task evTask \u003d new Event(description, DateUtil.toTime(start), DateUtil.toTime(end));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            sh.add(evTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            ui.showAdd(evTask.toString().trim(), sh.getNumOfTask());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            stor.save(sh.getList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"Event: \" + command;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 47
    }
  },
  {
    "path": "src/main/java/duke/command/CommandExit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a command from user input String \"bye\"."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class CommandExit extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public CommandExit(String cmd) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(cmd);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super.type \u003d \"Exit: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void execute(Sheet sh, Ui ui, Storage stor) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"Exit: \" + command;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 31
    }
  },
  {
    "path": "src/main/java/duke/command/CommandFind.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a command from user input String \"find\"."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class CommandFind extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public CommandFind(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super.type \u003d \"Find: \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void execute(Sheet sh, Ui ui, Storage stor) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        if (this.command.isBlank()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new MissingDescriptionException("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    \"\u003e \u003c Sorry, I did not catch your search keyword.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String found \u003d sh.find(this.command.trim());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showSearch(found);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"Find: \" + command;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 33
    }
  },
  {
    "path": "src/main/java/duke/command/CommandHi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a command from user input String \"hi\"."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class CommandHi extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public CommandHi(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super.type \u003d \"Hi: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void execute(Sheet sh, Ui ui, Storage stor) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.sayHi();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"Hi: \" + command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 26
    }
  },
  {
    "path": "src/main/java/duke/command/CommandList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a command from user input String \"list\"."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class CommandList extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public CommandList(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super.type \u003d \"List: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void execute(Sheet sh, Ui ui, Storage stor) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String list \u003d sh.showList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showList(list);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"List: \" + command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 27
    }
  },
  {
    "path": "src/main/java/duke/command/CommandTodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a command from user input String \"todo\"."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class CommandTodo extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public CommandTodo(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super.type \u003d \"Todo: \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void execute(Sheet sh, Ui ui, Storage stor) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        if (this.command.isBlank()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new MissingDescriptionException("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    \"\u003e \u003c Sorry! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Task todoTask \u003d new Todo(command.trim());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        sh.add(todoTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        ui.showAdd(todoTask.toString().trim(), sh.getNumOfTask());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        stor.save(sh.getList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"Todo: \" + command;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 37
    }
  },
  {
    "path": "src/main/java/duke/command/IllegalCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.IllegalCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a command from user input String is not recognized as a valid command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class IllegalCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public IllegalCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super.type \u003d \"Illegal: \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void execute(Sheet sh, Ui ui, Storage stor) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        throw new IllegalCommandException(\"\u003e \u003c Sorry, Nezuko doesn\u0027t know what that means.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"Illegal: \" + command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 28
    }
  },
  {
    "path": "src/main/java/duke/date/DateUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.IllegalTimeFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Contains utility functions for handling input and output time String."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class DateUtil {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Creates a LocalDateTime object form its String representation."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param s String representation of the LocalDateTime object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return LocalDateTime object represented by the input String."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @throws IllegalTimeFormatException If the input String is not convertible to a LocalDateTime object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static LocalDateTime toTime(String s) throws IllegalTimeFormatException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String[] dateTime \u003d s.trim().split(\" \"); // split date and time"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String[] date \u003d dateTime[0].split(\"/\"); // split date into day, month and year"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String[] temp \u003d new String[5];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            if (i \u003c date.length) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                // store date information into a String array [dd, MM, yy, hh, mm] that toTime method understands"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                temp[i] \u003d date[i];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                // use 00 to replace missing date and time information"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                temp[i] \u003d \"00\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        date \u003d temp;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        if (date[0].length() \u003e 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            // user only inputs time, without date, hence date[0] equals dateTime[0] equals s, the time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            time \u003d dateTime[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            date[0] \u003d \"00\"; // overwrite wrong dd data in date[0]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            date[3] \u003d time.substring(0, 2); // set hh"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            date[4] \u003d time.substring(2); // set mm"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } else if (dateTime.length \u003e 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            // user enters both date and time."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            time \u003d dateTime[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            if (time.length() \u003c 3) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                // time is not entered in the format of hhmm."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                throw new IllegalTimeFormatException(\"\u003e \u003c Sorry, I couldn\u0027t recognise the time.\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                        + \"     Enter time in the format of \u0027hhmm\u0027 :D\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            date[3] \u003d time.substring(0, 2); // set hh"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            date[4] \u003d time.substring(2); // set mm"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return toLocalDateTime(date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private static LocalDateTime toLocalDateTime(String[] times) throws IllegalTimeFormatException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            LocalDateTime current \u003d LocalDateTime.now(); // default date is the current date"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            int year \u003d times[2].equals(\"00\") ? current.getYear() : Integer.parseInt(times[2]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            int month \u003d times[1].equals(\"00\") ? current.getMonth().getValue() : Integer.parseInt(times[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            int day \u003d times[0].equals(\"00\") ? current.getDayOfMonth() : Integer.parseInt(times[0]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            int hour \u003d Integer.parseInt(times[3]); // default time is 1200 AM"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            int minute \u003d Integer.parseInt(times[4]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return LocalDateTime.of(year, month, day, hour, minute);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new IllegalTimeFormatException("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    \"\u003e \u003c Sorry, I couldn\u0027t recognise the time.\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            + \"     Try enter in the format of \u0027dd/MM/yy hhmm\u0027 :D\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new IllegalTimeFormatException("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                    \"\u003e \u003c Sorry, only numbers can be recognised for time.\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                            + \"     Try enter in the format of \u0027dd/MM/yy hhmm\u0027 :D\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Output the String representation of the date and time stored in the LocalDateTime object in desired format."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param dt LocalDateTime object to be printed."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return Formatted String representation of the date and time stored in the LocalDateTime object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static String printTime(LocalDateTime dt) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        DateTimeFormatter customFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy_@_hh:mma\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return dt.format(customFormatter);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 86
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Customised exceptions in the app."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs a DukeException object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param msg Message of the exception."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.message \u003d msg;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String getMessege() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 23
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeFileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulate the exception thrown when errors occurs when the list file is not found."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class DukeFileNotFoundException extends DukeIoException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public DukeFileNotFoundException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeIoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulate the exception thrown when errors occurs when accessing the list file."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class DukeIoException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public DukeIoException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulate the exception thrown when user input is not recognised as a valid command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class IllegalCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public IllegalCommandException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/IllegalTaskIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulate the exception thrown when task index entered is not an integer."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class IllegalTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public IllegalTaskIndexException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/IllegalTimeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulate the exception thrown when user time input is not recognised."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class IllegalTimeFormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs the IllegalTimeFormatException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param msg Message of the exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public IllegalTimeFormatException(String msg) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulate the exception thrown when task description is not found."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class MissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs the TaskNotFoundException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param msg Message of the exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public MissingDescriptionException(String msg) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/TaskNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulate the exception thrown when user\u0027s query index for task exceeds the number of tasks on the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class TaskNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs the TaskNotFoundException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param msg Message of the exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public TaskNotFoundException(String msg) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 16
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Parses the user input String into executable commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param cmd User input String."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return new Command object encapsulating the user\u0027s command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static Command parse(String cmd) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String[] cmds \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String command \u003d cmds[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String detail \u003d concatCommand(cmds);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return new CommandExit(detail);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return new CommandList(detail);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return new CommandDelete(detail);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return new CommandDone(detail);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return new CommandTodo(detail);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return new CommandDeadline(detail);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return new CommandEvent(detail);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return new CommandFind(detail);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \"hi\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return new CommandHi(detail);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return new CommandClear(detail);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return new IllegalCommand(detail);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private static String concatCommand(String[] strs) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        StringBuffer output \u003d new StringBuffer(\"\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        for (int i \u003d 1; i \u003c strs.length; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            output.append(strs[i] + \" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return output.toString().trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 53
    }
  },
  {
    "path": "src/main/java/duke/sheet/Sheet.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.sheet;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a sheet for the list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Includes operations to add/delete tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Sheet {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private int numOfTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Construct a task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param tasks List of tasks contained the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Sheet(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        numOfTask \u003d tasks.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param task Task to be added to the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        numOfTask++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param index Serial index of the task in list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assert index \u003c\u003d tasks.size();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Task removed \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        numOfTask--;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return removed;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Checks whether the task list is empty."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return True if the task list is empty."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return this.tasks.size() \u003d\u003d 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param index Serial index of the task in list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task markAsDone(int index) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assert index \u003c\u003d tasks.size();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Task doneTask \u003d tasks.get(index - 1).finish();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        tasks.set(index - 1, doneTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Outputs the number of tasks in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return int Number of tasks in the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public int getNumOfTask() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return numOfTask;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Outputs the task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String showList() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        for (int i \u003d 0; i \u003c numOfTask; i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            sb.append((\" \" + (i + 1) +  \". \" + tasks.get(i).toString().trim() + \"\\n\"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Remove all tasks from the task list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void clearList() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        numOfTask \u003d 0;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Searches for tasks containing the keyword."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param keyword Keyword for searching."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String find(String keyword) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                sb.append((\" \" + count + \". \" + tasks.get(count).toString().trim() + \"\\n\"));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            sb.append(\"\u003e \u003c Sorry, nothing has been found.\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * ToString method of the sheet object."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return String representation of the sheet of task list."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        for (int i \u003d 0; i \u003c numOfTask; i++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            output +\u003d (i + 1) + \". \" + tasks.get(i).toString();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return output.trim();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 138
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.exception.DukeIoException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private String pathToFile;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private File tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs a Storage object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param pathToFile Path to the file accessed by the Storage object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Storage(String pathToFile) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.pathToFile \u003d pathToFile;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Loads the task list as a List of Task from the local file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return List of Task objects."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @throws DukeIoException If errors occurs when accessing the file that contains the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeIoException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            File f \u003d new File(pathToFile);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "//            f.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            this.tasks \u003d f;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Path p \u003d Paths.get(pathToFile);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            List\u003cString\u003e lst \u003d Files.readAllLines(p);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            for (String t : lst) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                taskList.add(Task.toTask(t));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new DukeIoException(\"Sorry, something went wrong. \u003e \u003c\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Outputs a List of Task as a local copy of txt file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param lst Task list to be saved."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @throws DukeIoException If errors occurs when accessing the file that contains the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void save(List\u003cTask\u003e lst) throws DukeIoException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            this.tasks \u003d new File(pathToFile);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "//            if (this.tasks.exists()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "//                this.tasks.delete();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "//            this.tasks.createNewFile();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            FileWriter fw \u003d new FileWriter(tasks, true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Path p \u003d Paths.get(pathToFile);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            for (Task tsk : lst) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                fw.write(tsk.toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            throw new DukeIoException(\"Sorry, something went wrong. \u003e \u003c\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 80
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.date.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * A task that takes in one LocalDateTime as the deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected LocalDateTime deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs an unfinished Deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param deadline Date and time by which the task is due."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Deadline(String description, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs a Deadline object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param description Descriptio of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param deadline Date and time by which the task is due."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param isDone True if the task is finished."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Deadline(String description, LocalDateTime deadline, boolean isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return New finished task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Deadline finish() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new Deadline(this.getDescription(), this.deadline,true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * ToString method for printing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return String representation of the deadline object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + this.getDescription()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                + \" (by: \" + DateUtil.printTime(deadline) + \" )\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.date.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * A Task object that has two LocalDateTime inputs."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * The first LocalDateTime represents the date and time when the event starts."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * The second LocalDateTime represents the date and time when the event ends."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected LocalDateTime startTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    protected LocalDateTime endTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs an unfinished Event object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param start Date and time when the event starts."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param end Date and time when the event ends."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Event(String description, LocalDateTime start, LocalDateTime end) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.startTime \u003d start;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.endTime \u003d end;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs an Event object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param start Date and time when the event starts."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param end Date and time when the event ends."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param isDone True if the taks is finished."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Event(String description, LocalDateTime start, LocalDateTime end, boolean isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.startTime \u003d start;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.endTime \u003d end;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return New finished task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Event finish() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new Event(this.getDescription(), startTime, endTime,true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * ToString method for printing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return String representation of the event object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + this.getDescription()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                + \" (from: \" + DateUtil.printTime(startTime)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                + \" , to \" + DateUtil.printTime(endTime) + \" )\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Encapsulates a task object containing task description and task status."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs a unspecified and unfinished Task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * onstructs a unspecified Task object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param isDone True if the task is finished."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task(String description, Boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return New finished task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Task finish() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new Task(this.description, true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Outputs the description of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return Description of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Outputs as a String the status of task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Tick for done; Cross for not done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return String symbol of the status of task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Converts a String to a Task object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param s String to be converted."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return New Task object represented by the String."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public static Task toTask(String s) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy_@_hh:mma\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Boolean isDone \u003d (String.valueOf(s.charAt(4)).equals(\"\\u2713\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        switch (s.charAt(1)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return isDone ? new Todo(s.substring(7)).finish() : new Todo(s.substring(7));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            String description \u003d s.substring(7, s.lastIndexOf(\u0027(\u0027) - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            String[] times \u003d s.substring(s.lastIndexOf(\u0027(\u0027) - 1).split(\" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            LocalDateTime start \u003d LocalDateTime.parse(times[2], formatter);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            LocalDateTime end \u003d LocalDateTime.parse(times[5],formatter);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Event e \u003d new Event(description, start, end);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return isDone ? e.finish() : e;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            String description2 \u003d s.substring(7, s.lastIndexOf(\u0027(\u0027) - 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            String[] deadlines \u003d s.substring(s.lastIndexOf(\u0027(\u0027) - 1).split(\" \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            LocalDateTime dl \u003d LocalDateTime.parse(deadlines[2],formatter);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            Deadline d \u003d new Deadline(description2, dl);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return isDone ? d.finish() : d;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return new Task(s.substring(7));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * ToString method for printing."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return String representation of the Task object."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description + \"\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 104
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * A Task object that contains no date and time information."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs an unfinished Todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Constructs a Todo task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param isDone True if the task is finished."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return New finished task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Todo finish() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return new Todo(getDescription(),true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * ToString method for printing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @return String representation of the deadline object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 47
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.MainWindow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " * Contains responses and interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private static final String INDENT \u003d \"     \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private MainWindow mw;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public Ui(MainWindow mw) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        this.mw \u003d mw;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        mw.displayMsg(\"バイバイ~ Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + \"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void sayHi() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        mw.displayMsg(\"こんにちは! Say Something to me!\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + \"Hi :-D Say Something to me!\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Displays a finished task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param doneTask Task done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showDone(String doneTask) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        mw.displayMsg(\"Nice! I\u0027ve marked this task as done: \\n\" + \" \" + doneTask + \"\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + \"Nice! I\u0027ve marked this task as done: \\n\" + INDENT  + \" \" + doneTask + \"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Displays a newly added task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param task Task added."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showAdd(String task, int num) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        mw.displayMsg(\"Got it. I\u0027ve added this task: \\n\" + \" \" + task + \"\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        + showCount(num));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + \"Got it. I\u0027ve added this task: \\n\" + INDENT + \" \" + task + \"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Displays a header for the task list contends."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showList(String str) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        mw.displayMsg(\"Here are the tasks in your list:\\n\" + str);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + \"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Displays a header for the task search."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showSearch(String str) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        mw.displayMsg(\"Here are the matching tasks in your list:\\n\" + str);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + \"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Displays a task removed from the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param removed Task removed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showRemove(String removed, int num) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        mw.displayMsg(\"Noted. I\u0027ve removed this task:\\n\" + \" \" + removed + \"\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "                + showCount(num));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + \"Noted. I\u0027ve removed this task:\\n\" + INDENT + \" \" + removed + \"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Displays a no result found message for search."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showNotFound() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        mw.displayMsg(\"Hummm, nothing has been found.\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + \"Hummm, nothing has been found.\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        mw.displayMsg(message + \"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + message + \"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Displays and error message when the file is unable to be loaded."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        mw.displayMsg(\"Oops, something went wrong with Nezuko \u003e\u003c\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + \"Oops, something went wrong\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    private String showCount(int numOfTask) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        if (numOfTask \u003c 2) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return \"Now you have \" + numOfTask + \" task in the list.\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            return \"Now you have \" + numOfTask + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Displays a header for the clear command."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showClearList() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        mw.displayMsg(\"Great! I\u0027ve removed all your tasks!\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + \"Great! I\u0027ve removed all your tasks!\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * Displays the task."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param index Index of the task in the task list."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     * @param task Task to be displayed."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void showTask(int index, String task) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        mw.displayMsg(\" \" + index + \". \" + task + \"\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        System.out.printf(INDENT + \" \" + index + \". \" + task + \"\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 124
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            \u003cInsets right\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 22
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 23
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void parseTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Command cmd1 \u003d new CommandHi(\"\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Command cmd2 \u003d Parser.parse(\"hi\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assertEquals(cmd1.toString(), cmd2.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Command cmd3 \u003d new CommandDelete(\"4\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Command cmd4 \u003d Parser.parse(\"delete 4\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assertEquals(cmd3.toString(), cmd4.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Command cmd5 \u003d new CommandFind(\"fish\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Command cmd6 \u003d Parser.parse(\"find fish\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assertEquals(cmd5.toString(), cmd6.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Command cmd7 \u003d new CommandTodo(\"learn CS2103\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Command cmd8 \u003d Parser.parse(\"todo learn CS2103\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assertEquals(cmd7.toString(), cmd8.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Command cmd9 \u003d new IllegalCommand(\"to learn CS2103\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Command cmd10 \u003d Parser.parse(\"how to learn CS2103\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assertEquals(cmd9.toString(), cmd10.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 30
    }
  },
  {
    "path": "src/test/java/SheetTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.MainWindow;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.MyPaths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.sheet.Sheet;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class SheetTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void addTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        List\u003cTask\u003e lst1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        List\u003cTask\u003e lst2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Task t1 \u003d new Todo(\"task1\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Task t2 \u003d new Todo(\"task2\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        lst1.add(t1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        lst2.add(t1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        lst2.add(t2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Sheet sh1 \u003d new Sheet(lst1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Sheet sh2 \u003d new Sheet(lst2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        sh1.add(t2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assertEquals(sh2.toString(), sh1.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void deleteTest() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        List\u003cTask\u003e lst1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        List\u003cTask\u003e lst2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Task t1 \u003d new Todo(\"task1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Task t2 \u003d new Todo(\"task2\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        lst1.add(t1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Sheet sh1 \u003d new Sheet(lst1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Sheet sh2 \u003d new Sheet(lst2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        sh1.delete(1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assertEquals(sh2.toString(), sh1.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void markAsDoneTest() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        List\u003cTask\u003e lst1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        List\u003cTask\u003e lst2 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Task t1 \u003d new Todo(\"task1\").finish();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Task t2 \u003d new Todo(\"task2\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        lst1.add(t1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        lst2.add(t1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Sheet sh1 \u003d new Sheet(lst1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Sheet sh2 \u003d new Sheet(lst2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        sh2.markAsDone(1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assertEquals(sh2.toString(), sh1.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void isEmptyTest() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        List\u003cTask\u003e lst1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Sheet sh1 \u003d new Sheet(lst1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        String isEmpty \u003d \"false\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        if (sh1.isEmpty()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "            isEmpty \u003d \"true\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assertEquals(\"true\", isEmpty);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 74
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    public void toTaskTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        LocalDateTime t1 \u003d LocalDateTime.of(1990,12,12,5,10);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        Event event1 \u003d new Event(\"event\", t1, t1).finish();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "        assertEquals(event1.toString(), Task.toTask(event1.toString()).toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xiaoyu-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xiaoyu-nus": 16
    }
  }
]
