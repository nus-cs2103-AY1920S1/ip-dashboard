[
  {
    "path": "src/main/java/duke/init/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "package duke.init;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " * Implements a deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " * @author lyskevin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Constructs a deadline task with the specified description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @param description The specified description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Returns the string representation of this deadline task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @return The string representation of this deadline task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Lim": 29
    }
  },
  {
    "path": "src/main/java/duke/init/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "package duke.init;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " * Implements the Duke chatbot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " * @author Lim Yong Shen, Kevin"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static final int BORDER_LENGTH \u003d 80;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static final ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Runs the Duke chatbot."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @param args Command line arguments (unused)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        printHorizontalBorder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        printHorizontalBorder();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        String command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            printHorizontalBorder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            process(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            printHorizontalBorder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        printHorizontalBorder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        sayBye();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        printHorizontalBorder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Greets the user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        String logo \u003d \"\\t ____        _        \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                + \"\\t|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                + \"\\t| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                + \"\\t| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        System.out.println(\"\\tHello from\\n\" + logo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Processes the specified input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static void process(String input) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        String command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                listStoredTasks();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                setTaskAsDone(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                deleteStoredTask(input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                storeTodo(input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                storeDeadline(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                storeEvent(input);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                System.out.println(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                        + \" know what that means :-(\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Lists stored text."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static void listStoredTasks() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        if (storedTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\tYou have 0 tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            for (int i \u003d 0; i \u003c storedTasks.size(); i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                System.out.format(\"\\t%d.%s\\n\", i + 1, storedTasks.get(i));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Deletes the stored task that corresponds to the specified input."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static void deleteStoredTask(String input) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            String[] inputWords \u003d input.split(\" \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            if (inputWords.length \u003e 2) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(inputWords[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            Task task \u003d storedTasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\tNoted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.format(\"\\tNow you have %d task(s) in the list.\\n\","
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                    storedTasks.size());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        } catch (NumberFormatException"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                | ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                | DukeException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\tdelete command format: delete \u003cnumber\u003e\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\tPlease enter a valid task number for the delete command.\\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                    + \"\\tThe delete command will not work if there are 0 stored tasks.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Stores the specified task."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @param task The specified task."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static void storeTask(Task task) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        storedTasks.add(task);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        System.out.format(\"\\tNow you have %d task(s) in the list.\\n\","
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                storedTasks.size());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Stores a todo task based on the specified input."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static void storeTodo(String input) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            String description \u003d input.substring(5);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            storeTask(new Todo(description));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\ttodo command format: todo \u003cdescription\u003e\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Stores a deadline task based on the specified input."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static void storeDeadline(String input) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            String description \u003d input.substring(9);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            String[] taskInformation \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            storeTask(new Deadline(taskInformation[0], taskInformation[1]));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    } catch (ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\tdeadline command format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Stores an event task based on the specified input."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static void storeEvent(String input) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            String description \u003d input.substring(6);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            String[] taskInformation \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            storeTask(new Event(taskInformation[0], taskInformation[1]));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\tevent command format: event \u003cdescription\u003e /at \u003cdateAndTime\u003e\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Says bye to the user."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static void sayBye() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Sets a task as done based on the specified input."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @param input The specified input."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static void setTaskAsDone(String input) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            String[] inputWords \u003d input.split(\" \");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            if (inputWords.length \u003e 2) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(inputWords[1]);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            Task task \u003d storedTasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            task.setAsDone();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\t\" + task);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        } catch (NumberFormatException"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                | ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                | DukeException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\tdone command format: done \u003cnumber\u003e\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            System.out.println(\"\\tPlease enter a valid task number for the done command.\\n\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "                    + \"\\tThe done command will not work if there are 0 stored tasks.\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Prints a horizontal border."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private static void printHorizontalBorder() {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        StringBuilder border \u003d new StringBuilder(\"\\t\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        for (int i \u003d 0; i \u003c BORDER_LENGTH; i++) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "            border.append(\u0027_\u0027);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Lim": 224
    }
  },
  {
    "path": "src/main/java/duke/init/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "package duke.init;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " * Implements a custom exception for handling Duke-specific exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " * @author lyskevin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Lim": 11
    }
  },
  {
    "path": "src/main/java/duke/init/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "package duke.init;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " * Implements an event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " * @author lyskevin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    private String dateAndTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Constructs an event task with the specified description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @param description The specified description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    public Event(String description, String dateAndTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Returns the string representation of this event task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @return The string representation of this event task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), dateAndTime);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Kevin Lim": 30
    }
  },
  {
    "path": "src/main/java/duke/init/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "package duke.init;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " * Implements a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " * @author lyskevin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Constructs a task with the specified description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @param description The specified description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Returns true if this task is done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @return true if this task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Sets this task as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Returns the string representation of this task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @return The string representation of this task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        String statusIcon \u003d isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        return String.format(\"[%s] %s\", statusIcon, description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Lim": 46
    }
  },
  {
    "path": "src/main/java/duke/init/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "package duke.init;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " * Implements a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " * @author lyskevin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Constructs a todo task with the specified description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @param description The specified description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * Returns the string representation of this todo task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     * @return The string representation of this todo task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Kevin Lim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Kevin Lim": 26
    }
  }
]
