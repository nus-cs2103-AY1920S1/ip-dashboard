[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 5,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] poop"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][+] wipe ass (by: 2pm)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][+] read book (by: 02 Dec 2018, 18:00 PM)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] charge phone"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][+] unplug phone (by: 01 Sep 2018, 21:00 PM)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[E][ ] sell pants (at: 3pm)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] sell bottle"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][+] eat lunch (by: 02 Dec 2019, 18:00 PM)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[E][ ] poop lunch (at: 3pm)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] sell lunch"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[D][ ] clear lunch (by: 04 Jan 2020, 19:00 PM)"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 11
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "[T][ ] fly"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represents a task of type Deadline which contains a date and time"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * of the deadline."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a Deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param description of this task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param deadline of this task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return ( \"[D]\"+ super.toString() + \"(by:\" + this.deadline + \")\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represents a Duke Chatbot that is able to keep track of tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Create a new Duke Chatbot with a filepath fot it to access."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param filePath of the file for Duke to save to."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            taskList \u003d new TaskList(storage.loadPreviousTasks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Main method that starts everything."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param args String array"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Runs the Chatbot."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"Here is the list of tasks from where you\u0027ve left off: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        ui.showList(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        // STOPPED HERE"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        while (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            // When command is \u0027list\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                taskList.printAllTasks();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                String[] sentence \u003d command.split(\" \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                // When command is \u0027done\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    if (sentence[0].equals(\"done\")) { // Check if the first word is done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        int completedTaskIndex \u003d Integer.parseInt(sentence[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        taskList.markAsDone(completedTaskIndex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        // If it wasn\u0027t marked before, this would print out a notification saying it is now marked."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        // Save new list to storage"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                            storage.saveToFile(taskList.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        } catch(IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                            ui.showLoadingError();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        throw new UnknownTaskTypeException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    ui.promptDoneCompletion();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    ui.promptList();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    ui.promptDoneFormat();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                } catch (UnknownTaskTypeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } else if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                String[] sentence \u003d command.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                // When command is \u0027delete\u0027"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    if (sentence[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        int taskIndex \u003d Integer.parseInt(sentence[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        Task deletedTask \u003d taskList.deleteTask((taskIndex - 1));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        ui.showDeletedTask(deletedTask, taskList.numTasks);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        // Save new list to storage"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                            storage.saveToFile(taskList.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        } catch (IOException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                            ui.showLoadingError();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        throw new UnknownTaskTypeException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    ui.promptDeleteCompletion();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    ui.promptList();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    ui.promptDeleteFormat();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                } catch (UnknownTaskTypeException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } else if (command.contains(\"find\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                String[] sentence \u003d command.split(\" \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                String keyword \u003d \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    if (sentence[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        keyword \u003d sentence[1];"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    ui.promptFindKeyword();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                ui.showSearchList(taskList.searchFor(keyword));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                // Generate new task"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    if (!command.isEmpty()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        Task newTask \u003d Parser.generateNewTask(command);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        // Save the new list to storage"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                            storage.saveToFile(taskList.toString());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        } catch(IOException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                            ui.showLoadingError();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        ui.showAddTask(newTask, taskList.numTasks);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                } catch (DukeException err) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    ui.showErrorMessage(err);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        // When command is bye"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        ui.showFarewell();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 159,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represents all the Exceptions related to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new DukeException with an error message and the"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * root error given by java."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param errorMessage logic behind the error that describes the issue with Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param rootError root error given by java."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public DukeException(String errorMessage, Throwable rootError) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(errorMessage, rootError);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new DukeException with an error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param errorMessage logic behind the error that describes the issue with Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 23
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Error shown by Duke when description of a task is empty."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates an error indicating that description of task is empty."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param taskType the specific type of the task given."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param rootError the error given by Java."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public EmptyDescriptionException(String taskType, Throwable rootError) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(\"OOPS!!! The description of a \" + taskType + \" cannot be empty.\", rootError);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represents a Task of the specific type Event."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Event has a time period, specified with /at (Eg \"event read book /at 3pm-5pm)\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates an Event with the given description and duration."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param duration of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Event(String description, String duration) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return (\"[E]\"+ super.toString() + \"(at:\" + this.duration + \")\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 22
    }
  },
  {
    "path": "src/main/java/MissingDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Indicates missing date and time of the task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class MissingDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates an exception with the given error message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param errorMessage that describes the issue with Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public MissingDateTimeException(String errorMessage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 12
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Reads and processes the commands given to Duke and returns the appropriate action."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Generates either todo, deadline or event tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Generates the appropriate task that matches the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param task command to create the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return Task that is generated."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public static Task generateNewTask(String task) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String type \u003d task.substring(0, task.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String taskDescription \u003d task.substring(task.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            Task newTask \u003d new Task(\"dummy\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            // Create the appropriate Task type"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                newTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    String[] sentence \u003d taskDescription.split(\"/by\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    String description \u003d sentence[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    String deadline \u003d formatDateTime(sentence[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    newTask \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                throw new MissingDateTimeException(\"DateTime missing.\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        + \"Please set a deadline. (Eg. deadline read book /by Sunday)\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    String[] sentence \u003d taskDescription.split(\"/at\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    String description \u003d sentence[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    String time \u003d sentence[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    System.out.println(time);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                    newTask \u003d new Event(description, time);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                throw new MissingDateTimeException(\"Event time period missing.\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                        + \"Please set a start and end time. (Eg. event dance /at Mon 2-4pm)\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            return newTask;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        } catch (StringIndexOutOfBoundsException rootError) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            // If task type is correct, the error is due to empty description"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            // else the task type is unknown"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            if (task.equals(\"todo\") | task.equals(\"deadline\") | task.equals(\"event\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                throw new EmptyDescriptionException(task, rootError);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                throw new UnknownTaskTypeException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Formats the date time given as a string."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param deadline to be formatted."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return String representing the formatted date time."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private static String formatDateTime(String deadline) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        // Split to individual components"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        deadline \u003d deadline.trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String[] dd \u003d deadline.split(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String[] date \u003d dd[0].split(\"/\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String time \u003d dd[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        int hours \u003d Integer.valueOf(time.substring(0,2));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        int minutes \u003d Integer.valueOf(time.substring(2));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        LocalDateTime actualDateTime \u003d LocalDateTime.of(Integer.valueOf(date[2]), Integer.valueOf(date[1]),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                Integer.valueOf(date[0]), hours, minutes);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        // maybe error here"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        DateTimeFormatter dtf\u003d  DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mm a\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String formatted \u003d \" \" + dtf.format(actualDateTime);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return formatted;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 86
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Handles all input and output related to the file associated with Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new Storage which refers to the file of the given filepath"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param filepath used by Duke to store and modify information."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.file \u003d new File(filepath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Saves the new list to the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param content of the modified list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void saveToFile(String content) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        fw.write(content);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Loads the saved tasks from the file to Duke\u0027s current task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return a list representing the tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public ArrayList\u003cTask\u003e loadPreviousTasks() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        ArrayList\u003cTask\u003e loadList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String str \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                Task task \u003d txtProcessor(str);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                loadList.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            throw new DukeException(\"File cannot be accessed\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return loadList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Processes a line of text from the file referred to by Storage."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param line from the text file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return the Task generated from this line."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Task txtProcessor(String line) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String details \u003d line.substring(0,6);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        char[] detailsArray \u003d details.toCharArray();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String type \u003d \"\" + detailsArray[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String done \u003d \"\" + detailsArray[4];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        boolean isDone \u003d done.equals(\"+\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String desc \u003d line.substring(7);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task newTask \u003d new Task(\"dummy\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            newTask \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String[] dd \u003d desc.split(\"by:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String deadline \u003d dd[1].substring(0, dd[1].length() - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String description \u003d dd[0].substring(0, dd[0].length() - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            newTask \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String[] dd \u003d desc.split(\"at:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String deadline \u003d dd[1].substring(0, dd[1].length() - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            String description \u003d dd[0].substring(0, dd[0].length() - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            newTask \u003d new Event(description, deadline);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            newTask.quietMarkAsDone();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 94
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represent Tasks and its given description."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new Task with the given description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Indicates whether the task is done or not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return true or false"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Mark this task as done and provide notification."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"  \" + this.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Mark this task as done without notification."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void quietMarkAsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Convert done state of this Task to a symbol."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return + if task is completed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return (isDone ? \"+\" : \" \"); //return \"+\" if done \" \" otherwise"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Get the description of this task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return description of this task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return (\"[\" + getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 61
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represent the list of tasks for Duke to keep track of."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public int numTasks \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private ArrayList\u003cTask\u003e allTasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new empty TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        allTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new Tasklist with the given tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param allTasks representing the current tasks saved in the text file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e allTasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.allTasks \u003d allTasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        this.numTasks \u003d allTasks.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Adds a new task to this TaskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param newTask new task to be added."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        numTasks++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        allTasks.add(newTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        //System.out.println(tasks.get(numTasks-1));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Print all the tasks on the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void printAllTasks() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d numTasks; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            System.out.println(i + \".\" + allTasks.get(i-1));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Mark the task of the given index as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param index of the task to be marked."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task completedTask \u003d allTasks.get(index - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        if (!completedTask.isDone()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            completedTask.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Deletes the Task of the give index from the TaskList"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return the deleted task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        Task deletedTask \u003d allTasks.get(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        allTasks.remove(index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        numTasks--;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public TaskList searchFor(String keyword) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        ArrayList\u003cTask\u003e relevant \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        for(Task task : allTasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                relevant.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return new TaskList(relevant);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        for (Task task : allTasks) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "            output \u003d output + task + System.lineSeparator();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 89
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represents a task of type ToDo."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new ToDo task with the given description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return (\"[T]\" + super.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Handles the input and output of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    private Scanner input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new Ui."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Reads the next line of the commands."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @return a String representing the next line of command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String command \u003d input.nextLine().trim(); //trim leading/trailing whitespace"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Prints the welcome message of Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String greetings \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(greetings);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Inform users that the file cannot be loaded."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"File cannot be loaded\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Indicate that the task has been successfully added to the task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param newTask new task to be added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param numTasks current number of tasks in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void showAddTask(Task newTask, int numTasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"  \" + newTask.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"Now you have \" + numTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Print out all the tasks that are currently in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param tasks list of all tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void showList(TaskList tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        tasks.printAllTasks();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Prints the farewell message."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void showFarewell() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        String farewell \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(farewell);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Prints the given error message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void showErrorMessage(Exception e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Indicates that the given task has been successfully deleted."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param deletedTask deleted task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param numTasks number of tasks left in the list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void showDeletedTask(Task deletedTask, int numTasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                + \"  \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                + deletedTask"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "                + String.format(\"\\nNow you have %d tasks in the list.\", numTasks));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Prints the list of Tasks that are relevant"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * @param filteredList of tasks related to the keyword"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void showSearchList(TaskList filteredList) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        filteredList.printAllTasks();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Error with accessing an item not on the list. Prompts for user to check again by calling list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void promptList() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"OOPS!!! That task is not on the list, please check the list again by calling \u0027list\u0027.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Incomplete done command. Prompts for the index of the task to be marked as done."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void promptDoneCompletion() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"Which task on the list have you completed? (Eg \u0027done 2\u0027)\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Incorrect format for done command. Prompts for an integer index."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void promptDoneFormat() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"OOPS!!! Wrong format. Please key in a valid number (Eg \u0027done 2\u0027)\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Incomplete delete command. Prompts for the index of the task to be deleted."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void promptDeleteCompletion() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"Which task on the list would you like to delete? (Eg. \u0027delete 2\u0027)\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Incorrect format for delete command. Prompts for an integer index."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void promptDeleteFormat() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"OOPS!!! Wrong format. Please key in a valid number (Eg \u0027delete 2\u0027)\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public void promptFindKeyword() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        System.out.println(\"Please key in a keyword to search for. (Eg \u0027find book\u0027)\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 134
    }
  },
  {
    "path": "src/main/java/UnknownTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " * Represents an unknown command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "public class UnknownTaskTypeException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     * Creates a new exception that indicates that Duke does not understand the given command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    public UnknownTaskTypeException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 11
    }
  },
  {
    "path": "text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Here is the list of tasks from where you\u0027ve left off: "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "../../../data/duke.txt (No such file or directory)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "file error"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [T][ ] read book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "June 6th"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "6th"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 10
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [T][ ] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [D][ ] return book (by: June 6th)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [E][ ] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [T][ ] borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "1.[T][ ] read book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "2.[D][ ] return book (by: June 6th)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "3.[E][ ] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "4.[T][ ] borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [T][+] read book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "1.[T][+] read book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "2.[D][ ] return book (by: June 6th)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "3.[E][ ] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "4.[T][ ] borrow book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Which task on the list have you completed? (Eg \u0027done 2\u0027)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! Wrong format. Please key in a valid number (Eg \u0027done 2\u0027)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! That task is not on the list, please check the list again by calling \u0027list\u0027."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! The description of a event cannot be empty."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Event time period missing. Please set a start and end time. (Eg. event dance /at Mon 2-4pm)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [E][ ] swim (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! The description of a deadline cannot be empty."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "DateTime missing. Please set a deadline. (Eg. deadline read book /by Sunday)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [D][ ] shower (by: Sunday)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "1.[T][+] read book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "2.[D][ ] return book (by: June 6th)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "3.[E][ ] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "4.[T][ ] borrow book"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "5.[E][ ] swim (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "6.[D][ ] shower (by: Sunday)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Which task on the list would you like to delete? (Eg. \u0027delete 2\u0027)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! Wrong format. Please key in a valid number (Eg \u0027delete 2\u0027)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "  [T][ ] borrow book"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "1.[T][+] read book"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "2.[D][ ] return book (by: June 6th)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "3.[E][ ] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "4.[E][ ] swim (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "5.[D][ ] shower (by: Sunday)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 61
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "done five"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "done5"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "event swim /at"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "event swim /at Mon 2-4pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "deadline shower /by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "deadline shower /by Sunday"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "delete four"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "delete4"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 25
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "then"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "then"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mannggoo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "diff ACTUAL.TXT EXPECTED.txt"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "then"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "else"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mannggoo"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "mannggoo": 33
    }
  }
]
