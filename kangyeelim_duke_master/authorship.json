[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "T | 0 | ewnr"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "T | 0 | evnev"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "E | 0 | eciercb | 01/10/2019 1630"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "D | 0 | xewc | 12/09/2019 1300"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "T | 0 | cwecn"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "D | 0 | cwekcb | 25/09/2019 1800"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "D | 0 | evakbc | 16/08/2019 1300"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "E | 0 | cerbre | 12/09/2019 1800"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 8
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public ByeCommand(String command) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.printGoodbyeMsg();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 16
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected DateFormat outDateFormat \u003d new SimpleDateFormat( \"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected DateFormat outTimeFormat \u003d new SimpleDateFormat(\"H.mm aa\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected SimpleDateFormat fileDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected SimpleDateFormat fileTimeFormat \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected Date date, time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Deadline(String description, Date date, Date time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + outDateFormat.format(date) + \" \" + outTimeFormat.format(time) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toWriteIntoFile() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"D\" + super.toWriteIntoFile() + \" | \" + fileDateFormat.format(date) + \" \" + fileTimeFormat.format(time);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 27
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public DeadlineCommand(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.checkErrorForDeadlineCommand(command, tasks);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        tasks.add(Parser.createDeadline(command));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.printAddedTask(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.printNoOfTaskInList(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        storage.appendFile(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 18
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        //deleting task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.checkErrorForDeleteCommand(command, tasks);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        int curr \u003d Parser.taskToDelete(command);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        tasks.remove(curr - 1);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.printDeletedTaskMsg(tasks.get(curr - 1));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.printNoOfTaskInList(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        //write \u0027tasks\u0027 into data file, overwriting all contents"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.showIntro();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand, ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                ui.showParseError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                ui.showParseError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                ui.showExceptionMsg(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 42,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private String errMsg;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public DukeException(String errMsg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.errMsg \u003d errMsg;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return this.errMsg;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 16
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected DateFormat outDateFormat \u003d new SimpleDateFormat( \"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected DateFormat outTimeFormat \u003d new SimpleDateFormat(\"H.mm aa\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected SimpleDateFormat fileDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected SimpleDateFormat fileTimeFormat \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected Date date, time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Event(String description, Date date, Date time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + outDateFormat.format(date) + \" \" + outTimeFormat.format(time) + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toWriteIntoFile() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"E\" + super.toWriteIntoFile() + \" | \" + fileDateFormat.format(date) + \" \" + fileTimeFormat.format(time);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 26
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public EventCommand(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.checkErrorForEventCommand(command, tasks);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        tasks.add(Parser.createEvent(command));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.printAddedTask(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.printNoOfTaskInList(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        storage.appendFile(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 18
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.printAllTasks(tasks);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 14
    }
  },
  {
    "path": "src/main/java/MarkDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class MarkDoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public MarkDoneCommand(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.checkMarkDoneError(command, tasks);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        int curr \u003d Parser.taskToMarkDone(command);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        tasks.get(curr - 1).markAsDone();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.printMarkDoneMsg(tasks.get(curr - 1));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 18
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected static SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected static SimpleDateFormat timeFormat \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static Date toDate(String s) throws Exception {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        Date date \u003d dateFormat.parse(s);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static Date toTime(String s) throws Exception {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        Date time \u003d timeFormat.parse(s);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static Task readInFileLine(String line) throws Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String[] stringArr \u003d line.split(\" [|] \", 0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (stringArr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String[] dateTimeArr \u003d (stringArr[3]).split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            Date date \u003d toDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            Date time \u003d toTime(dateTimeArr[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            Event event \u003d new Event(stringArr[2], date, time);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            if (stringArr[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                event.markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (stringArr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            Todo td \u003d new Todo(stringArr[2]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            if (stringArr[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                td.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            return td;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String[] dateTimeArr \u003d (stringArr[3]).split(\" \", 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            Date date \u003d toDate(dateTimeArr[0]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            Date time \u003d toTime(dateTimeArr[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            Deadline dl \u003d new Deadline(stringArr[2], date, time);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            if (stringArr[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                dl.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            return dl;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static boolean isDeleteCommand(String command) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return (command.length() \u003e\u003d 6 \u0026\u0026 command.substring(0, 6).equals(\"delete\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static int taskToDelete(String command) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static boolean isTodo(String command) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"todo\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static Todo createTodo(String command) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return new Todo(command.substring(5));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static boolean isEvent(String command) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return (command.length() \u003e\u003d 5 \u0026\u0026 command.substring(0, 5).equals(\"event\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static Event createEvent(String command) throws ParseException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String[] arr \u003d command.split(\" /at \", 2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String[] dateTimeArr \u003d (arr[1]).split(\" \", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        Date date \u003d dateFormat.parse(dateTimeArr[0]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        Date time \u003d timeFormat.parse(dateTimeArr[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return new Event(arr[0].substring(6), date, time);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static boolean isDeadline(String command) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return (command.length() \u003e\u003d 8 \u0026\u0026 command.substring(0, 8).equals(\"deadline\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static Deadline createDeadline(String command) throws ParseException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String[] arr \u003d command.split(\" /by \", 2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String[] dateTimeArr \u003d (arr[1]).split(\" \", 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        //throw error if user never input time or date..."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        Date date \u003d dateFormat.parse(dateTimeArr[0]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        Date time \u003d timeFormat.parse(dateTimeArr[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return new Deadline(arr[0].substring(9), date, time);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static boolean isMarkDone(String command) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return (command.length() \u003e\u003d 4 \u0026\u0026 command.substring(0, 4).equals(\"done\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static int taskToMarkDone(String command) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        int curr \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return curr;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static boolean isListCommand(String command) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return (command.length() \u003d\u003d 4 \u0026\u0026 command.equals(\"list\"));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public static Command parse(String command, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            return new ByeCommand(command);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (command.length() \u003c 4) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(ui.noSuchCommand());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (Parser.isDeleteCommand(command)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (!Parser.isListCommand(command) \u0026\u0026 !Parser.isMarkDone(command)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            if (Parser.isTodo(command)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "               return new TodoCommand(command);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } else if (Parser.isEvent(command)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "               return new EventCommand(command);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } else if (Parser.isDeadline(command)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                return new DeadlineCommand(command);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                //throw exception for wrong command"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                throw new DukeException(ui.noSuchCommand());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (Parser.isMarkDone(command)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        //marking task as done"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            return new MarkDoneCommand(command);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (Parser.isListCommand(command)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //listing tasks out"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            return new ListCommand(command);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(ui.noSuchCommand());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 134
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected String filepath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws Exception {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        //return array after reading from file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        File f \u003d new File(filepath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        BufferedReader bfr \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        while ((line \u003d bfr.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            Task t \u003d Parser.readInFileLine(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void writeFile(TaskList tasks) throws Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filepath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String textFileMsg \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                textFileMsg \u003d textFileMsg + tasks.get(i).toWriteIntoFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                textFileMsg \u003d textFileMsg + System.lineSeparator() + tasks.get(i).toWriteIntoFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        fw.write(textFileMsg);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void appendFile(TaskList tasks) throws Exception {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String textFileMsg \u003d System.lineSeparator() + tasks.get(tasks.size() - 1).toWriteIntoFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath, true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        fw.write(textFileMsg);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 49
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return (isDone? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String getIfDone() { return (isDone? \"1\" : \"0\");}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String msg \u003d \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toWriteIntoFile() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String msg \u003d \" | \" + this.getIfDone() + \" | \" + this.getDescription();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 32
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    protected ArrayList\u003cTask\u003e arr;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.arr \u003d arr;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return arr.size();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return arr.get(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        (this.arr).remove(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        (this.arr).add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String toWriteIntoFile() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"T\" + super.toWriteIntoFile();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 16
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public TodoCommand(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.checkErrorForTodoCommand(command, tasks);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        tasks.add(Parser.createTodo(command));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.printAddedTask(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        ui.printNoOfTaskInList(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        storage.appendFile(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void showIntro() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(\"\\u2639 OOPS!!! There is an error loading data file\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String noSuchCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return \"\\u2639 OOPS!!! I\u0027m sorry but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void printDeletedTaskMsg(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void printNoOfTaskInList(TaskList tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String statusOfList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            statusOfList \u003d \"Now you have 1 task in the list.\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            statusOfList \u003d \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(statusOfList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void checkErrorForDeleteCommand(String command, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (command.contains(\" \")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no task number and there is just trailing whitespaces"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String res \u003d command.replace(\" \", \"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            if (res.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                throw new DukeException(\"\\u2639 OOPS!!! Please input the task number you would like to delete.\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (command.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no task number"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Please input the task number you would like to delete.\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        int curr \u003d Parser.taskToDelete(command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //check if list has no task to throw exception"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! You do not have any tasks in your list.\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (curr \u003e tasks.size()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //check if index is within list size or throw exception"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! You do not have that task in your list. \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    + \"Call \u0027list\u0027 to see all your tasks :-)\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void checkErrorForTodoCommand(String command, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (command.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no description"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String error \u003d \"\\u2639 OOPS!!! The description of todo cannot be empty.\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (!command.substring(4,5).equals(\" \")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no description and there is just trailing whitespaces"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String error \u003d \"\\u2639 OOPS!!! Please input a whitespace between the command \u0027todo\u0027 \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    +\"and your task description for me to keep track of it correctly :-)\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (command.contains(\" \")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String res \u003d command.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            if (res.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                String error \u003d \"\\u2639 OOPS!!! The description of todo cannot be empty.\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                throw new DukeException(error);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void checkErrorForEventCommand(String command, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (command.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no description"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String error \u003d \"\\u2639 OOPS!!! The description of event cannot be empty.\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (!command.substring(5,6).equals(\" \")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no whitespace after event"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String error \u003d \"\\u2639 OOPS!!! Please input a whitespace between the command \u0027event\u0027 \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    + \"and your task description for me to keep track of it correctly :-)\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (command.contains(\" \")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no description and there is just trailing whitespaces"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String res \u003d command.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            if (res.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                String error \u003d \"\\u2639 OOPS!!! The description of event cannot be empty.\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                throw new DukeException(error);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (!command.contains(\" /at \") \u0026\u0026 command.contains(\"/at\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for wrong user input syntax for incorrect whitespaces for /at"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String error \u003d \"\\u2639 OOPS!!! Please input a whitespace before and after \u0027/at\u0027 for me \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    + \"to keep track of the date/time correctly :-)\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (!command.contains(\" /at \")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no /at"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String error \u003d \"\\u2639 OOPS!!! You would need to schedule a date and time duration for this event using \u0027/at\u0027.\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (command.contains(\" /at \")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String[] arr \u003d command.split(\" /at \", 2);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            if (arr[0].length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                String error \u003d \"\\u2639 OOPS!!! The description of event cannot be empty.\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                throw new DukeException(error);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void checkErrorForDeadlineCommand(String command, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (command.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no description"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String error \u003d \"\\u2639 OOPS!!! The description of deadline cannot be empty.\\n\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (!command.substring(8, 9).equals(\" \")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no whitespace after deadline"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String error \u003d \"\\u2639 OOPS!!! Please input a whitespace between the command \u0027deadline\u0027 \""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    + \"and your task description for me to keep track of it correctly :-)\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (command.contains(\" \")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            // throw exception for no description and there is just trailing whitespaces"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String res \u003d command.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            if (res.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                String error \u003d \"\\u2639 OOPS!!! The description of deadline cannot be empty.\\n\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                throw new DukeException(error);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (!command.contains(\" /by \") \u0026\u0026 command.contains(\"/by\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for incorrect whitespaces for /by"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String error \u003d \"\\u2639 OOPS!!! Please input a whitespace before and after \u0027/by\u0027 for me to \""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    + \"keep track of the date/time correctly :-)\\n\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (!command.contains(\" /by \")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no /by"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String error \u003d \"\\u2639 OOPS!!! You would need to schedule a date/time for this deadline using \u0027/by\u0027.\\n\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (command.contains(\" /by \")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String[] arr \u003d command.split(\" /by \", 2);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            if (arr[0].length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                String error \u003d \"\\u2639 OOPS!!! The description of event cannot be empty.\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                throw new DukeException(error);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void printAddedTask(Task task) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String commandMsg \u003d \"Got it. I\u0027ve added this task:\\n\" + task;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(commandMsg);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void checkMarkDoneError(String command, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (command.contains(\" \")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no task number and there is just trailing whitespaces"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String res \u003d command.replace(\" \", \"\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            if (res.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                String error \u003d \"\\u2639 OOPS!!! Please input the task number you would like to mark as done.\\n\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                throw new DukeException(error);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        } else if (command.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //throw exception for no task number"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String error \u003d \"\\u2639 OOPS!!! Please input the task number you would like to mark as done.\\n\";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        int curr \u003d Parser.taskToMarkDone(command);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        if (curr \u003e tasks.size()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            //check if index is within list size or throw exception"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String error \u003d \"\\u2639 OOPS!!! You do not have that task in your list. \" +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                    \"Call \u0027list\u0027 to see all your tasks :-)\\n\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            throw new DukeException(error);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void printMarkDoneMsg(Task task) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String markAsDoneMsg \u003d \"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                \"[\" + task.getStatusIcon() + \"] \" + task.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(markAsDoneMsg);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void printAllTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String listMsg \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(listMsg);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            String taskMsg \u003d (i + 1) + \". \" + task;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "            System.out.println(taskMsg);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void showParseError() {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(\"\\u2639 OOPS!!! Please input the date in dd/mm/yyyy \" +"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                \"and time in 24hr format, separated by a space.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void showExceptionMsg(Exception e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void printGoodbyeMsg() {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String exitMsg \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(exitMsg);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        String line \u003d \"____________________________________________\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "                + \"______________________________________________\";"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kangyeelim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kangyeelim": 224
    }
  }
]
