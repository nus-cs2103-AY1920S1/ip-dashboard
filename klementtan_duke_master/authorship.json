[
  {
    "path": "src/main/java/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    Task currTask;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    String taskDetailsString;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Constructor of AddTaskCommand."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param taskDetailsString the full input of the user for add task command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    AddTaskCommand(String taskDetailsString) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        super(0);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        this.taskDetailsString \u003d taskDetailsString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        getTask();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Helper function that maps the input to the relevant task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    private void getTask() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        //Task Details is all the details for the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            String taskCat \u003d taskDetailsString.split(\" \")[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            if (taskDetailsString.replaceAll(taskCat, \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                throw new DukeException(\"â˜¹ OOPS!!! The description of a \" + taskCat + \" cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            if (taskCat.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String endDate \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                if (taskDetailsString.split(\"/\").length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                    endDate \u003d taskDetailsString.split(\"/\")[1].split(\" \")[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                    endDate \u003d taskDetailsString.split(\"/by \")[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String taskName \u003d taskDetailsString.split(\"/\")[0].split(\"deadline \")[1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                currTask \u003d new Deadline(taskName, endDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            } else if (taskCat.equals(\"event\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String eventDate \u003d taskDetailsString.split(\"/\")[1].split(\"at \")[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String taskName \u003d taskDetailsString.split(\"/\")[0].split(\"event \")[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                currTask \u003d new Event(taskName, eventDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            } else if (taskCat.equals(\"todo\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String taskName \u003d taskDetailsString.split(\"todo \")[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                currTask \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * This method does all the necessary actions needed. Printing the messages, adding the tasks to the list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * and getting the list details"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui.printString(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        tasks.addTask(currTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui.printString(\"  \" + currTask.getTaskDetails());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui.printString(tasks.listDetails());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 63
    }
  },
  {
    "path": "src/main/java/ByeTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class ByeTaskCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Constructor for ByeTaskCommand"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    ByeTaskCommand(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        super(3);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * This method writes all the information in the TaskList to the duke.txt file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        String taskListString \u003d tasks.taskListString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui.printString(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            storage.write(taskListString);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 25
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    int actionType; // -1\u003d\u003enull 0\u003d\u003eadd 1\u003d\u003edelete 2\u003d\u003elist 3\u003d\u003eexit 4\u003d\u003edone 5\u003d\u003efind"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    Command(int actionType) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        this.actionType \u003d actionType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * This is an abstract method that all tasks will inherit from"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * This task to check if the command is an exit command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return a boolean stating if the app should be exited"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    boolean isExit(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return actionType \u003d\u003d 3;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 24
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    String endDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Constructor for Deadline event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param taskName the name of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param endDate the endDate of task if the format is dd/MM/yy HHmm will save as Date object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    Deadline(String taskName, String endDate) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            date \u003d format.parse(endDate);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } catch( Exception e ){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Get the end date"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return get the string representation of the endDate"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public String getEndDate() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return this.endDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * get the full details of the task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return a string representation of the task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        String doneSymbol;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        if (isDone()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            doneSymbol \u003d \"âœ“\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            doneSymbol \u003d \"âœ—\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            return \"[D]\" + \"[\" + doneSymbol + \"] \" + getTaskName() + \" (by: \" + endDate + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            return \"[D]\" + \"[\" + doneSymbol + \"] \" + getTaskName() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 48
    }
  },
  {
    "path": "src/main/java/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * The delete task command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param index is the index from the list of the item to delete"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    DeleteTaskCommand(int index) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        super(1);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        this.index \u003d index-1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Delete the task from the list and print the relevant information"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        Task currTask \u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui.printString(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui.printString( \"   \" + currTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui.printString(tasks.listDetails());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 25
    }
  },
  {
    "path": "src/main/java/DoneTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class DoneTaskCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Done task Command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param index index on the list you wish to make done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    DoneTaskCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        super(4);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * This makes the task done and print the relevant information"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        Task currTask \u003d tasks.doneTask(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui.printString(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui.printString( \"   \" + currTask.getTaskDetails());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 27
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 35,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "klementtan": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    String eventDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * The constructor for event task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param taskName the task name"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param eventDate the event date"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    Event(String taskName, String eventDate) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * getter for the event date"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return the event date in string format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public String getEventDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return this.eventDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * get the string representation of the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return the task details in a String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        String doneSymbol;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        if (isDone()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            doneSymbol \u003d \"âœ“\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            doneSymbol \u003d \"âœ—\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return \"[E]\" + \"[\" + doneSymbol + \"] \" + getTaskName() + \" (at: \" + eventDate + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "klementtan": 41
    }
  },
  {
    "path": "src/main/java/FindTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class FindTaskCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    String keyWord;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    FindTaskCommand(String keyWord){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        super(5);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d tasks.find(keyWord);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui.printList(list);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 14
    }
  },
  {
    "path": "src/main/java/ListTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class ListTaskCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * constructor for the list task command"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    ListTaskCommand(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        super(2);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * This method print relevant information for the list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ui.printString(tasks.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 18
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    Parser(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * This method takes in exactly what the user types and determine if should return a command or an error"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param fullCommand string of the input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return  the relevant command for that string"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @throws DukeException this error will be raised if the user does not enter a valid input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        if (fullCommand.equals(\"bye\")){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            return new ByeTaskCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } else if (fullCommand.contains(\"delete\")){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            return parseDeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } else if (fullCommand.contains(\"todo\") ||"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                fullCommand.contains(\"event\") ||"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                fullCommand.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            return new AddTaskCommand(fullCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            return new ListTaskCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } else if(fullCommand.contains(\"done\")){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            return parseDoneCommand(fullCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } else if(fullCommand.contains(\"find\")){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            return new FindTaskCommand(fullCommand.split(\"find \")[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Helper function to get the relevant command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param string input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    static Command parseDeleteCommand(String string) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        int index \u003d Integer.parseInt(string.split(\"delete \")[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return new DeleteTaskCommand(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Helper function to get the relevant command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param string input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return command"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    static Command parseDoneCommand(String string) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        int index \u003d Integer.parseInt(string.split(\"done \")[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return new DoneTaskCommand(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 53
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    Storage(String filePath){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    BufferedReader bufferedReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    FileReader fileReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * This function will load the file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return the buffered file for TaskList usage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    BufferedReader load() throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            fileReader \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            return bufferedReader;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            throw new DukeException(\"Unable to open file \u0027\" + filePath + \"\u0027\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Writes the file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param input string of the text to write in the file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    void write(String input) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            fileWriter.write(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } catch(Exception e){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            throw new DukeException(\"Unable to write to file \u0027\" + filePath + \"\u0027\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 44
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public Task(String taskName){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Make the task done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Check if the task is done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return boolean of if the task is done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Get the name of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return yhe string representation of the task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Get the full task details"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return the string of the task details"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        String doneSymbol;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            doneSymbol \u003d \"âœ“\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            doneSymbol \u003d \"âœ—\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return \"[\" + doneSymbol + \"] \" + taskName;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 44
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    private ArrayList\u003cTask\u003e tasksArr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    BufferedReader bufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    TaskList(BufferedReader bufferedReader){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        this.bufferedReader \u003d bufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        populateTaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Use the Buffered File provided in the constructor to read the file and populate the list with the stored"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    private void populateTaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        Stream\u003cString\u003e linesStream \u003d bufferedReader.lines();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        linesStream.forEach(line -\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            String[] lineSplit \u003d line.split(\"//\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            String taskType \u003d lineSplit[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            Task currTask \u003d new Task(\"temp\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            if (taskType.equals(\"T\")){ // Todo"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                boolean isDone \u003d lineSplit[1].equals(\"1\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String taskName \u003d lineSplit[2];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                currTask \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                if (isDone){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                    currTask.done();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            } else if (taskType.equals(\"D\")) { // Deadline"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                boolean isDone \u003d lineSplit[1].equals(\"1\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String taskName \u003d lineSplit[2];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String endDate \u003d lineSplit[3];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                currTask \u003d new Deadline(taskName, endDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                if (isDone){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                    currTask.done();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                boolean isDone \u003d lineSplit[1].equals(\"1\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String taskName \u003d lineSplit[2];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String eventDate \u003d lineSplit[3];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                currTask \u003d new Event(taskName, eventDate);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                if (isDone){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                    currTask.done();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                System.out.println(\"Invalid syntax in duke.txt for \" + taskType);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            tasksArr.add(currTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        });"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Get the string representation of the full list to write to the file and store the data"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return string"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public String taskListString () {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        String dukeTxt \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        while(!tasksArr.isEmpty()){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            Task currTask \u003d tasksArr.remove(0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            String currTaskString \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            if (currTask instanceof Todo) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String taskTypeChar \u003d \"T\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String isDone \u003d \"0\"; // 0 is not done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String taskName \u003d currTask.getTaskName();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                if (currTask.isDone()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                    isDone \u003d \"1\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                currTaskString \u003d taskTypeChar + \"//\" + isDone + \"//\" + taskName;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            } else if (currTask instanceof Deadline) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String taskTypeChar \u003d \"D\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String isDone \u003d \"0\"; // 0 is not done"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String taskName \u003d currTask.getTaskName();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String endDate \u003d ((Deadline) currTask).getEndDate();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                if (currTask.isDone()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                    isDone \u003d \"1\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                currTaskString \u003d taskTypeChar + \"//\" + isDone + \"//\" + taskName + \"//\" + endDate;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            } else if (currTask instanceof Event) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String taskTypeChar \u003d \"E\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String isDone \u003d \"0\"; // 0 is not done"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String taskName \u003d currTask.getTaskName();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                String eventDate \u003d ((Event) currTask).getEventDate();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                if (currTask.isDone()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                    isDone \u003d \"1\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                currTaskString \u003d taskTypeChar + \"//\" + isDone + \"//\" + taskName + \"//\" + eventDate;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            dukeTxt \u003d dukeTxt + currTaskString + \"\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return dukeTxt;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Make a particular task in the list done"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param index the index in the list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return  the Task that was made done"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public Task doneTask(int index) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        Task currTask \u003d tasksArr.get(index);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        currTask.done();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return currTask;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Add task to the list"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public void addTask(Task task){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        tasksArr.add(task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * delete a certain task in the list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param i index"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return the task deleted"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public Task deleteTask(int i){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return tasksArr.remove(i);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * the general information of the list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public String listDetails () {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return \"Now you have \" + tasksArr.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String keyWord){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        for (int i \u003d 0 ; i \u003c tasksArr.size() ; i++){"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            Task currTask \u003d tasksArr.get(i);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            String currTaskName \u003d currTask.getTaskDetails();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            if (currTaskName.contains(keyWord)) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                list.add(currTask);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * The string shown to the clients for the information in the list"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return the String representation of the list"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        String string \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        for (int i \u003d 0 ; i \u003c tasksArr.size() ; i++ ) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            string \u003d string + \"    \" + (i + 1) + \". \" + tasksArr.get(i).getTaskDetails() + \"\\n\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 159
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    Todo(String taskName){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * the details for the todo task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return string"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        String doneSymbol;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        if (isDone()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            doneSymbol \u003d \"âœ“\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            doneSymbol \u003d \"âœ—\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return \"[T]\" + \"[\" + doneSymbol + \"] \" + getTaskName();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    Scanner scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    Ui(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * showLogo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * print line divider"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    void showLine() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * read the line command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @return the command type in by the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * print a string"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public void printString(String string) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        System.out.println(\"    \" + string);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Show error message"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    void showLoadingError() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        System.out.println(\"    Failed to load file\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    void printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        String string \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        for (int i \u003d 0 ; i \u003c list.size() ; i++ ) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "klementtan"
        },
        "content": "            string \u003d string + \"    \" + (i + 1) + \". \" + list.get(i).getTaskDetails() + \"\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        System.out.println(string);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * Show error message"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     * @param string"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "klementtan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    void showError(String string){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        printString(string);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 70
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "T//1//read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "D//1//return book//June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "E//0//project meeting//Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "T//1//join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "D//0//return book //2/12/2019 1800"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "E//0//project meeting //Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "klementtan": 6
    }
  },
  {
    "path": "src/main/java/text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "[T][âœ—] borrow book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "1.[T][âœ—] borrow book"
      }
    ],
    "authorContributionMap": {
      "klementtan": 12
    }
  },
  {
    "path": "src/main/java/text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "klementtan": 2
    }
  },
  {
    "path": "src/main/java/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "klementtan": 21
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "klementtan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "klementtan"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public void addDeadlineTaskCommandTest() throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        String fullCommand \u003d \"deadline return book /by 2/12/2019 1800\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        Task actualTask \u003d new AddTaskCommand(fullCommand).currTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        Task expectedTask \u003d new Deadline(\"return book \", \"2/12/2019 1800\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        assertEquals(actualTask.getTaskDetails(), expectedTask.getTaskDetails());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public void addEventTaskCommandTest() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        String fullCommand \u003d \"event project meeting /at Mon 2-4pm\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        Task actualTask \u003d new AddTaskCommand(fullCommand).currTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        Task expectedTask \u003d new Event(\"project meeting \", \"Mon 2-4pm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        assertEquals(actualTask.getTaskDetails(), expectedTask.getTaskDetails());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "klementtan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    public void addTodoTaskCommandTest() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        String fullCommand \u003d \"todo borrow book\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        Task actualTask \u003d new AddTaskCommand(fullCommand).currTask;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        Task expectedTask \u003d new Todo(\"borrow book\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "klementtan"
        },
        "content": "        assertEquals(actualTask.getTaskDetails(), expectedTask.getTaskDetails());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "klementtan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "klementtan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "klementtan": 27
    }
  }
]
