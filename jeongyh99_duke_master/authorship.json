[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    mainClassName \u003d \"duke.main.Launcher\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "test {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 32,
      "-": 14
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "Duke is a friendly event scheduler that helps you keep track of your outstanding tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "## How to Use"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "- Create a duke.txt file in the directory of your choosing."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "- Specify the path of the duke.txt file inside Duke.java and replace LIST_PATH with your own path."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "- Enjoy!"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "- Ability to add Tasks of type -ToDo, Deadline and Event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "- Ability to list your tasks and their respective status - Done/Undone."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "- Update your task status."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "- Delete tasks that you no longer need to keep an eye on."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "## Commands"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "Command | Note | Result | Example"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "--------|--------|---------|---------"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "todo _Task_ |    |Adds todo to scheduler, status of task is undone | todo praise Duke"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "event _Task_ /at _description_ |    | Adds event to scheduler, status of task is undone with task description | event celebrate Mike\u0027s birthday /at 2am - 4pm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "deadline _Task_ /by _description_ | Formatting _description_ as (d)d/(m)m/yyyy hhmm is formatted by Duke to more readable format. | Adds a deadline to scheduler, status of task undone with task description. | deadline go to gym /by 2/3/2020 1400"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "done _TaskNumber_ |  | Sets the status of task at number TaskNumber to be completed. | done 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "delete _TaskNumber_ |  | Removes the task at TaskNumber from the scheduler | delete 5"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "find _Task_ |  | Lists the tasks in the scheduler which has the keywords specified in _Task_ | find gym"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "bye |  | Closes Duke.  "
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 20,
      "-": 4
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an executable action. A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * an action to execute as specified by Duke\u0027s user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Determines if program should exit."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Performs operations of type Create, Read, Update, Delete and Exit"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * on Task objects and directs action of file storage and user interaction."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param taskList  List of Task objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param ui Interface for user interaction."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param storage Interface for read and write operations on file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @throws DukeException  Error while executing command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 36
    }
  },
  {
    "path": "src/main/java/duke/command/CreateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an executable action Create. A \u003ccode\u003eCreateCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * a Create action for a \u003ccode\u003eTask\u003c/code\u003e object as specified by Duke\u0027s user and adds it to TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class CreateCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String directive;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String addOn;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public CreateCommand(String directive, String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.directive \u003d directive;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Creates an object of type CreateCommand with information about task to create."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param directive  Information about task type."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param description Description of specified task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param addOn Additional information about task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public CreateCommand(String directive, String description, String addOn) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.directive \u003d directive;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.addOn \u003d addOn;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Performs operations of type Create on Task objects and adds them to the list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Directs action of file storage and user interaction."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param taskList  List of Task objects."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param ui Interface for user interaction."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param storage Interface for read and write operations on file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @throws DukeException  Error while executing command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        boolean isAdd \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        Task task \u003d new Task(description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String notification \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        switch (directive) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            task \u003d new Deadline(description, addOn);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            task \u003d new Event(description, addOn);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            isAdd \u003d false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        if (isAdd) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            String duplicatesFound \u003d taskList.getDuplicates(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            if (duplicatesFound.equals(\"\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                taskList.addItem(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                notification \u003d ui.getNotifyTaskAdded(task, taskList.size());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                storage.addTaskToFile(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                notification \u003d \"We have detected possible duplicates.\\n\" + duplicatesFound;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                notification +\u003d \"Please change your item description.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return notification;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        throw new DukeException(\"Error Executing Create Command\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 82
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an executable action Delete. A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * a Delete action for a \u003ccode\u003eTask\u003c/code\u003e object as specified by Duke\u0027s user and deletes it from TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String directive;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private int position;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public DeleteCommand(String directive, int position) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.directive \u003d directive;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.position \u003d position;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Performs operations of type Delete on Task objects and removes them from the list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Directs action of file storage and user interaction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param taskList  List of Task objects."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param ui Interface for user interaction."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param storage Interface for read and write operations on file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @throws DukeException  Error while executing command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            Task task \u003d taskList.deleteTaskAtNumber(position);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            String notification \u003d ui.getNotifyTaskDeleted(task, taskList.size());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            storage.writeListToFile(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return notification;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an executable action Exit. A \u003ccode\u003eExitCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * a terminate action for the Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        super.isExit \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Signals termination of Duke program."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param taskList  List of Task objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param ui Interface for user interaction."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param storage Interface for read and write operations on file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String output \u003d ui.getPrintLine(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ReadCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an executable action Read. A \u003ccode\u003eReadCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * a iteration of Tasks in the TaskList and prints it in appropriate format."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class ReadCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String directive;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public ReadCommand(String directive) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.directive \u003d directive;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Creates an object of type ReadCommand to read task information."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param directive Specified if read should be of type list or find."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param keyword Keyword to find tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public ReadCommand(String directive, String keyword) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.directive \u003d directive;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Performs operations of type Read on Task objects and prints them from the list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Directs action of user interaction."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param taskList  List of Task objects."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param ui Interface for user interaction."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param storage Interface for read and write operations on file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        if (directive.equals(\"list\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            output \u003d ui.getPrintLine(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            output +\u003d printTaskList(taskList.getTasksList(), ui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else if (directive.equals(\"find\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            output \u003d ui.getPrintLine(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            for (Task task : taskList.getTasksList()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    tempList.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            output +\u003d printTaskList(tempList, ui);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            output \u003d \"Read Command is invalid as it is not of type list or find\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String printTaskList(ArrayList\u003cTask\u003e tasks, Ui ui) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            list +\u003d ui.getPrintLine(String.format(\"%d. %s\", (i + 1), task));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 76
    }
  },
  {
    "path": "src/main/java/duke/command/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an executable action Update. A \u003ccode\u003eUpdateCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * a Update action for a \u003ccode\u003eTask\u003c/code\u003e object status as specified by Duke\u0027s user in the TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String directive;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private int position;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Creates an object of type UpdateCommand to update task information."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param directive Specified type of update action."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param position position of task in a task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public UpdateCommand(String directive, int position) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.directive \u003d directive;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.position \u003d position;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Performs operations of type Update on Task objects and updates them from the list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Directs action of file storage and user interaction."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param taskList  List of Task objects."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param ui Interface for user interaction."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param storage Interface for read and write operations on file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @throws DukeException  Error while executing command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        Task task \u003d taskList.markNumberedTaskAsDone(position);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String notification \u003d ui.getNotifyMarkedAsDone(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        storage.writeListToFile(taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return notification;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 47
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an error in the program. A \u003ccode\u003eDukeException\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * an error while running the program, such as missing files and poor user input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return errorMsg;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 18
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 47
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.gui.DialogBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents core of the Duke program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Acts as a planner for the Duke user by allowing for CRUD functionality on Tasks specified by user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    //region VARIABLES"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private static String LIST_PATH \u003d \"C:/Users/Yu Han Jeong/Desktop/CS2103T/duke/src/data/duke.txt\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    //endregion"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Creates an object of type Duke and performs setup for program."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        storage \u003d new Storage(LIST_PATH);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Main driver of Duke program. Uses list of tasks to store user specified activities."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Able to perform CRUD functionality when queried by user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        ui.greetings();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                assert fullCommand !\u003d null \u0026\u0026 fullCommand !\u003d \"\" : \"Critical Error from User Input\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        initControls(stage, mainLayout);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        styleControls(stage, mainLayout);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        Label greetings \u003d new Label(ui.greetings());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                DialogBox.getDukeDialog(greetings, new ImageView(duke))"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        );"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        //Add functionality to handle user input."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            handleUserInput(stage);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        });"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            handleUserInput(stage);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        });"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private void handleUserInput(Stage stage) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        if (userText.getText().equals(\"bye\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                storage.writeListToFile(tasks);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        );"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Gets response of Duke program to user request"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            if (input !\u003d null \u0026\u0026 input !\u003d \"\") {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                output \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            output \u003d ex.getMessage();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private void initControls(Stage stage, AnchorPane mainLayout) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private void styleControls(Stage stage, AnchorPane mainLayout) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 179,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/main/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 12
    }
  },
  {
    "path": "src/main/java/duke/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.command.CreateCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.command.ReadCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.command.UpdateCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents a parser for user input. A Parser is able to understand user input and validates"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * against poor command formats from users to direct appropriate Command response."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Returns appropriate Command object as specified by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Flags error when user command is invalid or error occurs."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param command  The input as specified by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @throws DukeException  Error while executing command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String[] commandArr \u003d command.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String directive \u003d commandArr[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        assert !directive.equals(\"\") : \"Empty directive, critical error\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        if (directive.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return new ReadCommand(directive);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else if (directive.equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else if (directive.equals(\"find\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            String keyword \u003d command.substring(5);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return new ReadCommand(directive, keyword);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else if (directive.equals(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            int position \u003d Integer.valueOf(commandArr[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return new UpdateCommand(\"done\", position);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else if (directive.equals(\"delete\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            int position \u003d Integer.valueOf(commandArr[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return new DeleteCommand(\"delete\", position);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else if (isTask(directive)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            if (commandArr.length \u003c 2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                String error \u003d \"☹ OOPS!!! The description of a %s cannot be empty.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                throw new DukeException(String.format(error, directive));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            if (directive.equals(\"todo\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                String description \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                for (int i \u003d 1; i \u003c commandArr.length; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    description +\u003d commandArr[i] + \" \";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                return new CreateCommand(directive, description.trim());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    CreateCommand eventWithAddOn \u003d createDeadlineOrEventCommand(directive, command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    return eventWithAddOn;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    throw new DukeException(\"Invalid event input\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public static CreateCommand createDeadlineOrEventCommand(String directive, String command) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String taskDetails \u003d directive.equals(\"deadline\") ? command.substring(9) : command.substring(6);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String description \u003d taskDetails.split(\"/\")[0].trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String addOns \u003d directive.equals(\"deadline\")"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                ? taskDetails.substring(taskDetails.lastIndexOf(\"by\") + 3).trim()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                : taskDetails.substring(taskDetails.lastIndexOf(\"at\") + 3).trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return new CreateCommand(directive, description, addOns);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public static boolean isTask(String directive) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return directive.equals(\"todo\") || directive.equals(\"deadline\") || directive.equals(\"event\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 76
    }
  },
  {
    "path": "src/main/java/duke/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an interface for interaction with files. A \u003ccode\u003eStorage\u003c/code\u003e object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * is able to read and write to files that are specified."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private File planner;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Creates an ArrayList of tasks by reading a file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @throws DukeException  If error occurs while creating the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        planner \u003d new File(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        setPlannerPermissions(planner);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        ArrayList\u003cTask\u003e tasksList \u003d createTasksList(planner);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Returns an ArrayList of tasks in the specified file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Throws DukeException when error occurs parsing the file or in incorrect format."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param file  File object containing string representation of Task objects."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @throws DukeException  If error occurs while parsing the file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public ArrayList\u003cTask\u003e createTasksList(File file) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                String[] taskDetails \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                switch (taskDetails[0].trim()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    task \u003d new ToDo(taskDetails[2].trim());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    setDoneFlag(task, taskDetails[1].trim());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    task \u003d new Deadline(taskDetails[2].trim(), taskDetails[3].trim());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    setDoneFlag(task, taskDetails[1].trim());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    task \u003d new Event(taskDetails[2].trim(), taskDetails[3].trim());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    setDoneFlag(task, taskDetails[1].trim());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                    throw new DukeException(\"Storage File not in correct format\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                assert task !\u003d null : \"Task file is corrupted and unable to load\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                tasksList.add(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return tasksList;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Checks if a task is done and sets its status accordingly."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void setDoneFlag(Task task, String flag) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        if (flag.equals(\"+\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private void setPlannerPermissions(File planner) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        planner.setExecutable(true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        planner.setReadable(true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        planner.setWritable(true);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Overwrites specified text to a file, throws DukeException if error occurs."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param textToAdd  String of text to write to file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @throws DukeException  If error occurs while reading and writing to file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void writeStringToFile(String textToAdd) throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            FileWriter fw \u003d new FileWriter(planner); //creates FileWriter in overwrite mode"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            fw.write(textToAdd + \"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Overwrites file with String representation of a tasks in TaskList object,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * throws DukeException if error occurs."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param taskList  List of tasks to write to file."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @throws DukeException  If error occurs while reading and writing to file."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void writeListToFile(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasksList();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            sb.append(task);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        writeStringToFile(sb.toString().trim());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Adds to text of a file, throws DukeException if error occurs."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param task  Task to add to the file."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @throws DukeException  If error occurs while reading and writing to file."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void addTaskToFile(Task task) throws DukeException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            FileWriter fw \u003d new FileWriter(planner, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            fw.write(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 143
    }
  },
  {
    "path": "src/main/java/duke/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.command.ReadCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents a list of Task objects. A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * a list of Task objects of form ToDo, Event and Deadline and specifies operations"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * that can be performed on the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private ArrayList\u003cTask\u003e tasksList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.tasksList \u003d tasksList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void addItem(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        tasksList.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return tasksList.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Updates a task number in the list with status of done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param number the task number in the list to update"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public Task markNumberedTaskAsDone(int number) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        Task task \u003d getTaskAtIndex(number - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        assert task !\u003d null : \"Error updating task as done\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public Task deleteTaskAtNumber(int position) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        Task task \u003d  tasksList.remove(position - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        assert task !\u003d null : \"Error deleting task\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public Task getTaskAtIndex(int position) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return tasksList.get(position);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String getDuplicates(Task newItem) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String duplicates \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        for (Task task: tasksList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            if (task.equals(newItem)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                duplicates +\u003d task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return duplicates;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 72
    }
  },
  {
    "path": "src/main/java/duke/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an interface for user interaction. A \u003ccode\u003eUi\u003c/code\u003e object is"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * able to print and read user inputs, notifying Duke user of program status."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String lastCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public static void println(String string) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        System.out.println(string);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Reads a user command if it exists and returns to user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @return the user command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        if (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            lastCommand \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return lastCommand;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void showError(String string) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        printLine(string);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Notifies the user that a particular task has been added to a list of certain size."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void notifyTaskAdded(Task task, int listSize) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        System.out.println(\"\\t\" + task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        System.out.printf(\"Now you have %d tasks in the list.\\n\", listSize);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String getNotifyTaskAdded(Task task, int listSize) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String notification \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        notification +\u003d \"\\t\" + task + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        notification +\u003d String.format(\"Now you have %d tasks in the list.\\n\", listSize);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return notification;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Notifies the user that a particular task has been deleted from a list of certain size."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void notifyTaskDeleted(Task task, int listSize) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        System.out.println(\"\\t\" + task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        System.out.printf(\"Now you have %d tasks in the list.\\n\", listSize);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String getNotifyTaskDeleted(Task task, int listSize) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String notification \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        notification +\u003d \"\\t\" + task + \"\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        notification +\u003d String.format(\"Now you have %d tasks in the list.\\n\", listSize);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return notification;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void notifyMarkedAsDone(Task task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        System.out.println(\"\\t\" + task.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String getNotifyMarkedAsDone(Task task) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String notification \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        notification +\u003d String.format(\"\\t\" + task.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return notification;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void print(String string) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        System.out.print(string);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void printLine(String string) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        System.out.println(string);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String getPrintLine(String string) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return string + \"\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String greetings() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return \"Hello! I am Jeong\u0027s Pet\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 98
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an Task object of type Deadline. A \u003ccode\u003eDeadline\u003c/code\u003e object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * specifies when it is to be completed by and its item description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Creates a Task of type Deadline and formats deadline if possible."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param description Description information about the Deadline object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * @param by The timeline to complete the deadline task by."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        humanizeDeadline();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     * Humanized deadline of a Deadline object if deadline matches specified date format dd/mm/yyyy hhmm."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    //Regex below adapted from https://stackoverflow.com/questions/23360599/regular-expression-for-dd-mm-yyyy-hhmm"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void humanizeDeadline() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String pat \u003d \"^([1-9]|([012][0-9])|(3[01]))/([0]{0,1}[1-9]|1[012])/\\\\d\\\\d\\\\d\\\\d [012]{0,1}[0-9][0-6][0-9]$\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        if (by.matches(pat)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            String hoursMin \u003d by.split(\" \")[1].trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            String[] dayMonthYear \u003d by.split(\" \")[0].trim().split(\"/\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            String day \u003d formatDate(dayMonthYear[0]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            String month \u003d formatMonth(dayMonthYear[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            String year \u003d dayMonthYear[2];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            String time \u003d formatHour(hoursMin);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            by \u003d String.format(\"%s of %s %s, %s\", day, month, year, time);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String formatDate(String date) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        assert Integer.valueOf(date) \u003c\u003d 31 : \"Date specified is greater than 31\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        if (date.equals(\"1\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"1st\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else if (date.equals(\"2\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"2nd\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else if (date.equals(\"3\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"3rd\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else if (date.equals(\"21\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"21st\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else if (date.equals(\"22\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"22nd\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else if (date.equals(\"23\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"23rd\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else if (date.equals(\"31\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"31st\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return date + \"th\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String formatHour(String hour) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        if (Integer.valueOf(hour) \u003c\u003d 1200) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return String.format(\"%s.%s%s\", hour.substring(0,2), hour.substring(2), \"am\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            if (Integer.valueOf(hour) \u003c 1300) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                return String.format(\"%s.%.s%d\", hour.substring(0,2), hour.substring(3), \"pm\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "                return String.format(\"%s.%s%s\", Integer.valueOf(hour.substring(0,2)) - 12, hour.substring(2), \"pm\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String formatMonth(String month) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        assert (Integer.valueOf(month) \u003c\u003d 12) : \"Month specified is greater than 12\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        switch (month) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"1\" :"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"January\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"2\" :"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"February\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"3\" :"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"March\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"4\" :"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"April\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"5\" :"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"May\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"6\" :"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"June\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"7\" :"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"July\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"8\" :"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"August\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"9\" :"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"September\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"10\" :"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"October\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"11\" :"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"November\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        case \"12\" :"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"December\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return \"Invalid Date\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return \"D \" + super.toString() + \"| \" + by;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 115
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an Task object of type Event. An \u003ccode\u003eEvent\u003c/code\u003e object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * specifies when the event is and its item description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return \"E \" + super.toString() + \"| \" + at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an Task object. A \u003ccode\u003eTask\u003c/code\u003e object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * specifies whether it has been completed and its item description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return (isDone ? \"+\" : \"-\"); //return tick or X symbols as + and - respectively"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return \"| \" + getStatusIcon() + \" | \" + description + \" \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public boolean equals(Object task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        if (this \u003d\u003d task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        else if (task instanceof Task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "            return ((Task) task).description.equals(this.description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 44
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * Represents an Task object of type ToDo. A \u003ccode\u003eToDo\u003c/code\u003e object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " * specifies its item description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        return \"T \" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 17
    }
  },
  {
    "path": "src/test/java/duke/main/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 12
    }
  },
  {
    "path": "src/test/java/duke/main/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void isTask_notTask_falseReturned() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        assertEquals(Parser.isTask(\"dedline\"), false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 13
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    public void createDeadline_autoHumanize_isHumanized() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"\", \"2/12/2020 1400\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        String humanizedTime \u003d deadline.getBy();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "        assertEquals(\"2nd of December 2020, 2.00pm\", humanizedTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeongyh99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeongyh99": 15
    }
  }
]
