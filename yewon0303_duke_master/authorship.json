[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "# Duke Orsino "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "Personal Tasklist Manager"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "Personal tasklist manager aimed at organising the current tasks "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "that need to be done, as well as upcoming deadlines and events."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "Theme is adopted from William Shakespeare\u0027s Twelfth Night. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "You are Viola giving commands to Duke Orsino, who will"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "respond to your commands. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "Screenshot:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "![Ui.png](Ui.png)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "## 1. Setting up"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Java Runtime Environment"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "**Running Duke Orsino**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "1. Download `duke-0.1.3.jar` file from `duke` \u003e `build` \u003e `libs`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "1. Open the jar file by"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    2. Double-clicking on the jar file OR"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    2. Typing `java -jar duke-0.1.3.jar` on Command Line Interface"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "## 2. Usage"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "### 2.1 Features"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Interact with Duke Orsino to manage your tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* 3 types of tasks supported - Deadline, Event, Todo"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "Task type | Details required"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "_Deadline_ | Task detail, date and time of deadline"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "_Event_ | Task detail, date and time of event"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "_Todo_ | Task detail"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "### 2.2 Commands "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Type command into the textbox and click `send` to request action from Duke Orsino"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### 2.2.1 Exiting the program: `bye`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Quits the program."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Format: `bye` "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Bye. Hope to see thee again soon!"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### 2.2.2 Deleting a task: `delete`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Delete the specified task from the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Format: `delete INDEX`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Examples: `delete 2` deletes the 2nd task from the list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        [T][x] Prepare for CS2101 presentation"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Now thee have 3 tasks in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### 2.2.3 Marking a task done: `done`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Marks a specified `undone [x]` task `done [✓]`."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Format: `done INDEX`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Examples: `done 1` marks 1st task from the list done"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        [D][✓] CS2105 assignment 1 (by 02 October 2019 11.59PM)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### 2.2.4 Finding a task with given keyword: `find`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Finds all tasks in the list with the keyword provided."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Format: `find KEYWORD`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Examples: `find call` finds all tasks from the list containing the word call"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Here are the matching tasks in thou list:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        1. [T][✓] call Benedict"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        2. [T][x] call Ryan"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### 2.2.5 Listing all tasks: `list`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Lists all tasks in the list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Format: `list`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Examples: `list` lists all tasks from the list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Here are the 4 tasks in thou list:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        1. [E][✓] dinner with parents (at: 21 September 2019 07.00PM)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        2. [T][x] call Ryan"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        3. [D][x] CS2105 assignment 1 (by: 02 October 2019 11.59PM)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        4. [T][x] buy birthday present for Benedict"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### 2.2.6 Undoing the latest undoable command: `undo`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Undoes the latest undoable command. "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Undoable commands include all add Task commands (`deadline`, `event`, `todo`), delete and done"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Format: `undo`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Examples: `delete 2` \u003e `undo` marks task adds back the deleted task back into the list"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Nice! Undone successful."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### 2.2.7 Viewing a task: `view`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Shows just the specified task."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Format: `view INDEX`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Examples: `view 3` shows the 3rd task in the list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        3. [D][x] CS2105 assignment 1 (by: 02 October 2019 11.59PM)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### 2.2.8 Adding a Deadline task: `deadline`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Adds a task with type `deadline` to the list."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Format: `deadline TASK /by DD/MM/YY HHMM`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Examples: `deadline CS2101 peer review /by 02/10/2019 2359` adds a `deadline` task"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        [D][x] CS2101 peer review (by: 02 October 2019 11.59PM)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Now thee have 5 tasks in thou list."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### 2.2.9 Adding an Event task: `event`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Adds a task with type `event` to the list."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Format: `event TASK /at DD/MM/YY HHMM`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Examples: `event CS2103T team meeting /at 20/09/2019 1600` adds an `event` task"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        [E][x] CS2103T team meeting (at: 20 September 2019 04.00PM)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Now thee have 5 tasks in thou list."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### 2.2.10 Adding a Todo task: `todo`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Adds a task with type `todo` to the list."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Format: `todo TASK`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Examples: `todo print lecture slides` adds a `todo` task"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        [T][x] print lecture slides"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Now thee have 5 tasks in thou list."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "## 3. Command summary"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Bye: `bye`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Delete: `delete INDEX`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `delete 1`"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Done: `done INDEX`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `done 1`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Find: `find KEYWORD`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `find call`"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* List: `list`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Undo: `undo`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* View: `view INDEX`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `view 1`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Add Deadline: `deadline TASK /by DD/MM/YY HHMM`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `deadline CS2101 peer review /by 02/10/2019 2359`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Add Event: `event TASK /at DD/MM/YY HHMM`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `event CS2103T team meeting /at 20/09/2019 1600`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Add Todo: `todo TASK`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `todo print lecture slides`"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 188,
      "-": 4
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    archiveVersion \u003d \"0.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "test {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 51,
      "-": 14
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "# Duke Orsino "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "Personal Tasklist Manager"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "Personal tasklist manager aimed at organising the current tasks "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "that need to be done, as well as upcoming deadlines and events."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "Theme is adopted from William Shakespeare\u0027s Twelfth Night. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "You are Viola giving commands to Duke Orsino, who will"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "respond to your commands. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "Screenshot:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "![Ui.png](Ui.png)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "## 1. Setting up"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Java Runtime Environment"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "**Running Duke Orsino**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "1. Download `duke-0.1.3.jar` file from `duke` \u003e `build` \u003e `libs` "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    or [here](https://github.com/yewon0303/duke/releases/tag/v0.3.1) "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "1. Open the jar file by"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    2. Double-clicking on the jar file OR"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    2. Typing `java -jar duke-0.1.3.jar` on Command Line Interface"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "## 2. Usage"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "### 2.1 Features"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Interact with Duke Orsino to manage your tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* 3 types of tasks supported - Deadline, Event, Todo"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "Task type | Details required"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "_Deadline_ | Task detail, date and time of deadline"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "_Event_ | Task detail, date and time of event"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "_Todo_ | Task detail"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "### 2.2 Commands "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Type command into the textbox and click `send` to request action from Duke Orsino"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### **2.2.1 Exiting the program: `bye`**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Quits the program."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Format: `bye` "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Expected outcome: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Bye. Hope to see thee again soon!"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### **2.2.2 Deleting a task: `delete`**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Delete the specified task from the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Format: `delete INDEX`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Example: `delete 2` deletes the 2nd task from the list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Expected outcome: "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        [T][x] Prepare for CS2101 presentation"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Now thee have 3 tasks in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### **2.2.3 Marking a task done: `done`**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Marks a specified `undone [x]` task `done [✓]`."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Format: `done INDEX`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Example: `done 1` marks 1st task from the list done"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Expected outcome: "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        [D][✓] CS2105 assignment 1 (by 02 October 2019 11.59PM)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### **2.2.4 Finding a task with given keyword: `find`**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Finds all tasks in the list with the keyword provided."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Format: `find KEYWORD`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Example: `find call` finds all tasks from the list containing the word call"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Expected outcome: "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Here are the matching tasks in thou list:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        1. [T][✓] call Benedict"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        2. [T][x] call Ryan"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### **2.2.5 Listing all tasks: `list`**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Lists all tasks in the list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Format: `list`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Expected outcome: "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Here are the 4 tasks in thou list:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        1. [E][✓] dinner with parents (at: 21 September 2019 07.00PM)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        2. [T][x] call Ryan"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        3. [D][x] CS2105 assignment 1 (by: 02 October 2019 11.59PM)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        4. [T][x] buy birthday present for Benedict"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### **2.2.6 Undoing the latest undoable command: `undo`**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Undoes the latest undoable command. "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Undoable commands include all add Task commands (`deadline`, `event`, `todo`), delete and done"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Format: `undo`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Example: `delete 2` \u003e `undo` marks task adds back the deleted task back into the list"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Expected outcome: "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Nice! Undone successful."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### **2.2.7 Viewing a task: `view`**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Shows just the specified task."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Format: `view INDEX`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Example: `view 3` shows the 3rd task in the list"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Expected outcome: "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        3. [D][x] CS2105 assignment 1 (by: 02 October 2019 11.59PM)"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### **2.2.8 Adding a Deadline task: `deadline`**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Adds a task with type `deadline` to the list."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Format: `deadline TASK /by DD/MM/YY HHMM`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Example: `deadline CS2101 peer review /by 02/10/2019 2359` adds a `deadline` task"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Expected outcome: "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        [D][x] CS2101 peer review (by: 02 October 2019 11.59PM)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Now thee have 5 tasks in thou list."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### **2.2.9 Adding an Event task: `event`**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Adds a task with type `event` to the list."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Format: `event TASK /at DD/MM/YY HHMM`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Example: `event CS2103T team meeting /at 20/09/2019 1600` adds an `event` task"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Expected outcome: "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        [E][x] CS2103T team meeting (at: 20 September 2019 04.00PM)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Now thee have 5 tasks in thou list."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#### **2.2.10 Adding a Todo task: `todo`**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Adds a task with type `todo` to the list."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Format: `todo TASK`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Example: `todo print lecture slides` adds a `todo` task"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "##### Expected outcome: "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "``` "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        [T][x] print lecture slides"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Now thee have 5 tasks in thou list."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "```"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "## 3. Command summary"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Bye: `bye`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Delete: `delete INDEX`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `delete 1`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Done: `done INDEX`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `done 1`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Find: `find KEYWORD`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `find call`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* List: `list`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Undo: `undo`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* View: `view INDEX`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `view 1`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Add Deadline: `deadline TASK /by DD/MM/YY HHMM`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `deadline CS2101 peer review /by 02/10/2019 2359`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Add Event: `event TASK /at DD/MM/YY HHMM`"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `event CS2103T team meeting /at 20/09/2019 1600`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "* Add Todo: `todo TASK`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    * example: `todo print lecture slides`"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 187,
      "-": 19
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " * This control represents a dialog box consisting of an ImageView"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " * to represent the speaker\u0027s face and a label containing text from the speaker."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assert !text.isEmpty() : \"text should not be empty\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assert !text.isEmpty() : \"text should not be empty\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 60
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Constructs an instance of Duke with a new TextUi, Storage and TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.ui \u003d new TextUi();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.taskList \u003d storage.load();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String nextCommand \u003d input;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Command command \u003d parser.parse(nextCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String rtn \u003d command.execute(this.taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.storage.update(this.taskList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return rtn;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String greeting() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return this.ui.greeting();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 31,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            stage.setTitle(\"Duke Orsino\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().greeting();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yewon0303": 34
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/olivia.jpg\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dukeOrsino.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.greeting(), dukeImage));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yewon0303": 56
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Parses input by user into Command, and other relevant details"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * such as the deadline, event date, or delete task index."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param fullCommand entered by the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @return Command command to be executed"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String[] split \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String first \u003d split[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Command command \u003d new Command();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                return oneWordCommandParser(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                return multWordsCommandParser(fullCommand, split);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            System.out.println(de);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Parses one word command input by user such as Undo, Bye, List."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param command one word command input by the user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @return command to be returned to main parse function"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Command oneWordCommandParser(String command) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Command returnCommand \u003d new Command();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"undo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            returnCommand \u003d new UndoCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            returnCommand \u003d new ByeCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            returnCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            returnCommand \u003d new HelpCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return returnCommand;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Parses commands consisting of additional details, such as"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * \"find findIndex\", \"view viewIndex\", \"todo Task\", \"deadline Task /by deadline\", \"event Task /at date\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * \"done doneIndex\", \"delete deleteIndex\"."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param fullCommand unparsed String input by the user"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param split parsed form of input by the user"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @return command to be returned to the main parse function"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Command multWordsCommandParser(String fullCommand, String[] split) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String keyword \u003d split[0];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Command returnCommand \u003d new Command();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"find\": //find all tasks containing keyword"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            String searchWord \u003d split[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            returnCommand \u003d new FindCommand(searchWord);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"view\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            int searchTask \u003d Integer.parseInt(split[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            returnCommand \u003d new ViewCommand(searchTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"todo\": //create Todo Task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            returnCommand \u003d addCommandParser(\"todo\", fullCommand, split);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"deadline\": //create Deadline Task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            returnCommand \u003d addCommandParser(\"deadline\", fullCommand, split);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"event\": //create Event Task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            returnCommand \u003d addCommandParser(\"event\", fullCommand, split);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"done\": //mark Task done"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                throw new DukeException(\"Please enter in the format done [task index]\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                TaskList.addCommand(CommandEnum.Commands.DONE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                int doneTask \u003d Integer.parseInt(split[1]) - 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                returnCommand \u003d new DoneCommand(doneTask);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"delete\": //delete Task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                throw new DukeException(\"Please enter in the format delete [task index]\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                TaskList.addCommand(CommandEnum.Commands.DELETE);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                int wantDelete \u003d Integer.parseInt(split[1]) - 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                returnCommand \u003d new DeleteCommand(wantDelete);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        default: throw new DukeException(\"I\u0027m sorry, I don\u0027t understand you.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return returnCommand;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Parses commands input by user that results in addition to tehe current TaskList."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param type task type: todo, event, deadline"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param fullCommand unparsed String input by the user"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param split parsed form of input by the user"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @return command to be returned to the main parse function"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Command addCommandParser(String type, String fullCommand, String[] split) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Command returnCommand \u003d new Command();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"todo\": //Todo Task"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            TaskList.addCommand(CommandEnum.Commands.ADD);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            Todo newTodo \u003d new Todo(fullCommand.substring(5));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            returnCommand \u003d new AddCommand(newTodo);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"deadline\": //Deadline Task"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            String[] parsedTask \u003d fullCommand.substring(9).split(\"/by\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            if (parsedTask.length !\u003d 2) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                throw new DukeException(\"Please enter deadline in the format /by [deadline]\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                TaskList.addCommand(CommandEnum.Commands.ADD);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(parsedTask);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                returnCommand \u003d new AddCommand(newDeadline);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case \"event\": //Event Task"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            String[] parsedTask1 \u003d fullCommand.substring(6).split(\"/at\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            if (parsedTask1.length !\u003d 2) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                throw new DukeException(\"Please enter date or time in the format /at [date or time]\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                TaskList.addCommand(CommandEnum.Commands.ADD);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                Event newEvent \u003d new Event(parsedTask1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                returnCommand \u003d new AddCommand(newEvent);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        default: throw new DukeException(\"I\u0027m sorry, I don\u0027t understand you.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return returnCommand;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 159
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static final String DEFAULT_STORAGE_PATH \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            \"/Users/Yewon/Documents/NUS/Y2S1/CS2103T/iP/duke/src/main/java/dukeTaskList.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Loads the existing TaskList from TaskList.txt file on the hard drive."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @return TaskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        ArrayList\u003cTask\u003e rtn \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            File file \u003d new File(DEFAULT_STORAGE_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            Scanner scn \u003d new Scanner(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            while (scn.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                Task now \u003d fileDecoder(scn.nextLine());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                rtn.add(now);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            TextUi.show(new DukeException(\"File cannot be found.\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            TextUi.show(de);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return new TaskList(rtn);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Decodes the lines saved in TaskList.txt file in the hard drive"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * and translates them to relevant Task to be saved in TaskList."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Task fileDecoder(String line) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String[] split \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String first \u003d split[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        boolean isDone \u003d checkIsDone(split[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        switch (first) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case (\"T\"): //Todo Task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            Todo newTodo \u003d new Todo(isDone, split[2]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            task \u003d newTodo;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case (\"D\"): //Deadline Task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(isDone, split[2], split[3]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            task \u003d newDeadline;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case (\"E\"): //Event Task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            Event newEvent \u003d new Event(isDone, split[2], split[3]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            task \u003d newEvent;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        default: //File cannot be read"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            throw new DukeException(\"The file is corrupt!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private boolean checkIsDone(String num) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return num.equals(\"1\"); //returns true if 1 (done)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Updates TaskList.txt file on the hard drive and re-saves the file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param commands stored in TaskList"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void update(TaskList commands) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            FileWriter fw \u003d new FileWriter(DEFAULT_STORAGE_PATH);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            String text \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            ArrayList\u003cTask\u003e commandsArrayList \u003d commands.getArrayList();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            for (Task now : commandsArrayList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                text +\u003d now.saveTask() + \"\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            fw.write(text);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            TextUi.show(new DukeException(\"IOException detected!\"));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 99
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.command.CommandEnum.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static ArrayList\u003cCommands\u003e commands;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static Task deletedTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static Task doneTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.commands \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.commands \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static void addCommand(Commands command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        commands.add(command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Task remove(int wantToRemove) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return this.taskList.remove(wantToRemove);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Task get(int wantToGet) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return this.taskList.get(wantToGet);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public ArrayList\u003cTask\u003e getArrayList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Commands getCommand() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return this.commands.get(this.commands.size() - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void setDeletedTask(Task deleted) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        deletedTask \u003d deleted;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static Task getDeletedTask() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void setDoneTask(Task done) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        doneTask \u003d done;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static Task getDoneTask() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Decodes an ArrayList of String into a TaskList object."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param fullString in ArrayList"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @return TaskList"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public TaskList decodeTaskList(ArrayList\u003cString\u003e fullString) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        for (String line : fullString) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            String[] parsed \u003d line.split(\"|\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            Task newTask \u003d taskDecoder(parsed);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            this.taskList.add(newTask);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return new TaskList(this.taskList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private boolean doneCheck(String num) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        //returns true if done (1)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return num.equals(\"1\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Decodes the task from an array of String"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * and translates into a Task object."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param parsed lines"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Task taskDecoder(String[] parsed) throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String command \u003d parsed[0];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        if (parsed.length \u003c 3) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            throw new DukeException(\"Insufficient information provided.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            boolean isDone \u003d doneCheck(parsed[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            if (command.equals(\"T\") \u0026\u0026 parsed.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                Task todo \u003d new Todo(isDone, parsed[2]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                return todo;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            } else if (command.equals(\"D\") \u0026\u0026 parsed.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                Task deadline \u003d new Deadline(isDone, parsed[2], parsed[3]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                return deadline;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            } else if (command.equals(\"E\") \u0026\u0026 parsed.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                Task event \u003d new Event(isDone, parsed[2], parsed[3]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                return event;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                throw new DukeException(\"Task not recognised by the program!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String rtn \u003d \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        for (Task task : this.taskList) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            rtn +\u003d \"\\n\" + task;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return rtn;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yewon0303": 130
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import static duke.ui.TextUi.NEWLINE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Task newTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public AddCommand(Task newTask) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super.carryOn \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.newTask \u003d newTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private String addDone(int size) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String rtn \u003d \"Got it. I\u0027ve added this task: \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + NEWLINE + this.newTask + NEWLINE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"Now thee have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return rtn;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        taskList.add(this.newTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return addDone(taskList.getSize());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 29
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super.carryOn \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return TextUi.bye();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 15
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    protected boolean carryOn;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public boolean getCarryOn() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return this.carryOn;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 20
    }
  },
  {
    "path": "src/main/java/duke/command/CommandEnum.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class CommandEnum {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public enum Commands {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        ADD,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        DELETE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        DONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yewon0303": 10
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import static duke.ui.TextUi.NEWLINE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private int wantToDelete;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Task deletedTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Constructs an instance of DeleteCommand given the index of task to be deleted."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param wantToDelete index of the task to be deleted"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public DeleteCommand(int wantToDelete) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assert wantToDelete \u003e\u003d 0 : \"the index should not be negative\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super.carryOn \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.wantToDelete \u003d wantToDelete;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private String deleteDone(int size) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assert size \u003e\u003d 0 : \"size of taskList cannot be negative\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String rtn \u003d \"Noted. I\u0027ve removed this task: \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + NEWLINE + this.deletedTask + NEWLINE"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"Now thee have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return rtn;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            this.deletedTask \u003d taskList.remove(this.wantToDelete);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            taskList.setDeletedTask(this.deletedTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            return deleteDone(taskList.getSize());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            return (new DukeException(\"The task thee want to delete does not exist.\")).toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 42
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    protected int doneTaskNum;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private Task doneTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Constructs an instance of DoneCommand given the task index to be marked done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param doneTaskNum index of the task to be marked done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public DoneCommand(int doneTaskNum) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assert doneTaskNum \u003e\u003d 0 : \"the index should not be negative\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super.carryOn \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.doneTaskNum \u003d doneTaskNum;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private String doneDone(Task doneTask) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String rtn \u003d \"Nice! I\u0027ve marked this task as done: \" + doneTask;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return rtn;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            this.doneTask \u003d taskList.get(this.doneTaskNum);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            doneTask.markIsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            taskList.setDoneTask(doneTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            return doneDone(doneTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            return (new DukeException(\"The task thee want to mark done does not exist.\")).toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 38
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String findKeyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public FindCommand(String findKeyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super.carryOn \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.findKeyword \u003d findKeyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Executes the find command and returns all tasks with the given keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @param taskList current taskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @return all tasks containing the keyword"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assert !this.findKeyword.isEmpty() : \"The search keyword cannot be empty\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d this.taskList.getArrayList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        ArrayList\u003cTask\u003e rtnTaskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            String fullTask \u003d task.getTask();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            if (fullTask.contains(this.findKeyword)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                rtnTaskArrayList.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return TextUi.findCommandPrint(rtnTaskArrayList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 38
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import static duke.ui.TextUi.NEWLINE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super.carryOn \u003d true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String rtn \u003d \"Here are the commands available:\" + NEWLINE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"bye\" + NEWLINE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"delete [index]\" + NEWLINE"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"done [index]\" + NEWLINE"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"find [keyword]\" + NEWLINE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"list\" + NEWLINE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"undo\" + NEWLINE"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"view [index]\" + NEWLINE"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"todo [task]\" + NEWLINE"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"event [task] /at [date time]\" + NEWLINE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"deadline [task] /by [date time]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return rtn;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import static duke.ui.TextUi.NEWLINE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super.carryOn \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String rtn \u003d \"Here are the \" + taskList.getSize()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \" tasks in thou list:\" + NEWLINE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            rtn +\u003d (i + 1) + \".\" + taskList.get(i) + NEWLINE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return rtn;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 24
    }
  },
  {
    "path": "src/main/java/duke/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.command.CommandEnum.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public UndoCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super.carryOn \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private String undo() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return \"Nice! Undone successful.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private void undoCommand(Commands lastCommand, int size, TaskList taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        switch (lastCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case ADD: //undo \u003d delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            new DeleteCommand(size - 1).execute(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case DELETE: //undo \u003d add back"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            Task deletedTask \u003d TaskList.getDeletedTask();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            new AddCommand(deletedTask).execute(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        case DONE: //undo \u003d undone"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            Task doneTask \u003d taskList.getDoneTask();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            doneTask.undoMarkDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            Commands lastCommand \u003d taskList.getCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            int size \u003d taskList.getSize();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            undoCommand(lastCommand, size, taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            return undo();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            return (new DukeException(\"The command cannot be undone.\")).toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 45
    }
  },
  {
    "path": "src/main/java/duke/command/ViewCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private int searchTaskIdx;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public ViewCommand(int searchTaskIdx) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super.carryOn \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.searchTaskIdx \u003d searchTaskIdx;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String execute(TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return searchTaskIdx + \". \" + taskList.get(searchTaskIdx - 1).toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.text.Format;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " * Task type of Deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " * Has the property of deadline date and time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private SimpleDateFormat input \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Constructor for Deadline Task from user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Deadline(String[] parsedTask) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super(\"Deadline\", parsedTask[0]); //parent constructor"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.by \u003d parsedTask[1]; //without \"/by \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            this.date \u003d input.parse(by);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            throw new DukeException(\"Parsing error detected.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Constructor for Deadline Task from hard drive storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Deadline(boolean isDone, String task, String by) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super(isDone, \"Deadline\", task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            this.date \u003d input.parse(by);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            throw new DukeException(\"Parsing error detected.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private String printDate() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Format formatter \u003d new SimpleDateFormat(\"dd MMMM yyyy hh.mmaa\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String dateFormatted \u003d formatter.format(this.date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return dateFormatted;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return \"D\" + super.saveTask() + \" | \" + this.by;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return \" [D]\" + super.toString() + \" (by: \" + this.printDate() + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 60
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.text.Format;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " * Task type of Event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " * Has the property of date and time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private SimpleDateFormat input \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Constructor for Event Task from user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Event(String[] parsedTask) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super(\"Event\", parsedTask[0]); //parent constructor"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.at \u003d parsedTask[1]; //without \"/at \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            this.date \u003d input.parse(at);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            throw new DukeException(\"Parsing error detected.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Constructor for Event Task from hard drive storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Event(boolean isDone, String task, String at) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super(isDone, \"Event\", task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            this.date \u003d input.parse(at);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            throw new DukeException(\"Parsing error detected.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Prints the date in the format required."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @return date in dd MMMM yyyy hh.mmaa format"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String printDate() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        Format formatter \u003d new SimpleDateFormat(\"dd MMMM yyyy hh.mmaa\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String dateFormatted \u003d formatter.format(this.date);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return dateFormatted;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return \"E\" + super.saveTask() + \" | \" + this.at;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return \" [E]\" + super.toString() + \" (at: \" + this.printDate() + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 65
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String type; //Todo, Deadline, Event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Constructor for Task from user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Task(String type, String task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Constructor for Task from hard drive storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Task(boolean isDone, String type, String task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void markIsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void undoMarkDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.isDone \u003d this.isDone \u0026\u0026 false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public boolean checkIsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Displays tick or cross based on whether the task is done or not."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String displayIsDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return this.isDone"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                ? \"[\" + \"\\u2713\" + \"] \" //done"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                : \"[\" + \"\\u2718\" + \"] \"; //not done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private String isDoneInt(boolean isDone) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Saves the Task in the format that can easily be retrieved when the file"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * is opened next time."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * @return Task decoded into a format suitable for saving on hard disc."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return String.format(\" | \" + isDoneInt(this.isDone)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \" | \" + this.task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return String.format(this.displayIsDone() + this.task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 70
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super(\"Todo\", task);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public Todo(boolean isDone, String task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        super(isDone, \"Todo\", task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return \"T\" + super.saveTask();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return \" [T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 24
    }
  },
  {
    "path": "src/main/java/duke/ui/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    //class to represent exceptions specific to Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return \"\\t☹ OOPS!!! \" + this.errorMessage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 16
    }
  },
  {
    "path": "src/main/java/duke/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static final String DIVIDER \u003d  \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static final String NEWLINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Prints the welcome message including the Hello greeting."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static String greeting() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String rtn \u003d \"Viola, if music be the food of love, play on.\" + NEWLINE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"I am Duke Orsino.\" + NEWLINE"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                + \"Type \\\"help\\\" for a list of commands available\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return rtn;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static void show(DukeException de) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        System.out.println(de);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     * Prints the farewell message when the user wishes to end the program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static String findCommandPrint(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        String rtn \u003d DIVIDER + NEWLINE + \"\\tHere are the matching tasks in thou list:\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            rtn +\u003d  (i + 1) + \".\" + tasks.get(i) + NEWLINE;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            rtn +\u003d \"There is no task with the keyword in the list.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return rtn;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public static String bye() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        return \"Bye. Hope to see thee again soon!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 45
    }
  },
  {
    "path": "src/main/java/dukeTaskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "E | 1 | dinner with parents  |  21/09/2019 1900"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "D | 1 | cs2105 assignment 1  |  2/10/2019 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "T | 0 | eat dinner"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "D | 0 | cs2105 assignment 1  |  2/10/2019 2359"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 4
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"0.5\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            \u003cFont name\u003d\"Avenir Book\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                 AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "              mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                  vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yewon0303": 25
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void saveTask_Test_success() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assertEquals(\"D | 1 | play tennis | 02/02/2019 2000\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                new Deadline(true, \"play tennis\", \"02/02/2019 2000\").saveTask());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void toString_Test_success() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assertEquals(\" [D][✘] report submission (by: 06 August 2008 11.00PM)\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                (new Deadline(false, \"report submission\", \"06/08/2008 2300\")).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 22
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void printDate_Test_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            assertEquals(\"09 January 2019 06.00PM\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                    new Event(false, \"read book\", \"09/01/2019 1800\").printDate());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            assertEquals(\"31 December 2019 08.00AM\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                    new Event(false, \"read book\", \"31/12/2019 0800\").printDate());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "            assertEquals(\"Parsing error detected.\", de.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 22
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void displayIsDone_Test_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assertEquals(\"[✓] \", new Todo(true, \"return book\").displayIsDone());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assertEquals(\"[✘] \", new Todo(false, \"return book\").displayIsDone());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void saveTask_Test_success() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assertEquals(\"T | 0 | eat dinner\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                new Todo(false, \"eat dinner\").saveTask());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assertEquals(\"D | 1 | play tennis | 02/02/2019 2000\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                new Deadline(true, \"play tennis\", \"02/02/2019 2000\").saveTask());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void toString_Test_success() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assertEquals(\" [D][✘] report submission (by: 06 August 2008 11.00PM)\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                (new Deadline(false, \"report submission\", \"06/08/2008 2300\")).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 30
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import duke.ui.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void saveTask_Test_success() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assertEquals(\"T | 0 | eat dinner\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                new Todo(false, \"eat dinner\").saveTask());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assertEquals(\"T | 1 | play tennis\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                new Todo(true, \"play tennis\").saveTask());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    public void toString_Test_success() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "        assertEquals(\" [T][✘] report submission\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "                (new Todo(false, \"report submission\")).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 23
    }
  },
  {
    "path": "test-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yewon0303"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yewon0303"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "yewon0303": 34
    }
  }
]
