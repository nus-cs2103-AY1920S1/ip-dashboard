[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "# GOD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "|Tutorial|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "|---------------|"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "|[Gradle Tutorial](tutorials/gradleTutorial.md)|"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "|[Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)|"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "|JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]|"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "jakq": 6,
      "-": 33
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 34,
      "-": 9
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "D | 1 | return book | 6/6/2019 1800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": "E | 0 | project meeting | 10/8/2019 2000-2200"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": "T | 0 | borrow book"
      }
    ],
    "authorContributionMap": {
      "jakq": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a deadline-type task which inherits from Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected  String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates a deadline task with description and deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param description Description of deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param by Deadline of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assert by.length() \u003d\u003d 10 || by.length() \u003d\u003d 15: \"Parser failed to process deadline correctly.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "            this.date \u003d formatter.parse(by);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "        } catch (ParseException pe){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "            System.out.println(\"Deadline: Something serious happened here...\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Returns a string representation of the deadline object for UI."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return A string representation of the deadline object for UI."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Returns a string representation of the deadline object for Storage."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return A string representation of the deadline object for Storage."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return \"D\" + super.saveString() + \" | \" + this.by + \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 49
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "        dialog.setMinHeight(Label.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jakq"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jakq"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jakq"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jakq"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jakq"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jakq"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jakq"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 60
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a Duke object from which all process run from."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private static Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private static TaskList tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private static UI ui \u003d new UI();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jakq"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jakq"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jakq"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jakq"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jakq"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jakq"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jakq"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jakq"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jakq"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jakq"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jakq"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jakq"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jakq"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jakq"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jakq"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jakq"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jakq"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jakq"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jakq"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jakq"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jakq"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jakq"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jakq"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jakq"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jakq"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jakq"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jakq"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jakq"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jakq"
        },
        "content": "        });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jakq"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jakq"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jakq"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jakq"
        },
        "content": "        });"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jakq"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jakq"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jakq"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jakq"
        },
        "content": "        });"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jakq"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jakq"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jakq"
        },
        "content": "        });"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jakq"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jakq"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String dukeResponse \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jakq"
        },
        "content": "        if (duke.equals(\"bye\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jakq"
        },
        "content": "            dukeResponse \u003d ui.bye();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jakq"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jakq"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jakq"
        },
        "content": "                DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jakq"
        },
        "content": "                DialogBox.getDukeDialog(dukeResponse, duke)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jakq"
        },
        "content": "        );"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jakq"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String dukeText \u003d tasks.addTask(input);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return dukeText;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 141
    }
  },
  {
    "path": "src/main/java/DukeActionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a DukeActionException that inherits from DukeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Occurs when there are extra arguments to the action given to Duke."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class DukeActionException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates a DukeActionException to be thrown."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param errorMessage Represents the Action that encountered this error."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public DukeActionException(String errorMessage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 18
    }
  },
  {
    "path": "src/main/java/DukeDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a DukeDeadlineException that inherits from DukeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Occurs when the deadline of the task is not formatted properly or missing."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class DukeDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates a DukeDeadlineException to be thrown."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param errorMessage Represents the deadline task that encountered this error."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public DukeDeadlineException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 17
    }
  },
  {
    "path": "src/main/java/DukeEmptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a DukeEmptyException that inherits from DukeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Occurs when the description of the task is missing."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class DukeEmptyException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates a DukeEmptyException to be thrown."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param errorMessage Represents the task that encountered this error."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public DukeEmptyException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "        super(\"The description of a \" + errorMessage + \" cannot be empty.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 16
    }
  },
  {
    "path": "src/main/java/DukeEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a DukeEventException that inherits from DukeException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Occurs when the duration of the task is not formatted properly or missing."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class DukeEventException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates a DukeEventException to be thrown."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param errorMessage Represents the event task that encountered this error."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public DukeEventException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 17
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a DukeException that inherits from Exception."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates a DukeException to be thrown."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param errorMessage Represents the error to be displayed."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "        super(errorMessage + \"\\n(Enter \\\"help\\\" for commands in duke.)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 16
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents an event-type task which inherits from Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected String on;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected Date startTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected Date endTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates an event task with description and duration."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param description Description of event task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param on Duration of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public Event(String description, String on) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": "        this.on \u003d on;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assert on.length() \u003d\u003d 20 : \"Parser failed to process event correctly.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "            this.date \u003d formatter.parse(on.substring(0, 9));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "            formatter \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": "            this.startTime \u003d formatter.parse(on.substring(10, 14));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": "            this.endTime \u003d formatter.parse(on.substring(15));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "            System.out.println(\"Event: Something serious happened here...\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Returns a string representation of the event object for UI."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return A string representation of the event object for UI."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.on + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Returns a string representation of the event object for Storage."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return A string representation of the event object for Storage."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jakq"
        },
        "content": "        int done \u003d this.getDone() ? 1 : 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return \"E\" + super.saveString() + \" | \" + this.on + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 55
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "            stage.setTitle(\"God\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().displayGreeting();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Displays a welcome message when the application first starts up."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public void displayGreeting() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String logo \u003d \" ___     __   ____\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"|  __|  / _ \\\\ |  __ \\\\\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"| |  _  | | | | |  |  | |\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"| |_| | | |_| | |  |_| |\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"|___/  \\\\__/ |____/\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jakq"
        },
        "content": "        logo +\u003d \"Hello! I\u0027m God\\n\" + \"Here are your tasks for today:\\n\" + duke.getResponse(\"list\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jakq"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(logo, dukeImage));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jakq"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jakq"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jakq"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jakq"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jakq"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 62
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a Parser which makes sense of user-input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Processes the user-input\u0027s statement for TaskList to make-sense of."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * This method throws DukeExceptions because of error in input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Exceptions caught would return an error message, otherwise a formatted"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * and processed user-input string would be returned."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param raw User-input from TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return A formatted and processed user-input string for TaskList to use."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public static String[] processTask(String[] raw) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "            if (raw[0].equals(\"todo\") || raw[0].equals(\"deadline\") || raw[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": "                return taskCommand(raw); // {todo/deadline/event, desc, dateline if applicable}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "                String[] task \u003d new String[3];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "                task[0] \u003d raw[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": "                String action \u003d task[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "                if (action.equals(\"list\") || action.equals(\"bye\") || action.equals(\"help\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    if (raw.length \u003e 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "                        throw new DukeActionException(\"\\u2639 OOPS!!! I\u0027m sorry, but \" + raw[0] + \" should not have\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "                                \" more than 1 argument :-(\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    task[1] \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    task[2] \u003d \"\"; // {list/bye, \"\", \"\"}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": "                } else if (action.equals(\"done\") || action.equals(\"delete\") || action.equals(\"find\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    if (raw.length \u003e 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "                        throw new DukeActionException(\"\\u2639 OOPS!!! I\u0027m sorry, but \" + raw[0] + \" should not have\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jakq"
        },
        "content": "                                \" more than 2 arguments :-(\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    task[1] \u003d raw[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    task[2] \u003d \"\"; // {done/delete/find, number for done or delete, word for find, \"\"}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jakq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    task[0] \u003d \"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\nEnter \\\"help\\\" for \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "                            + \"commands in duke.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    task[1] \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    task[2] \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jakq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jakq"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jakq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jakq"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jakq"
        },
        "content": "            String[] exception \u003d new String[3];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jakq"
        },
        "content": "            exception[0] \u003d de.getMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jakq"
        },
        "content": "            exception[1] \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jakq"
        },
        "content": "            exception[2] \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jakq"
        },
        "content": "            return exception;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private static String[] taskCommand(String[] raw) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] task \u003d new String[3];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jakq"
        },
        "content": "        task[0] \u003d raw[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jakq"
        },
        "content": "        if (raw.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jakq"
        },
        "content": "            throw new DukeEmptyException(raw[0]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jakq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jakq"
        },
        "content": "            raw[0] \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jakq"
        },
        "content": "            task[1] \u003d String.join(\" \", raw).substring(1); //{command, desc+date, \"\"}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jakq"
        },
        "content": "            if (task[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jakq"
        },
        "content": "                return deadlineCommand(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jakq"
        },
        "content": "            } else if (task[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jakq"
        },
        "content": "                return eventCommand(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jakq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jakq"
        },
        "content": "                task[2] \u003d \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jakq"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jakq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private static String[] deadlineCommand(String[] task) throws DukeDeadlineException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] desc_By \u003d task[1].split(\"/by\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jakq"
        },
        "content": "        if (desc_By.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jakq"
        },
        "content": "            throw new DukeDeadlineException(\"\\u2639 OOPS!!! I\u0027m sorry, but the date of a deadline must be in the format\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    + \" \\\"dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jakq"
        },
        "content": "        boolean hasDateFormat \u003d (desc_By[1].split(\"/\").length \u003d\u003d 3); // {\"18\", \"12\", \"2019 1800\"}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jakq"
        },
        "content": "        boolean hasTimeFormat \u003d (desc_By[1].split(\"-\").length \u003d\u003d 1); // {\"18/12/2019 1800\"}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jakq"
        },
        "content": "        if (!hasDateFormat || !hasTimeFormat) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jakq"
        },
        "content": "            throw new DukeDeadlineException(\"\\u2639 OOPS!!! I\u0027m sorry, but the date of a deadline must be in the format\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    + \" \\\"dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jakq"
        },
        "content": "        task[1] \u003d desc_By[0].trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jakq"
        },
        "content": "        task[2] \u003d desc_By[1].trim();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private static String[] eventCommand(String[] task) throws DukeEventException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] desc_At \u003d task[1].split(\"/at\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jakq"
        },
        "content": "        if (desc_At.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jakq"
        },
        "content": "            throw new DukeEventException(\"\\u2639 OOPS!!! I\u0027m sorry, but the date of a event must be in the format\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    + \" \\\"dd/MM/yyyy HHmm-HHmm\\\"\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jakq"
        },
        "content": "        boolean hasDateFormat \u003d (desc_At[1].split(\"/\").length \u003d\u003d 3); // {\"18\", \"12\", \"2019 1800\"}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jakq"
        },
        "content": "        boolean hasTimeFormat \u003d (desc_At[1].split(\"-\").length \u003d\u003d 2); // {\"18/12/2019 1800\", \"2000\"}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jakq"
        },
        "content": "        if (!hasDateFormat || !hasTimeFormat) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jakq"
        },
        "content": "            throw new DukeEventException(\"\\u2639 OOPS!!! I\u0027m sorry, but the date of a event must be in the format\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    + \" \\\"dd/MM/yyyy HHmm-HHmm\\\"\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jakq"
        },
        "content": "        task[1] \u003d desc_At[0].trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jakq"
        },
        "content": "        task[2] \u003d desc_At[1].trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 108
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a Storage object that reads and writes to files."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected String output;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates a Storage object with the path of the file to be read."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String folderPath \u003d System.getProperty(\"user.dir\") + \"\\\\data\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": "        File directory \u003d new File(folderPath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "        directory.mkdirs();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String filePath \u003d System.getProperty(\"user.dir\") + \"\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "        this.output \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Reads the input from the file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @throws IOException If the input of the file is wrong."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public ArrayList\u003cTask\u003e readInputFile() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "            ArrayList\u003cTask\u003e savedTaskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jakq"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(this.file));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": "                savedTaskList.add(parse(line.trim()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jakq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jakq"
        },
        "content": "            return savedTaskList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jakq"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jakq"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jakq"
        },
        "content": "    private Task parse(String line) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] lineArr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jakq"
        },
        "content": "        final String TASK \u003d lineArr[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jakq"
        },
        "content": "        final boolean COMPLETED \u003d lineArr[1].equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jakq"
        },
        "content": "        final String DESCRIPTION \u003d lineArr[2];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jakq"
        },
        "content": "        final String DATE \u003d TASK.equals(\"T\") ? null : lineArr[3];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jakq"
        },
        "content": "        switch (TASK) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jakq"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jakq"
        },
        "content": "            Task todo \u003d new ToDo(DESCRIPTION);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jakq"
        },
        "content": "            if (COMPLETED) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jakq"
        },
        "content": "                todo.setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jakq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jakq"
        },
        "content": "            return todo;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jakq"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jakq"
        },
        "content": "            Task deadline \u003d new Deadline(DESCRIPTION, DATE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jakq"
        },
        "content": "            if (COMPLETED) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jakq"
        },
        "content": "                deadline.setDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jakq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jakq"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jakq"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jakq"
        },
        "content": "            Task event \u003d new Event(DESCRIPTION, DATE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jakq"
        },
        "content": "            if (COMPLETED) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jakq"
        },
        "content": "                event.setDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jakq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jakq"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Saves the output of the Storage object into a file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param tasklist List of tasks to be written into the file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasklist) throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jakq"
        },
        "content": "        this.file.createNewFile();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jakq"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.file));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jakq"
        },
        "content": "        this.output \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jakq"
        },
        "content": "        for (Task t : tasklist) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jakq"
        },
        "content": "            this.output +\u003d t.saveString();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jakq"
        },
        "content": "        bw.write(output);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jakq"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 93
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected static int currTotal;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates a task with description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "        currTotal++;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Returns the total number of tasks currently."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return The total number of tasks currently"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public static int getCurrTotal() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return currTotal;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected static void decCurrTotal() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": "        currTotal--;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return The description of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Returns if the task is done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return If the task is done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Sets the task to be done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jakq"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Returns the appropriate icon depending on the completed status of the task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return The appropriate icon depending on the completed status of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Returns a string representation of the task object for UI."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return A string representation of the task object for UI."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Returns a string representation of the task object for Storage."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return A string representation of the task object for Storage."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jakq"
        },
        "content": "        int done \u003d this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return \" | \" + done + \" | \" + this.description;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 81
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a TaskList which manipulates the list of tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasklist;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates a TaskList object with the Storage object to be read from or written to."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param storage To be read from or written to."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "        this.tasklist \u003d storage.readInputFile();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Based on what processed task returns from the Parser, the TaskList would return and act accordingly."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * If its adding or modifying of tasks, the UI and Storage would be activated. Bye statement would terminate"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * the TaskList object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param s String from the Storage input file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return A task string for the UI and Storage to either echo or save."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String addTask(String s) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] task \u003d s.split(\" \"); // task array with many individual strings"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String statement \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] modifiedTask \u003d Parser.processTask(task); // modified task array {[command], [description], [date]}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assert modifiedTask.length \u003d\u003d 3 : \"Parser failed to process command correctly\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jakq"
        },
        "content": "        final String COMMAND \u003d modifiedTask[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": "        final String DESCRIPTION \u003d modifiedTask[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "        final String DATE \u003d modifiedTask[2];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jakq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jakq"
        },
        "content": "            switch (COMMAND) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    ToDo todo \u003d new ToDo(DESCRIPTION);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    tasklist.add(todo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    statement \u003d \"Got it. I\u0027ve added this task:\\n  \" + todo + \"\\nNow you have \" + Task.getCurrTotal()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jakq"
        },
        "content": "                            + \" tasks in the list.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    storage.save(tasklist);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    return statement;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jakq"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    Deadline deadline \u003d new Deadline(DESCRIPTION, DATE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    tasklist.add(deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    statement \u003d \"Got it. I\u0027ve added this task:\\n  \" + deadline + \"\\nNow you have \" + Task.getCurrTotal()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jakq"
        },
        "content": "                            + \" tasks in the list.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    storage.save(tasklist);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    return statement;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jakq"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    Event event \u003d new Event(DESCRIPTION, DATE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    tasklist.add(event);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    statement \u003d \"Got it. I\u0027ve added this task:\\n  \" + event + \"\\nNow you have \" + Task.getCurrTotal()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jakq"
        },
        "content": "                            + \" tasks in the list.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    storage.save(tasklist);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    return statement;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jakq"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    return checkList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jakq"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    statement \u003d  complete(Integer.parseInt(DESCRIPTION));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    storage.save(tasklist);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    return statement;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jakq"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    statement \u003d delete(Integer.parseInt(DESCRIPTION));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    storage.save(tasklist);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    return statement;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jakq"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    return findList(DESCRIPTION);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jakq"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    return \"bye\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jakq"
        },
        "content": "                case \"help\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    return help();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jakq"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    return COMMAND;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jakq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jakq"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jakq"
        },
        "content": "            return ioe.getMessage().toString();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected String checkList() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jakq"
        },
        "content": "        if (this.tasklist.isEmpty()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jakq"
        },
        "content": "            return \"\\u2639 OOPS!!! I\u0027m sorry, but there are no tasks in your list :-(\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String s \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jakq"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasklist.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jakq"
        },
        "content": "            Task t \u003d this.tasklist.get(i);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jakq"
        },
        "content": "            s +\u003d ((i+1) + \".\" + t + \"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return s.substring(0, s.length() - 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected String findList(String keyword) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jakq"
        },
        "content": "        if (this.tasklist.isEmpty()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jakq"
        },
        "content": "            return \"\\u2639 OOPS!!! I\u0027m sorry, but there are no tasks in your list :-(\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String s \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jakq"
        },
        "content": "        int idx \u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jakq"
        },
        "content": "        for (Task t : tasklist) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jakq"
        },
        "content": "            if (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jakq"
        },
        "content": "                s +\u003d (\"\" + idx + t + \"\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jakq"
        },
        "content": "                idx++;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jakq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return s.substring(0, s.length() - 1); // removing the extra \"\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected String complete(int i) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jakq"
        },
        "content": "        if (i \u003e tasklist.size()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jakq"
        },
        "content": "            return \"\\u2639 OOPS!!! I\u0027m sorry, but I have no such task in your list :-(\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jakq"
        },
        "content": "        Task t \u003d this.tasklist.get(i - 1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jakq"
        },
        "content": "        t.setDone();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String statement \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + t;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return statement;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected String delete(int i) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jakq"
        },
        "content": "        if (i \u003e tasklist.size()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jakq"
        },
        "content": "            return \"\\u2639 OOPS!!! I\u0027m sorry, but I have no such task in your list :-(\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jakq"
        },
        "content": "        Task t \u003d this.tasklist.remove(i - 1);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jakq"
        },
        "content": "        Task.decCurrTotal();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String statement \u003d \"Noted. I\u0027ve removed this task:\\n  \" + t + \"\\nNow you have \" + Task.getCurrTotal()"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jakq"
        },
        "content": "                            + \" tasks in the list.\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return statement;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected String help() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String logo \u003d \" ___     __   ____\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    + \"|  __|  / _ \\\\ |  __ \\\\\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    + \"| |  _  | | | | |  |  | |\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    + \"| |_| | | |_| | |  |_| |\\n\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jakq"
        },
        "content": "                    + \"|___/  \\\\__/ |____/\\n\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String header \u003d \"Hello from\\n\" + logo + \"Hello! I\u0027m God\\n\" + \"Here are some tips:\\n\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String task \u003d \"To add a task, you begin with either \\\"todo\\\", \\\"deadline\\\" or \\\"event\\\".\\nFollowing that, \""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"you can add the description of the task. (ie, \\\"todo read a book\\\".)\\nIf your task is a deadline, \""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"you are required to add after the description, the date of the form \\\"/by DD/MM/YYYY\\\" or \\\"/by DD/M\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"M/YYYY HHMM\\\" (24H format).\\nIf your task is an event, you are required to add a date of the form \\\"\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"/at DD/MM/YYYY HHMM-HHMM\\\"(24H format).\\nFailure to follow the above format will result in an error \""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"response from me :-(\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String check \u003d \"To check what tasks I have stored for you enter the word \\\"list\\\".\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String doneDelete \u003d \"To mark a task as done or to delete it, enter the word \\\"done\\\" or \\\"delete\\\" followed by \""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"a whitespace and the task number to complete the aforementioned action.\\n(ie, \\\"done 2\\\" to tell me \""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"to mark task 2 as done.)\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String search \u003d \"To search for a task based on the description, enter the word \\\"find\\\" followed by a \""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"whitespace and the keyword you are looking for.\\n(ie, \\\"find book\\\" will search for all tasks with \""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"the word \\\"book\\\" in the description. Take note that the keyword is case-sensitive.)\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String end \u003d \"Hope this guide was helpful for you \\u263A\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return header + \"\\n\\n\" + task + \"\\n\\n\" + check + \"\\n\\n\" + doneDelete + \"\\n\\n\" + search + \"\\n\\n\" + end;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 156
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a todo-type task which inherits from Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates a todo task with description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param description Description of todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Returns a string representation of the todo object for UI."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return A string representation of the todo object for UI."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Returns a string representation of the todo object for Storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @return A string representation of the todo object for Storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": "        int done \u003d this.getDone() ? 1 : 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return \"T\" + super.saveString() + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 34
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": "import java.io.UnsupportedEncodingException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a UI which interacts with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "    protected PrintStream ps;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Creates a UI object to print out interactions to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Catches for unsupported encodings."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "            this.ps \u003d new PrintStream(System.out, true, \"UTF-8\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "        } catch (UnsupportedEncodingException uee) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": "            System.out.println(\"UI: Something serious happened here...\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Prints out whatever is given to it."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Works especially well for UTF-8 encoded characters."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * @param s String that is passed to UI."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public void echo(String s) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": "        ps.println(s);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Generic Greeting at the start of the programme."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return \"Hello from\\n\" + logo + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Generic farewell at the end of the programme."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jakq"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 51
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jakq": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jakq": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a ParserJUnitTesting which tests Parser."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Tests Parser.processTask with successful todo, deadline and event inputs."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public void testProcessTask_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] test1 \u003d new String[]{\"todo\", \"borrow\", \"book\"};"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] result1 \u003d new String[]{\"todo\", \"borrow book\", \"\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assertArrayEquals(result1, Parser.processTask(test1));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] test2 \u003d new String[]{\"deadline\", \"return\", \"book\", \"/by\", \"18/8/2019\", \"2000\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] result2 \u003d new String[]{\"deadline\", \"return book\", \"18/8/2019 2000\"};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assertArrayEquals(result2, Parser.processTask(test2));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] test3 \u003d new String[]{\"event\", \"reading\", \"circle\", \"/at\", \"18/8/8/2019\", \"1700-1900\"};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] result3 \u003d new String[]{\"event\", \"reading circle\", \"18/8/8/2019 1700-1900\"};"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assertArrayEquals(result3, Parser.processTask(test3));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Tests Parser.processTask with todo, deadline and event inputs that are bound to fail."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public void testProcessTask_fail() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] test1 \u003d new String[]{\"todo\"};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] fail1 \u003d new String[]{\"The description of a todo cannot be empty.\", \"\", \"\"};"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assertArrayEquals(fail1, Parser.processTask(test1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] test2 \u003d new String[]{\"deadline\", \"return book\", \"\"};"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] fail2 \u003d new String[]{\"The date of a deadline must be in the format \\\"dd/MM/yyyy HHmm\\\"\", \"\", \"\"};"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assertArrayEquals(fail2, Parser.processTask(test2));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] test3 \u003d new String[]{\"event\", \"reading circle\", \"\"};"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String[] fail3 \u003d new String[]{\"The date of a event must be in the format \\\"dd/MM/yyyy HHmm-HHmm\\\"\", \"\", \"\"};"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assertArrayEquals(fail3, Parser.processTask(test3));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 47
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jakq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jakq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jakq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jakq"
        },
        "content": " * Represents a TaskListJUnitTesting which tests TaskList."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @author Ang Kai Qi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jakq"
        },
        "content": " * @version 0.1.3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jakq"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jakq"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jakq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jakq"
        },
        "content": "     * Tests addTask of TaskList object with successful todo, deadline, event, bye and unknown inputs."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jakq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jakq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jakq"
        },
        "content": "    public void testAddTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String todo \u003d \"todo borrow book\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String resTodo \u003d \"Got it. I\u0027ve added this task:\\n  [T][\\u2718] borrow book\\nNow you have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assertEquals(resTodo, new TaskList(new Storage(\"C:\\\\Users\\\\AngKa\\\\duke\\\\src\\\\main\\\\java\\\\test.txt\"))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jakq"
        },
        "content": "                        .addTask(todo));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jakq"
        },
        "content": "        Task.decCurrTotal();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String deadline \u003d \"deadline return book /by 18/8/2019 2000\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String resDeadline \u003d \"Got it. I\u0027ve added this task:\\n  [D][\\u2718] return book (by: 18/8/2019 2000)\\nNow you \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jakq"
        },
        "content": "                               + \"have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assertEquals(resDeadline, new TaskList(new Storage(\"C:\\\\Users\\\\AngKa\\\\duke\\\\src\\\\main\\\\java\\\\test.txt\"))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jakq"
        },
        "content": "                        .addTask(deadline));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jakq"
        },
        "content": "        Task.decCurrTotal();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String event \u003d \"event reading circle /at 18/8/8/2019 1700-1900\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String resEvent \u003d \"Got it. I\u0027ve added this task:\\n  [E][\\u2718] reading circle (at: 18/8/8/2019 1700-1900)\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jakq"
        },
        "content": "                            + \"Now you have 1 tasks in the list.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assertEquals(resEvent, new TaskList(new Storage(\"C:\\\\Users\\\\AngKa\\\\duke\\\\src\\\\main\\\\java\\\\test.txt\"))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jakq"
        },
        "content": "                .addTask(event));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String bye \u003d \"bye\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String resBye \u003d \"bye\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assertEquals(resBye, new TaskList(new Storage(\"C:\\\\Users\\\\AngKa\\\\duke\\\\src\\\\main\\\\java\\\\test.txt\"))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jakq"
        },
        "content": "                        .addTask(bye));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jakq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String unknown \u003d \"unknown\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jakq"
        },
        "content": "        String resUnknown \u003d \"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jakq"
        },
        "content": "        assertEquals(resUnknown, new TaskList(new Storage(\"C:\\\\Users\\\\AngKa\\\\duke\\\\src\\\\main\\\\java\\\\test.txt\"))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jakq"
        },
        "content": "                        .addTask(unknown));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jakq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jakq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jakq": 46
    }
  }
]
