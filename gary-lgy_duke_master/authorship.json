[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    id \u0027com.github.spotbugs\u0027 version \"2.0.0\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "version \u00270.2.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    mainClassName \u003d \u0027duke.Launcher\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "spotbugs {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    excludeFilter \u003d file(\"$projectDir/config/spotbugs/excludeFilter.xml\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "task runCli(type: JavaExec, dependsOn: classes) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    main \u003d \u0027duke.Launcher\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    description \u003d \u0027Run Duke CLI\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    classpath \u003d sourceSets.main.runtimeClasspath"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    args \u003d [\u0027cli\u0027]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "task runGui(type: JavaExec, dependsOn: classes) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    main \u003d \u0027duke.Launcher\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    description \u003d \u0027Run Duke GUI\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    classpath \u003d sourceSets.main.runtimeClasspath"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    args \u003d [\u0027gui\u0027]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    archiveBaseName \u003d \u0027duke\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    archiveVersion \u003d \u00270.2.0\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    version \u003d \u002711.0.2\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "task textUiTest(type: Exec) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    description \u003d \u0027Runs text UI tests\u0027"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    group \u003d \u0027verification\u0027"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    shouldRunAfter test"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    workingDir \"$projectDir/text-ui-test\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    commandLine \u0027bash\u0027, \u0027-c\u0027, \u0027./runtest.sh\u0027"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "test.dependsOn textUiTest"
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "gary-lgy": 60
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Duke is a personal task manager that helps you track your todos, events, and"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadlines. It is in the form of a chatbot and can be used on the command line"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "as well as from a GUI."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "### Available in both CLI and GUI"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "GUI:  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "![GUI version](./Ui_300x460.png)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "CLI:  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "![CLI version](./Cli_417x460.png)  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "While the GUI may be more intuitive to use, the CLI version provides a simpler"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "and distraction-free environment for you to focus on managing your tasks.  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "The command syntax is the same in both GUI and CLI.  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Duke launches in GUI by default, the CLI version can be launched by running"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "`java -jar duke-x.x.jar cli` in your terminal, where `duke-x.x.jar` is the"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "name of the jar file you have downloaded."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "### Easily migratable"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "All your tasks are stored in a plaintext file, in a human-readable format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Depending on your platform, the file can be found at one of the following"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "locations:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "- Linux: `/home/USERNAME/.local/share/Duke/duke.txt`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "- MacOS: `/Users/USERNAME/Library/Application Support/Duke/duke.txt`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "- Windows: `C:\\Users\\USERNAME\\AppData\\Roaming\\Duke\\duke.txt`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "where `USERNAME` refers to your OS username.  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Migrating to a different machine and want to take all your tasks with you?"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Simple copy the file over and you\u0027re set."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "### Intuitive `find` command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "The `find` command finds any task that either fully or partially matches one or"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "more keywords. Try `find school work` and you\u0027ll get all the tasks that"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "contains `school`, `work`, or both."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "### (For developers aka. myself) Easily extensible"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "The code is written in a modular manner and adding new functionalities is"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "very easy. Example functions that I wanted but did not implement: fuzzy"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "find, natural language data time format, JSON storage, etc."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "### Viewing help: `help`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "### Adding a todo: `todo`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Adds a `todo` to Duke.  "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Format: `todo DESCRIPTION`  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "- `todo Read book`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "### Adding an event: `event`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Adds an `event` to Duke. An `event` is something that happens at the specific time.  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Format: `event DESCRIPTION /at dd/MM/yyyy HHmm`  "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "- `event job interview /at 1/9/2018 1330`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "### Adding a deadline: `deadline`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Adds a `deadline` to Duke. A deadline is a task that should be done by a certain time.  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Format: `deadline DESCRIPTION /by dd/MM/yyyy HHmm`  "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "- `deadline return book /by 18/2/2019 0900`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "### Listing all tasks: `list`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Shows a list of all tasks(`todo`s, `event`s, `deadline`s)in Duke.  "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "### Locating tasks by keywords: `find`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Finds tasks whose descriptions contain any of the given keywords.  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Format: `find KEYWORD...`  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Example: `find school project`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "### Deleting a task: `delete`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Deletes the specified task from Duke.  "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Format: `delete TASK_NUMBER`  "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "### Exiting Duke: `bye`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Exits Duke.  "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Format: `bye`"
      }
    ],
    "authorContributionMap": {
      "-": 11,
      "gary-lgy": 78
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.cli.DukeCli;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.gui.DukeGui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Entry point of the Duke application. Launches either CLI or GUI per user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public final class Launcher {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static final Set\u003cString\u003e VALID_ARGS \u003d Set.of(\"cli\", \"gui\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // For static use only"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private Launcher() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Launches the Duke application, or exit if the argument is invalid."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param args \"cli\" or \"gui\", defaults to \"gui\" if empty"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (!hasValidArgs(args)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            printUsageAndExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String mode \u003d getMode(args);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (mode.equals(\"cli\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            launchCli();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            launchGui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static boolean hasValidArgs(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return args.length \u003d\u003d 0 || args.length \u003d\u003d 1 \u0026\u0026 VALID_ARGS.contains(args[0]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static String getMode(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (args.length \u003d\u003d 1 \u0026\u0026 args[0].equals(\"cli\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            return \"cli\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            // Default to launching GUI"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            return \"gui\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static void printUsageAndExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        System.err.println(\"Usage: java -jar duke-0.x.jar [cli]\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        System.exit(1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static void launchGui() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Application.launch(DukeGui.class);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static void launchCli() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        DukeCli cli \u003d new DukeCli();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        cli.run();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 63
    }
  },
  {
    "path": "src/main/java/duke/cli/Cli.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.BYE_MESSAGE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Command line interface of the Duke app."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Cli implements Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static final String SEPARATOR \u003d \"-\".repeat(60);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static final String INDENTATION \u003d \"  \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private final Scanner input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private final PrintStream output;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Cli(final InputStream input, final PrintStream output) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.input \u003d new Scanner(input, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.output \u003d output;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private void show(final String message) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.output.println(message.stripTrailing());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Shows a long separator."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showSeparator() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        show(SEPARATOR);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Shows each line, preceded by a preset level of indentation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param lines the lines to show"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showIndented(final String... lines) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        for (final String line : lines) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            show(INDENTATION + line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Shows each message on a new line."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param message the message to show"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showMessage(final String message) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        show(message);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Shows each warning on a new line."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param warning the warning to show"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showWarning(final String warning) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        show(\"Warning: \" + warning);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Shows each error on a new line."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param error the error to show"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showError(final String error) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        show(\"Error: \" + error);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Shows a welcome message."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showSeparator();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(\"Hello from\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showIndented(LOGO.split(\"\\\\n\"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(\"What can I do for you?\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showSeparator();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(\"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(BYE_MESSAGE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Reads a command from the user, terminated by a newline."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return the String input from the user"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (!input.hasNextLine()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 114
    }
  },
  {
    "path": "src/main/java/duke/cli/DukeCli.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.cli;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeStorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * The Duke CLI application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public final class DukeCli {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private final Cli ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Constructs a Duke CLI application."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DukeCli() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        ui \u003d new Cli(System.in, System.out);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Runs the Duke CLI application."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            storage.loadTasks(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (DukeStorageException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showWarning(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                if (input \u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    input \u003d \"bye\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ui.showSeparator();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                if (command.shouldExit()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ui.showSeparator();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ui.showMessage(\"\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "gary-lgy": 58
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeStorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_ADD_FAILURE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_MISSING_DESCRIPTION;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Command that adds a new Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public abstract class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public AddTaskCommand(final String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(final TaskList tasks) throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (this.description.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeInvalidCommandException(TASK_MISSING_DESCRIPTION);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Adds a Task to the current TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param task the Task to be added"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param tasks the TaskList to add the Task to"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param ui the user interface"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param storage the storage interface"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void addTask(final Task task, TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (tasks.addTask(task)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.addTaskSuccess(task, tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                storage.writeTasks(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            } catch (DukeStorageException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ui.showWarning(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new RuntimeException(TASK_ADD_FAILURE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 49
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskWithTimeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Command that adds a new task with a datetime field."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public abstract class AddTaskWithTimeCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected final LocalDateTime time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public AddTaskWithTimeCommand(final String description, final LocalDateTime time) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 15
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Command that should exit Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 24
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * The Command base class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Checks whether this Command is valid."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param tasks the current tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @throws DukeInvalidCommandException if this Command is invalid"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected abstract void check(final TaskList tasks) throws DukeInvalidCommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Executes this command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param tasks   the existing tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param ui      the ui to display command execution status"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param storage the data file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @throws DukeExecutionException if the command cannot be executed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Returns true if Duke should exit after this command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return true if Duke should exit after this command, or false otherwise"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public boolean shouldExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.DEADLINE_MISSING_TIME;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Command that adds a new deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DeadlineCommand extends AddTaskWithTimeCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DeadlineCommand(final String description, final LocalDateTime time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(final TaskList tasks) throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super.check(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (this.time \u003d\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeInvalidCommandException(DEADLINE_MISSING_TIME);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        addTask(new Deadline(this.description, this.time), tasks, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 35
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeStorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Command that deletes a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DeleteCommand extends SingleTaskCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DeleteCommand(final Integer taskNumber) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(taskNumber);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Task task \u003d tasks.deleteTask(this.taskNumber);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        ui.deleteTaskSuccess(task, tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            storage.writeTasks(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (DukeStorageException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showWarning(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 29
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeStorageException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_ALREADY_DONE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Command that marks a task as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DoneCommand extends SingleTaskCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DoneCommand(final Integer taskNumber) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(taskNumber);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Task task \u003d tasks.getTask(this.taskNumber);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.showWarning(TASK_ALREADY_DONE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.taskMarkedAsDone(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                storage.writeTasks(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            } catch (DukeStorageException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ui.showWarning(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 36
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.EVENT_MISSING_TIME;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Command that adds a new event task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class EventCommand extends AddTaskWithTimeCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public EventCommand(final String description, final LocalDateTime time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(final TaskList tasks) throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super.check(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (this.time \u003d\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeInvalidCommandException(EVENT_MISSING_TIME);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        addTask(new Event(this.description, this.time), tasks, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 35
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.FIND_MISSING_QUERY;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Command that finds tasks by keywords."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private final String[] queries;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public FindCommand(final String... queries) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.queries \u003d queries;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(TaskList tasks) throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (queries \u003d\u003d null || queries.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeInvalidCommandException(FIND_MISSING_QUERY);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        TaskList matches \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            for (final String query : this.queries) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                if (task.getDescription().contains(query)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    matches.addTask(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (matches.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.findNoMatch();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.findMatches(matches);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 50
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(TaskList tasks) throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        ui.showHelp();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 18
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Command that lists all tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.listNoTasks();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ui.listTasks(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 24
    }
  },
  {
    "path": "src/main/java/duke/command/SingleTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeInvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.MISSING_TASK_NUMBER;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_DOES_NOT_EXIST;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Command that manipulates a single Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public abstract class SingleTaskCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected final Integer taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public SingleTaskCommand(final Integer taskNumber) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(final TaskList tasks) throws DukeInvalidCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (this.taskNumber \u003d\u003d null) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeInvalidCommandException(MISSING_TASK_NUMBER);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (this.taskNumber \u003c 0 || this.taskNumber \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeInvalidCommandException(TASK_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 28
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Command that adds a new task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class TodoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public TodoCommand(final String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        addTask(new Todo(this.description), tasks, ui, storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 22
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeExecutionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.UNKNOWN_COMMAND;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * An unknown Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    protected void check(TaskList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeExecutionException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        check(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        throw new DukeExecutionException(UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 23
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Generic exception in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DukeException(final String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeExecutionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Thrown to indicate that Duke has failed to execute a Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DukeExecutionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DukeExecutionException(final String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Thrown to indicate that a Command is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DukeInvalidCommandException extends DukeExecutionException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DukeInvalidCommandException(final String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Thrown when Duke fails to parse a Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DukeParseException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DukeParseException(final String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeStorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Thrown when Duke fails to interact with disk storage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DukeStorageException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public DukeStorageException(final String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 10
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * A DialogBox is drawn whenever the user issues a Command or Duke responds."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static final Image USER_AVATAR \u003d new Image(DialogBox.class.getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static final Image DUKE_AVATAR \u003d new Image(DialogBox.class.getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private ImageView avatar;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private DialogBox(String dialog, Image avatar, String styleClass) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(this.getClass().getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.dialog.setText(dialog);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.getStyleClass().add(styleClass);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.avatar.setImage(avatar);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Creates a right-justified dialog with the given avatar."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param dialog the content of the dialog"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return a right-justified dialog with the given avatar"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static DialogBox getUserDialog(String dialog) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return new DialogBox(dialog, DialogBox.USER_AVATAR, \"user-dialog-box\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Creates a left-justified dialog with the given avatar."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param dialog the content of the dialog"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return a left-justified dialog with the given avatar"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static DialogBox getDukeDialog(String dialog) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return DialogBox.makeDukeDialog(dialog, \"duke-message-dialog-box\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static DialogBox getDukeWarning(String dialog) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return DialogBox.makeDukeDialog(dialog, \"duke-warning-dialog-box\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static DialogBox getDukeError(String dialog) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return DialogBox.makeDukeDialog(dialog, \"duke-error-dialog-box\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static DialogBox makeDukeDialog(String dialog, String type) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        DialogBox box \u003d new DialogBox(dialog, DialogBox.DUKE_AVATAR, type);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        box.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return box;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        ObservableList\u003cNode\u003e children \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        FXCollections.reverse(children);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.getChildren().setAll(children);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 82
    }
  },
  {
    "path": "src/main/java/duke/gui/DukeGui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * The Duke GUI application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public final class DukeGui extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Starts the Duke GUI application."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param stage the stage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(this.getClass().getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            AnchorPane anchorPane \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            Scene scene \u003d new Scene(anchorPane);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            stage.setMinHeight(900.0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            stage.setMinWidth(600.0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 35
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeStorageException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Outermost component of the Duke GUI."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class MainWindow extends AnchorPane implements Ui {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private final Storage storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private final TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Initialises the MainWindow."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            storage.loadTasks(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (DukeStorageException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            showMessage(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showWelcome();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (input.isBlank()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        addUserDialog(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            command.execute(tasks, this, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            if (command.shouldExit()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            showError((e.getMessage()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private void addDialogBox(DialogBox dialogBox) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        dialogContainer.getChildren().add(dialogBox);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private void addUserDialog(String dialog) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        addDialogBox(DialogBox.getUserDialog(dialog));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        addDialogBox(DialogBox.getDukeDialog(message));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showWarning(String warning) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        addDialogBox(DialogBox.getDukeWarning(warning));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        addDialogBox(DialogBox.getDukeError(error));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        addDialogBox(DialogBox.getDukeDialog(\"Hello from Duke! What can I do for you?\"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 99
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.task.Task.DATE_TIME_FORMATTER;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Parses Commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // Parser is for static use only"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private Parser() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static LocalDateTime parseDateTime(final String dateTime) throws DukeParseException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            return LocalDateTime.parse(dateTime, DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeParseException(\"Failed to parse date time: \" + e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private static Integer parseTaskNumber(final String taskNumber) throws DukeParseException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            return Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeParseException(\"Failed to parse task number: \" + e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Parses input to construct a Command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param input the input String to parse"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return the constructed Command"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @throws DukeParseException if an parsing error occurs"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static Command parse(final String input) throws DukeParseException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String[] tokens \u003d input.trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String command \u003d tokens[0].toLowerCase();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        // If tokens.length \u003d\u003d 1, there are no arguments"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String arguments \u003d (tokens.length \u003d\u003d 1) ? \"\" : tokens[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new TodoCommand(arguments);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String[] toks \u003d arguments.split(\"\\\\s*/at\\\\s*\", 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new EventCommand(toks[0], toks.length \u003d\u003d 1 ? null : parseDateTime(toks[1]));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String[] toks \u003d arguments.split(\"\\\\s*/by\\\\s*\", 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new DeadlineCommand(toks[0], toks.length \u003d\u003d 1 ? null : parseDateTime(toks[1]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new DoneCommand(arguments.isBlank() ? null : parseTaskNumber(arguments));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new DeleteCommand(arguments.isBlank() ? null : parseTaskNumber(arguments));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new FindCommand(arguments.isBlank() ? null : arguments.split(\"\\\\s+\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                return new UnknownCommand();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 84
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.exception.DukeStorageException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.task.Task.DATE_TIME_FORMATTER;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.LOAD_TASK_FILE_CORRUPTED;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.WRITE_TASK_FAILED;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * The storage interface of the Duke application."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Constructs a Storage object to save tasks to a data file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param fileName the filename of the date file to save tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Storage(final String fileName) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Path dataDir \u003d getDataDir();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.file \u003d dataDir.resolve(fileName).toFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (!dataDir.toFile().exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            dataDir.toFile().mkdirs();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Loads tasks from the data file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param tasks the TaskList to load tasks into"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @throws DukeStorageException if an parsing error occurs"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void loadTasks(TaskList tasks) throws DukeStorageException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Scanner scanner;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            scanner \u003d new Scanner(this.file, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        assert this.file.exists(); // file should exist if Scanner can be created"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        DukeStorageException fileCorruptedException \u003d new DukeStorageException(LOAD_TASK_FILE_CORRUPTED);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String[] tokens \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String type \u003d tokens[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                boolean isDone \u003d !tokens[1].equals(\"0\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String description \u003d tokens[2];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    case \"T\": {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        task \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    case \"D\": {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        LocalDateTime by \u003d LocalDateTime.parse(tokens[3], DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        task \u003d new Deadline(description, by, isDone);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    case \"E\": {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        LocalDateTime at \u003d LocalDateTime.parse(tokens[3], DATE_TIME_FORMATTER);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        task \u003d new Event(description, at, isDone);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                        throw fileCorruptedException;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (IndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw fileCorruptedException;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Writes tasks to data file."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param tasks The tasks to write to the data file"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @throws DukeStorageException if the data file cannot be written"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void writeTasks(final TaskList tasks) throws DukeStorageException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        assert this.file.getParentFile().exists(); // parent directory should have been created in the constructor"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        try (FileWriter writer \u003d new FileWriter(this.file, StandardCharsets.UTF_8, false)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            assert this.file.exists(); // file should be created when FileWriter is created"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            writer.write(tasks.toStorageString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            throw new DukeStorageException(WRITE_TASK_FAILED + e.getMessage());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Returns the directory that Duke should store its data."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return the directory that Duke should store its data"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private Path getDataDir() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String os \u003d System.getProperty(\"os.name\").toUpperCase();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String path;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        if (os.contains(\"WIN\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            path \u003d System.getenv(\"APPDATA\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else if (os.contains(\"MAC\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            path \u003d System.getProperty(\"user.home\")"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                + \"/Library/Application Support\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        } else { // Assume *nix"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            String xdgDataHome \u003d System.getenv(\"XDG_DATA_HOME\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            path \u003d xdgDataHome \u003d\u003d null"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                ? System.getProperty(\"user.home\") + \"/.local/share\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                : xdgDataHome;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return Path.of(path + \"/Duke\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 128
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Task with a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Deadline(final String description, final LocalDateTime by, final boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Deadline(final String description, final LocalDateTime by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this(description, by, false);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private String getByString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return DATE_TIME_FORMATTER.format(this.by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getByString() + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String[] tokens \u003d new String[]{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"D\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.getDescription(),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.getByString()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return String.join(Todo.STORAGE_STRING_SEPARATOR, tokens);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Task that starts at a certain datetime."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Event(final String description, final LocalDateTime at, final boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Event(final String description, final LocalDateTime at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this(description, at, false);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private String getAtString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return DATE_TIME_FORMATTER.format(this.at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.getAtString() + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String[] tokens \u003d new String[]{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"E\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.getDescription(),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.getAtString()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return String.join(Todo.STORAGE_STRING_SEPARATOR, tokens);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * The base class of all types of Tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    static final String STORAGE_STRING_SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    Task(final String description, final boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Returns this Task\u0027s description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return this Task\u0027s description"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Returns tick or cross depending on whether this Task is done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return tick if this Task is done, cross otherwise"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        // Note: \\u2718 (the cross symbol) crashes the GUI for some reason"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return (isDone ? \"✓\" : \"X\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Returns true if this Task is done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return true if this Task is done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Returns the representation of this Task in the data file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return the representation of this Task in the data file"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public abstract String toStorageString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 64
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public boolean addTask(final Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return tasks.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Task getTask(final int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param index index of the task to be deleted"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return the deleted task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Task deleteTask(final int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        StringBuilder ret \u003d new StringBuilder();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ret.append(i + 1)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                .append(\".\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                .append(tasks.get(i).toString())"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                .append(\"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return ret.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Converts this TaskList into a String suitable for storage in the data file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @return the converted String"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        StringBuilder ret \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            ret.append(task.toStorageString())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                .append(\"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return ret.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * A simple task with a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Todo(final String description, final boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public Todo(final String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        String[] tokens \u003d new String[]{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"T\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            this.getDescription()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        return String.join(Todo.STORAGE_STRING_SEPARATOR, tokens);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 29
    }
  },
  {
    "path": "src/main/java/duke/ui/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * Utility class that stores all messages that Duke should display."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public final class Messages {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // Add task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_ADD_SUCCESS \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_ADD_FAILURE \u003d \"Fatal: Unable to add task\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_MISSING_DESCRIPTION \u003d \"The description of a task cannot be empty\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String DEADLINE_MISSING_TIME \u003d \"Deadline cannot be empty\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String EVENT_MISSING_TIME \u003d \"Event time cannot be empty\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // Mark as done/delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_MARKED_AS_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_ALREADY_DONE \u003d \"This task is already done\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_DELETED \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String MISSING_TASK_NUMBER \u003d \"Task number cannot be empty\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASK_DOES_NOT_EXIST \u003d \"Task does not exist\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // Storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String LOAD_TASK_FILE_CORRUPTED \u003d \"Failed to load tasks from disk. Data file is corrupted.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String WRITE_TASK_FAILED \u003d \"Failed to update task list on disk. \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // List/find tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String LIST_TASKS \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String LIST_NO_TASKS \u003d \"There are currently no tasks in your list\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String FIND_TASKS \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String FIND_NO_TASKS \u003d \"There are no matching tasks in your list\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String FIND_MISSING_QUERY \u003d \"Find query cannot be empty\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // Misc"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String TASKS_COUNT \u003d \"Now you have %d tasks in the list\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"Bye!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String UNKNOWN_COMMAND \u003d \"Unknown command\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public static final String HELP_MESSAGE \u003d String.join("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        System.lineSeparator(),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        List.of("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"todo DESC\", \"\\t- add a todo with the given description\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"event DESC /at DATETIME\", \"\\t- add an event that starts at DATETIME and have the given description\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"deadline DESC /by DEADLINE\", \"\\t- add deadline that ends at DEADLINE and have the given description\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"delete TASK_NUMBER\", \"\\t- delete the task with the given task number\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"done TASK_NUMBER\", \"\\t- mark the task with the given task number as done\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"find [KEYWORD [KEYWORD ...] ]\", \"\\t- find all tasks that march at least one KEYWORD\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"help\", \"\\t- display this help message\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \"bye\", \"\\t- exit Duke\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    // This class is for static use only"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    private Messages() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 53
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.FIND_NO_TASKS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.FIND_TASKS;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.LIST_NO_TASKS;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.LIST_TASKS;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASKS_COUNT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_ADD_SUCCESS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_DELETED;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static duke.ui.Messages.TASK_MARKED_AS_DONE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " * The Duke user interface."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    void showMessage(final String message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    void showWarning(final String warning);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    void showError(final String error);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    void showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    void showBye();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Displays the help message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    default void showHelp() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(Messages.HELP_MESSAGE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Informs user that a task has been added successfully."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param task  the task that has been added"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param tasks all the tasks after the addition"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    default void addTaskSuccess(final Task task, final TaskList tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            String.format(\"%s%n%s%n%s\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                TASK_ADD_SUCCESS,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String.format(TASKS_COUNT, tasks.size())));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Informs user that a task has been deleted successfully."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param task  the task that has been deleted"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param tasks all the tasks after the deletion"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    default void deleteTaskSuccess(final Task task, final TaskList tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            String.format(\"%s%n%s%n%s\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                TASK_DELETED,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                String.format(TASKS_COUNT, tasks.size())));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Informs the user that a Task has been marked as done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param task the Task that was marked as done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    default void taskMarkedAsDone(final Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(String.format(\"%s%n%s\", TASK_MARKED_AS_DONE, task.toString()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Informs the user that the last find did not match any Tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    default void findNoMatch() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(FIND_NO_TASKS);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Lists the matches from the last find Command."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param matches the Tasks that matched"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    default void findMatches(final TaskList matches) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(String.format(\"%s%n%s\", FIND_TASKS, matches.toString()));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Informs the user that there are currently no tasks to list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    default void listNoTasks() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(LIST_NO_TASKS);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * Lists the tasks currently in the task list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     * @param tasks the current TaskList"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    default void listTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        showMessage(String.format(\"%s%n%s\", LIST_TASKS, tasks.toString()));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 101
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "         minWidth\u003d\"-Infinity\" prefWidth\u003d\"580.0\" spacing\u003d\"10.0\" styleClass\u003d\"dialog-box\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "         stylesheets\u003d\"@../stylesheets/dialogBox.css\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            \u003cFont name\u003d\"Arial\" size\u003d\"17.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    \u003c/Label\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    \u003cImageView fx:id\u003d\"avatar\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"900.0\" minWidth\u003d\"600.0\" prefHeight\u003d\"900.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"522.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"857.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"-1.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "                AnchorPane.topAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 20
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        assertEquals(\"[T][X] write code\", new Todo(\"write code\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    public void markAsDone_regularTask_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        Todo todo \u003d new Todo(\"play\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "        assertTrue(todo.isDone());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 20
    }
  },
  {
    "path": "text-ui-test/expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "   ____        _"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  |  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "There are currently no tasks in your list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "[T][X] borrow book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Now you have 1 tasks in the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "[D][X] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "1.[T][X] borrow book"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "2.[D][X] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "3.[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: The description of a task cannot be empty"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: The description of a task cannot be empty"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: The description of a task cannot be empty"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "1.[T][X] borrow book"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "2.[D][X] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "3.[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Event time cannot be empty"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Deadline cannot be empty"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "1.[T][X] borrow book"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "2.[D][X] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "3.[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Failed to parse date time: Text \u00271234567\u0027 could not be parsed at index 7"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Failed to parse date time: Text \u00271234567\u0027 could not be parsed at index 7"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "1.[T][X] borrow book"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "2.[D][X] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "3.[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Deadline cannot be empty"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Event time cannot be empty"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "1.[T][X] borrow book"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "2.[D][X] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "3.[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Deadline cannot be empty"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Event time cannot be empty"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "1.[T][X] borrow book"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "2.[D][X] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "3.[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "[D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Task does not exist"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Failed to parse task number: For input string: \"*(\u0026*%^jh\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "1.[T][X] borrow book"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "2.[D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "3.[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "[T][X] borrow book"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Task does not exist"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Failed to parse task number: For input string: \"qweiur\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "1.[D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "2.[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Unknown command"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Unknown command"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Unknown command"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "1.[D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "2.[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "1.[D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "2.[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "1.[D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "2.[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Find query cannot be empty"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "There are no matching tasks in your list"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "[D][✓] CS2103 assignment (by: 5/8/2019 1800)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Now you have 1 tasks in the list"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "[E][X] CS2102 exam (at: 25/11/2019 0900)"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Now you have 0 tasks in the list"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Error: Task does not exist"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "Bye!"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 216
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadline CS2103 assignment /by 5/8/2019 1800"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "event CS2102 exam /at 25/11/2019 0900"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "event career fair"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadline individual project"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadline CS2103 assignment /by 1234567"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "event CS2102 exam /at 1234567"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadline CS2103 assignment /at 25/11/2019 0900"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "event CS2102 exam /by 5/8/2019 1800"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "deadline CS2103 assignment /ok 25/11/2019 0900"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "event CS2102 exam /wow 5/8/2019 1800"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "done 10000"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "done *(\u0026*%^jh"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "delete 20000"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "delete qweiur"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "greatCommand"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "nice command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "THIS IS /at A NICE /by COMMAND"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "find CS"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "find assignment exam"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "find"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "find fluffy mod"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 41
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "#!/bin/bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "# Note: this script assumes the date file is stored in ~/.local/share/Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "# Backup existing data file"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "data_dir\u003d\"$HOME/.local/share/Duke\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "if [ -f \"$data_dir/duke.txt\" ]; then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  mv \"$data_dir/duke.txt\" \"$data_dir/duke.bak\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "# Delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "if [ -e \"./actual.txt\" ]; then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "    rm actual.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the actual.txt"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "java -classpath ../build/classes/java/main duke.Launcher cli \u003c input.txt \u003e actual.txt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "diff actual.txt expected.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "result\u003d\"$?\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "# Move the old data file back"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "if [ -f \"$data_dir/duke.bak\" ]; then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "  mv \"$data_dir/duke.bak\" \"$data_dir/duke.txt\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gary-lgy"
        },
        "content": "exit \"$result\""
      }
    ],
    "authorContributionMap": {
      "gary-lgy": 28
    }
  }
]
