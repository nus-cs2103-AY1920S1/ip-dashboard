[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "run{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.1\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "test {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "Raikonen": 33
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "T | 0 | asdasd"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "T | 0 | cook"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "T | 0 | read movies"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 4
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    Task taskToAdd;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToAdd Task to be Added"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public AddCommand(Task taskToAdd) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.taskToAdd \u003d taskToAdd;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute add command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UI ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        storage.appendTaskToFile(taskToAdd);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoAddedTask(taskToAdd, tasks.getSize());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 25
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "/***"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " * Abstract command class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param isExit Set to true when command is an exit command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Command(boolean isExit) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public abstract void execute(Storage storage, TaskList tasks, UI ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 16
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected LocalDateTime parsedBy;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param parsedBy LocalDateTime instance for the dateline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Deadline(String description, LocalDateTime parsedBy) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.parsedBy \u003d parsedBy;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor with completion specified."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param isDone Boolean for whether task is completed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param parsedBy LocalDateTime instance for the dateline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDateTime parsedBy) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, isDone, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.parsedBy \u003d parsedBy;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Serialize into the following format for storage, E.g. \"D | 0 | read book | 2007-12-03T10:15:30\"."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return String.format(\"D | %d | %s | %s\\n\", isDone ? 1 : 0, description, parsedBy.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Overridden toString method to display to user, E.g. \"[D][X] return book (by: 2007-12-03T10:15:30)\"."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (by: \" + parsedBy.toString() + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 42
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    int indexToDelete;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param indexToDelete Index of Task to be deleted"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public DeleteCommand(int indexToDelete) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.indexToDelete \u003d indexToDelete;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute delete command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UI ui) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoDeletedTask(tasks.deleteTask(indexToDelete), tasks.getSize());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        storage.writeTaskListToFile(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 24
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    int indexToComplete;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param indexToComplete Index of Task to be marked as complete"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public DoneCommand(int indexToComplete) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.indexToComplete \u003d indexToComplete;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute done command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UI ui) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoCompletedTask(tasks.completeTask(indexToComplete));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        storage.writeTaskListToFile(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " * CS2103T INDIVIDUAL PROJECT - DUKE."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Start command line application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param args Main arguments"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        new DukeCLI().run();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "Raikonen": 10
    }
  },
  {
    "path": "src/main/java/DukeCLI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DukeCLI {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Storage storage \u003d new Storage(new File(\"data/tasks.txt\"));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Main function for Duke CLI application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        /** Try to load data */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            taskList.loadData(storage.getTaskList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            ui.echoMessage(\"    *** EXISTING FILE LOADED ***\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            ui.echoMessage(\"    *** NO EXISTING FILE FOUND ***\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                storage.createFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch (IOException e2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                ui.echoException(e2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            ui.echoException(e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        /** Greet User */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        /** Interaction with User */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        boolean isByeBye \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        while (!isByeBye) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                String inputCommand \u003d ui.readCommand(); // Initial Input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                Command c \u003d Parser.parseCommand(inputCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                c.execute(storage, taskList, ui);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                if(c.isExit)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    isByeBye \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                ui.echoException(new DukeException(\"Index Out of Bounds Exception Caught\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                ui.echoException(e);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch(Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                ui.echoException((new DukeException(e.getMessage())));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 53
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Default duke exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Custom duke exception."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param errorMessage Custom error message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(String.format(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"     ☹ OOPS!!! %s \\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"    ____________________________________________________________\", errorMessage));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 21
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected LocalDateTime parsedAt;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param parsedAt LocalDateTime instance for when the event will be"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Event(String description, LocalDateTime parsedAt) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.parsedAt \u003d parsedAt;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor with completion specified."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param isDone Boolean for whether task is completed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param parsedAt LocalDateTime instance for when the event will be"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Event(String description, boolean isDone, LocalDateTime parsedAt) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, isDone, TaskType.EVENT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.parsedAt \u003d parsedAt;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Serialize into the following format for storage, E.g. \"E | 0 | project meeting | 2007-12-03T10:15:30\"."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return String.format(\"E | %d | %s | %s\\n\", isDone ? 1 : 0, description, parsedAt.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Overridden toString method to display to user, E.g. \"3.[E][✗] project meeting (at: 2007-12-03T10:15:30)\"."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (at: \" + parsedAt.toString() + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 42
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute exit command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UI ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Raikonen": 21
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UI ui) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoMatchingTasks(tasks.getMatchingTasks(keyword));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 14
    }
  },
  {
    "path": "src/main/java/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public InvalidCommand() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute invalid command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UI ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoException(new DukeException());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 20
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Execute list command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param storage Storage used to save tasks into local storage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param tasks TaskList used to store tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param ui UI used to interact"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void execute(Storage storage, TaskList tasks, UI ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        ui.echoList(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 20
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Parse input String and return corresponding LocalDateTime instance."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param dateTime String input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public static LocalDateTime parseDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            LocalDateTime parsedDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                parsedDateTime \u003d LocalDateTime.parse(dateTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"Invalid DateTime!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                String[] splitDateTime \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                String[] splitDate \u003d splitDateTime[0].split(\"\\\\/\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                parsedDateTime \u003d LocalDateTime.of("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        Integer.parseInt(splitDate[2]),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        Integer.parseInt(splitDate[1]),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        Integer.parseInt(splitDate[0]),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        Integer.parseInt(splitDateTime[1]) / 100,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        Integer.parseInt(splitDateTime[1]) % 100);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return parsedDateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            throw new DukeException(\"Invalid DateTime!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Parse input String and return corresponding command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public static Command parseCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        String[] splitCommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        switch (splitCommand[0]) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new FindCommand(splitCommand[1].trim());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new DoneCommand(Integer.parseInt(splitCommand[1].trim()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(splitCommand[1].trim()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (splitCommand.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new AddCommand(new Todo(splitCommand[1].trim()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (splitCommand.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            String[] parsedDeadline \u003d splitCommand[1].split(\" \\\\/by \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (parsedDeadline.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"Deadline is missing a deadline\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new AddCommand(new Deadline(parsedDeadline[0], Parser.parseDateTime(parsedDeadline[1].trim())));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (splitCommand.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            String[] parsedEvent \u003d splitCommand[1].split(\" \\\\/at \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (parsedEvent.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                throw new DukeException(\"Event is missing a location\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new AddCommand(new Event(parsedEvent[0], Parser.parseDateTime(parsedEvent[1].trim())));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 74
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private File taskFile;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param file File instance to be used for storage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Storage(File file) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.taskFile \u003d file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Create Storage File"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void createFile() throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskFile.createNewFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Write input TaskList into local storage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param list TaskList to be written to local storage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void writeTaskListToFile(TaskList list) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            FileWriter fw \u003d new FileWriter(taskFile.getPath());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            for (Task t : list.getTasks()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                textToAdd +\u003d t.serialize();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Append a Task into storage file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToAppend Task to be appended"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void appendTaskToFile(Task taskToAppend) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            FileWriter fw \u003d new FileWriter(taskFile.getPath(), true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.write(taskToAppend.serialize());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Retrieve and return lists of Tasks from storage file."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public List\u003cTask\u003e getTaskList() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        Scanner s \u003d new Scanner(taskFile); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            Task t \u003d Task.deserialize(s.nextLine());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            taskList.add(t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 73
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param type Type of Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of Task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param type Type of Task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Task(String description, boolean isDone, TaskType type) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public abstract String serialize();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Deserialize input String and return corresponding Task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param input Input string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    static public Task deserialize(String input) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            String[] parsedLine \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            switch (parsedLine[0]) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return new Todo(parsedLine[2], Integer.parseInt(parsedLine[1]) \u003d\u003d 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return new Deadline(parsedLine[2], Integer.parseInt(parsedLine[1]) \u003d\u003d 1, LocalDateTime.parse(parsedLine[3]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return new Event(parsedLine[2], Integer.parseInt(parsedLine[1]) \u003d\u003d 1, LocalDateTime.parse(parsedLine[3]));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            throw new DukeException(\"Invalid File Format\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     *  Return a tick or cross depending on whether task is completed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Set task as complete."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected void setDone() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Check whether Task description contains given keyword."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param keyword Keyword to match"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    protected boolean checkMatch(String keyword) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Override toString method."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 86
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Load data from input list of Tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param loadedTaskList Starting list of Tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void loadData(List\u003cTask\u003e loadedTaskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList \u003d loadedTaskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Return list of Tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Return number of Tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Return Task at input index."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param index Index of Task to be retrieved"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws IndexOutOfBoundsException"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Task getTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Add Task into TaskList."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Return matching Tasks from TaskList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param keyword Keyword to be matched"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public List\u003cTask\u003e getMatchingTasks(String keyword) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        for (Task k : taskList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            if (k.checkMatch(keyword))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                matchingTasks.add(k);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Mark a specific Task as complete."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param entryNumber Entry number of Task to be marked as complete (Starting from 1 onwards)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws IndexOutOfBoundsException"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Task completeTask(int entryNumber) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        Task taskToComplete \u003d this.getTask(entryNumber - 1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        taskToComplete.setDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskToComplete;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Delete Task from TaskList."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param entryNumber Entry number of Task to be deleted (Starting from 1 onwards)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @throws IndexOutOfBoundsException"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Task deleteTask(int entryNumber) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return taskList.remove(entryNumber - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 85
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 5
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor with completion specified."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param isDone Boolean for whether task is completed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        super(description, isDone, TaskType.TODO);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Serialize into the following format for storage, E.g. \"T | 0 | read book\"."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return String.format(\"T | %d | %s\\n\", isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Overridden toString method to display to user, E.g. \"[T][X] read book\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 35
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Greet user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"     What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Read user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo TaskList to user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskList TaskList to be echoed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoList(TaskList taskList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (taskList.getSize() \u003d\u003d 0)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"     *** List is Empty ***\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                System.out.println(String.format(\"     %d.%s\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        i + 1, taskList.getTask(i).toString()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo matching Tasks to user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param matchingTasks Matching Tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoMatchingTasks(List\u003cTask\u003e matchingTasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"     *** List is Empty ***\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            System.out.println(\"     Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                System.out.println(String.format(\"     %d.%s\","
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        i + 1, matchingTasks.get(i).toString()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo added Task to user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToAdd Added Task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskListSize"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoAddedTask(Task taskToAdd, int taskListSize) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"     Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                String.format(\"       %s \\n\", taskToAdd.toString()) +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                String.format(\"     Now you have %d tasks in the list. \\n\", taskListSize) +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo completed Task to user."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToComplete Completed Task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoCompletedTask(Task taskToComplete){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(String.format(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"     Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"       %s\\n\" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"    ____________________________________________________________\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                taskToComplete.toString()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo deleted Task to user."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskToDelete Deleted Task"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param taskListSize Number of remaining Tasks in TaskList"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoDeletedTask(Task taskToDelete, int taskListSize) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(String.format(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"     Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"       %s\\n\" +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"     Now you have %d tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                        \"    ____________________________________________________________\","
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                taskToDelete.toString(), taskListSize));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo Exception to user."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param e Exception to be echoed"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoException(Exception e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Echo message to user."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param msg Message to be echoed"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void echoMessage(String msg) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /***"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Show exit message to user."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"     Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 130
    }
  },
  {
    "path": "src/main/javafx/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " * DUKE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Duke extends Application{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * Start Application."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     * @param primaryStage Primary Stage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setScene(scene);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setResizable(false);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        primaryStage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 81
    }
  },
  {
    "path": "src/main/javafx/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 11
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void testDateTimeParse_success() throws Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        assertEquals(LocalDateTime.of(1998,12,21,12,50),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                Parser.parseDateTime(\"21/12/1998 1250\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    public void testDateTimeParse_fail() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            assertEquals(LocalDateTime.of(1998,12,21,12,50),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "                    Parser.parseDateTime(\"INVALID INPUT\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "        } catch (Exception e) {}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 24
    }
  },
  {
    "path": "src/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raikonen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raikonen"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Raikonen": 21
    }
  }
]
