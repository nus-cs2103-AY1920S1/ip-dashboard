[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "test {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 47,
      "-": 14
    }
  },
  {
    "path": "data/alias.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "LIST | l"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "DONE | done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "DELETE | delete"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "DEADLINE | deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "LISTALIAS | listalias"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "FIND | find"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "ADDALIAS | addalias"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "LIST | list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "EXIT | exit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "EVENT | event"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 10
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "T | 1 | hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "D | 1 | return book | 2nd December 2019, 6PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "T | 0 | hello"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "T | 0 | hey"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "### Feature 1: Task Tracker "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "This feature is capable of handling 3 types of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "#### Types of Tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "1. `Todo`: task with a short description"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "2. `Deadline`: task that needs to be done before a specific date/time"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "3. `Event`: task that start and end at a specific time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Date and time are in the format of dd/MM/yyyy HHmm (eg. 31/08/2019 2359)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "#### Characteristics of Task Tracker"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "* `add`: task can be added for task tracking"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "* `done`: mark task as done once completed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "* `delete`: delete task from the list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "* `find`: find matching tasks by searching keyword(s)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "* `list`: show all the existing task(s)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "### Feature 2: Friendlier Syntax"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "This feature makes the command syntax more flexible."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "1. `add alias`: allow users to define their own aliases"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "2. `list alias`: show the full command list and its current alias."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Note: Every command can have one alias only and this feature functions at a overwriting basis (i.e. replaces existing with new alias)."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "### `todo \u003cdescription\u003e` - Adds a new `Todo` task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "This command allows user to add a new todo task in Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "  * `Todo` tasks will be represented as `[T]` by Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "`todo make dinner`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " [T][ ] make dinner"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Now you have 1 task in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "### `deadline \u003cdescription\u003e /by dd/MM/yyyy HHmm` - Adds a new `Deadline` task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "This command allows user to add a new Deadline task with a specfic date \u0026 time in Duke."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "  * `Deadline` tasks will be represented as `[D]` by Duke."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "`deadline complete CS2103T iP /by 18/09/2019 2300`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " [D][ ] complete CS2103T iP (by: 18th September 2019, 11PM)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "### `event \u003cdescription\u003e /at \u003cperiod\u003e` - Adds a new `Event` task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "This command allows user to add a new event task with a time range in Duke."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "  * `Event` tasks will be represented as `[E]` by Duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "`event attend CS2103T Lecture /at 20/09/2019 1200 - 20/09/2019 1400`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " [E][ ] attend CS2103T Lecture (at: 20/09/2019 1200 - 20/09/2019 1400)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "### `done \u003ctask id\u003e` - mark task as complete"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "This command allows user to mark the task as done in Duke."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "  * Tasks marked as done will be represented as `[X]` by Duke."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "  * `\u003ctask id\u003e` is the index of the task in Duke\u0027s Task List."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    * Tip: `list` command shows all the tasks and its corresponding task id."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " [T][X] make dinner"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "### `delete \u003ctask id\u003e` - delete task from list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "This command allows user to delete existing task in Duke."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "  * `\u003ctask id\u003e` is the index of the task in Duke\u0027s Task List."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    * Tip: `list` command shows all the tasks and its corresponding task id."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " [E][ ] attend CS2103T Lecture (at: 20/09/2019 1200 - 20/09/2019 1400)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "### `find \u003ckeyword\u003e` - find matching task from list"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "This command allows user to find all matching tasks with the given keyword in Duke."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "`find dinner`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " [T][X] make dinner"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "If there is no matching task in Duke:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " 0 Matching Results found!"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "### `list` - show all tasks in Duke"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "This command allows user to view all existing tasks in Duke."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " 1. [T][X] make dinner"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " 2. [D][ ] complete CS2103T iP (by: 18th September 2019, 11PM)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "### `listalias` - show the full command list and its alias"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "By default, `listalias` will be loaded with the standard commands."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "* Each command type is assigned to one unique alias."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "The format shown represents `\u003cCOMMAND TYPE\u003e: \u003calias\u003e` and in alphabetical order"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Here are your aliases :)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " ADDALIAS: addalias"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " EXIT: bye"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " DEADLINE: deadline"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " DELETE: delete"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " DONE: done"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " EVENT: event"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " FIND: find"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " LIST: list"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " LISTALIAS: listalias"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " TODO: todo"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "### `addalias \u003cCOMMAND TYPE\u003e \u003cnew alias\u003e` - overwrite existing alias"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "This command allows user to add their own alias by overwriting the existing. "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "* If `\u003cnew alias\u003e` has already been attributed to another command type, Duke will inform the user that the overwrite cannot be executed. "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "  * This ensures unique alias list is maintained"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "`addalias todo t`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " Got it. I\u0027ve overwritten the alias:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " TODO: t"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "```"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "Replaces"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "`todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "With"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "`t \u003cdescription\u003e`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 165,
      "-": 21
    }
  },
  {
    "path": "src/main/java/AddAlias.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Alias;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Deals with operation to add abbreviation."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class AddAlias extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public AddAlias(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Executes operation to add abbrevation in static aliases."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param tasks TaskList to perform changes from"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param ui Ui to generate message outputs"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param storage Object to save tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String generate message as output from successful operation"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String[] ar \u003d command.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (ar.length !\u003d 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"OOPS!!! Add Synatx Command must be in this format: addsyntax \u003ctype\u003e \u003calias\u003e.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            Alias.updateAliases(ar[0].trim().toUpperCase(), ar[1].trim());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            return Ui.printAddAlias(ar[0].trim().toUpperCase(), ar[1].trim());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 46
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Deals with operation to add new tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Initializes AddCommand object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Checks if command is valid before assignment object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param type Type of task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param command String user input of the task details"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @throws DukeException if command is invalid"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public AddCommand(String type, String command) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            Parser.checkTask(type, command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                this.task \u003d new Todo(command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                this.type \u003d \"T\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                String[] arr \u003d command.split(\"/by\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                this.task \u003d new Deadline(arr[0].trim(), Parser.datetimeformat(arr[1].trim()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                this.type \u003d \"D\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                String[] arr \u003d command.split(\"/at\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                this.task \u003d new Event(arr[0].trim(), arr[1].trim());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                this.type \u003d \"E\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new AssertionError(\"ERROR: Invalid Task Type!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Executes operation to add new task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param tasks TaskList to perform changes from"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param ui Ui to generate message outputs"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param storage Object to save tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String generate message as output from successful operation"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        tasks.getList().add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        storage.saveTasks(task, type);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return ui.printAddTask(task, tasks.getList().size());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 72
    }
  },
  {
    "path": "src/main/java/Alias.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Stores abbreviations for commands available."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Acts as a Syntax Library"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Alias{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected static HashMap\u003cString, Integer\u003e types \u003d new HashMap\u003c\u003e() {{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        put(\"LIST\", 0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        put(\"EXIT\", 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        put(\"FIND\", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        put(\"DONE\", 3);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        put(\"DELETE\", 4);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        put(\"TODO\", 5);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        put(\"DEADLINE\", 6);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        put(\"EVENT\", 7);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        put (\"LISTALIAS\", 8);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        put (\"ADDALIAS\", 9);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private static File dir;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private static String filePath \u003d \"data/alias.txt\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected static TreeMap\u003cString, String\u003e aliases \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected static TreeMap\u003cString, String\u003e aliases_types \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Creates a instance of Storage object"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param filepath String of the file location"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Alias() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        String[] arr \u003d filePath.split(\"/\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        dir \u003d new File(arr[0]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        dir.mkdirs();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.dir \u003d dir;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.file \u003d new File(dir, arr[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static void load() throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                createNewAliases();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            loadAliases();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (IOException e) {}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static void createNewAliases() throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file, true); //initialize file writer"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            for (Map.Entry\u003cString, Integer\u003e entry : types.entrySet()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                bufferedWriter.write(entry.getKey() + \" | \" + entry.getKey().toLowerCase());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static void loadAliases() throws IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            FileReader reader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                String[] arr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                aliases.put(arr[1], arr[0]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                aliases_types.put(arr[0], arr[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static void updateAliases(String type, String alias) throws IOException, DukeException{"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        if (!types.containsKey(type)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(\"Invalid type for alias format: addalias \u003ctype\u003e \u003calias\u003e\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } else if (aliases.containsKey(alias)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(\"Duplicate Alias! Try something else!\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        int index \u003d types.get(type);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Path path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        List\u003cString\u003e aliasList \u003d Files.readAllLines(path, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        aliasList.set(index, type + \" | \" + alias);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Files.write(path, aliasList, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        String old_alias \u003d aliases_types.get(type);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        aliases.remove(old_alias);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        aliases.put(alias, type);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        aliases_types.put(type, alias);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static String showAliases() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are your aliases :) \\n\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e entry : aliases.entrySet()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            sb.append(entry.getValue() + \" : \" + entry.getKey() + \"\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 125
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * A Abstract class for Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 18
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Handles Deadline type Task with a specified time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return description + \" | \" + by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"[D]\"  + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 28
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Deals with operation to delete tasks: delete commands"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected int pos;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Executes operation to update existing task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param tasks TaskList to perform changes from"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param ui Ui to generate message outputs"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param storage Object to save tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String generate message as output from successful operation"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (Parser.isValidNumber(command, tasks.getList().size())) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                pos \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                Task currTask \u003d tasks.deleteTask(pos);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                storage.updateTasks(currTask, \"delete\", pos - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return ui.printDeletedTask(currTask, tasks.getList().size());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 46
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private final Circle displayPictureFrame \u003d new Circle(45, 46, 45, Color.BLACK);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        displayPicture.setClip(displayPictureFrame);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        var dialog_user \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        dialog_user.setId(\"user\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return dialog_user;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        db.setId(\"duke\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 69
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * main class of Duke program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private Alias alias;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /* file location to store text file */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private String filePath \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Creates a duke instance that initializes Ui, Storage and load data in Tasklist."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        alias \u003d new Alias();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            alias.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Parses in user\u0027s input, execute and returns a response to GUI."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param input String of user\u0027s input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String as response to user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Calls to Ui method to generate welcome dialog."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 51,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.lang.Exception;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * inherits from exception class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * handles all exception of duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Handles Event type Task with specific time period."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return description + \" | \" + time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"[E]\"  + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 28
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Executes operation to generate bye message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param tasks TaskList to perform changes from"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param ui Ui to generate message outputs"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param storage Object to save tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String generate message as output from successful operation"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return ui.showBye();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 27
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Deals with operation to find tasks that matches with user\u0027s input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Executes operation to find matching tasks with given input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param tasks TaskList to perform changes from"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param ui Ui to generate message outputs"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param storage Object to save tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String generate message as output from successful operation"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            ArrayList\u003cTask\u003e results \u003d tasks.searchTasks(command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (results.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"0 Matching Results found!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return ui.printMatches(results);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 44
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 12
    }
  },
  {
    "path": "src/main/java/ListAlias.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Alias;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Executes operation to print all contents in abbreviation list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class ListAlias extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Executes operation to list all the tasks found in the alias list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param tasks TaskList to perform changes from"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param ui Ui to generate message outputs"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param storage Object to save tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String generate message as output from successful operation"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return Alias.showAliases();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 29
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Executes operation to print all contents in TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Executes operation to list all the tasks found in the TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param tasks TaskList to perform changes from"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param ui Ui to generate message outputs"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param storage Object to save tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String generate message as output from successful operation"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return ui.showList(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 28
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            scene.getStylesheets().add(getClass().getResource(\"/view/styles.css\").toExternalForm());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 33
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        startMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Creates a welcome message from Duke when the program starts."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void startMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        String message \u003d duke.showWelcome();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                DialogBox.getDukeDialog(message, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 67
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Alias;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.UpdateCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.ListAlias;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.AddAlias;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Parses given user\u0027s input and instantiate to Command object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param fullcommand String input from user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return Command object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static Command parse(String fullcommand) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String subcommand \u003d fullcommand.split(\" \")[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String command \u003d fullcommand.replaceFirst(subcommand, \"\").trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String type;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (Alias.aliases.containsKey(subcommand)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                type \u003d Alias.aliases.get(subcommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            switch (type.toLowerCase()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new UpdateCommand(command);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new DeleteCommand(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new FindCommand(command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new AddCommand(\"T\", command);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new AddCommand(\"D\", command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new AddCommand(\"E\", command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case \"exit\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case \"addalias\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new AddAlias(command);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            case \"listalias\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return new ListAlias();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new AssertionError(\"INVALID PARSE: \" + fullcommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Checks if user input for task command is valid."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param type Char of task type"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param command String User input"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static void checkTask(String type, String command) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (command.isEmpty()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String[] arr \u003d command.split(\"/by\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (arr[0].trim().isEmpty()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (arr.length \u003c 2 || arr[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"OOPS!!! The deadline must have a specified date/time.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String[] arr \u003d command.split(\"/at\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (arr[0].trim().isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else if (arr.length \u003c 2 || arr[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"OOPS!!! The event must have a specified date/time.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new AssertionError(\"invalid task type: \" + type);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Checks if command is a valid number."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param command String User input"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param listSize int size of TaskList"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @throws DukeException if command is not a number or ArrayIndexOutOfBound in TaskList"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static boolean isValidNumber(String command, int listSize) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (command.isEmpty()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"OOPS!!! Command cannot be empty! Please try again!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (!command.matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"OOPS!!! Task id has to be numeric type!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            int pos \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (pos \u003e listSize || pos \u003c\u003d 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"OOPS!!! Task id not within range of total number of tasks!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Formats date and time from String."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param input Converts snippet of user input to DateTime format"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String of formatted DateTime"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @throws DukeException if DateTime format !\u003d \"dd/mm/yyyy HHmm\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static String datetimeformat(String input) throws DukeException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            System.out.println(input);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            //convert to ISO_LOCAL_DATE_TIME"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            LocalDateTime datetime \u003d LocalDateTime.parse(input, DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\" MMMM yyyy, ha\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            return getSuffix(datetime.getDayOfMonth()).concat(datetime.format(format));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(\"Invalid date format: dd/mm/yyyy HHmm only!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Gets day suffix for date formatter."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param day numeric value of the day"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String day suffix"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static String getSuffix(int day) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        switch (day) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        case 21:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        case 31:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            return day + \"st\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        case 22:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            return day + \"nd\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        case 23:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            return day + \"rd\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            return day + \"th\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 169
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public File file;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public File dir;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String filepath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Creates a instance of Storage object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param filepath String of the file location"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        String[] arr \u003d filepath.split(\"/\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        dir \u003d new File(arr[0]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        dir.mkdirs();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.dir \u003d dir;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.file \u003d new File(dir, arr[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.filepath \u003d arr[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Transforms data in text file to TaskLists containing list of Tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @returns TaskList containing list of Tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @throws Exception if file does not exist or loading task error"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws Exception {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return loadTasks();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                throw new DukeException(\"New Path: File does not exist\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Helper Function to load() method."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return list of tasks from text file"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @throws IOException if task type !\u003d \"T\" || \"D\" || \"E\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() throws IOException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            FileReader reader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                String[] arr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                switch (arr[0]) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                case \"T\": //todo"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    task \u003d new Todo(arr[2]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                case \"D\": //deadline"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    task \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                case \"E\": //event"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    task \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    throw new AssertionError(\"LOAD FILE FAILURE: invalid task type \" + arr[0]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                if (Integer.parseInt(arr[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Adds new tasks information in text file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param task Task to save in file"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param type Type of task of one Char length"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void saveTasks(Task task, String type) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file, true); //initialize file writer"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            int status;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (task.getStatus() \u003d\u003d true) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                status \u003d 1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                status \u003d 0;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            bufferedWriter.write(type + \" | \" + status + \" | \" + task.getDescription());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            bufferedWriter.newLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Edits existing tasks in file through delete or update"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param task Task to save in file"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param command String command from user input"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param position Index of task in TaskList"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void updateTasks(Task task, String command, int position) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            File temp \u003d new File(dir, \"temp.txt\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            FileWriter writer \u003d new FileWriter(temp);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            FileReader reader \u003d new FileReader(file); //initialize file reader"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            int counter \u003d 0;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                if (counter !\u003d position \u0026\u0026 (!command.equals(\"delete\") || !command.equals(\"done\"))) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    bufferedWriter.write(line);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                // DONE COMMAND: counter \u003d\u003d position"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    int status \u003d 1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    bufferedWriter.write(task.getType() + \" | \" + status + \" | \" + task.getDescription());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                // DELETE COMMAND: ignore current line"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            //overwrite master txt copy"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            file.delete();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            file \u003d new File(dir, filepath);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            temp.renameTo(file);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 169
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Handles task types."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    // initialize new task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return (isDone ? \"X\" : \" \"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"GENERAL\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 41
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Contains operations for commands to list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Updates task in list of given position under the Text File."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param num Position of task in tasklist/ text file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return updated task of given position"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Task updateTask(int num) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Task currTask \u003d tasks.get(num - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        currTask.markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return currTask;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Deletes task in list of given position."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param num Position of task in tasklist"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return deleted task of given position"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Task deleteTask(int num) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Task currTask \u003d tasks.get(num - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        tasks.remove(num - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return currTask;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Searches for tasks in TaskList containing given string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param command String to search for relevant task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return list of task containing the given command"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public ArrayList\u003cTask\u003e searchTasks(String command) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (task.getDescription().contains(command)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                results.add(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            } // else ignore"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 64
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Handles Todo Task with description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"[T]\"  + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Deals with interactions with user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static String liner \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Greets user with welcome dialog."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String of welcome message"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return greeting + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Says goodbye to user when exit program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String of goodbye message"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String showBye() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return  \"\\nBye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Generates error message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String showError(String message) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return message + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Generates loading file error."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"New task list generated: no existing file found!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Generates add task message once AddCommand is successful."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param newTask Task to be added in Storage"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param totalTasks Total Number of existing Tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String of successful add task message"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String printAddTask(Task newTask, int totalTasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return  \"\\nGot it. I\u0027ve added this task:\\n\" + newTask.toString()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                + \"\\n\" + \"Now you have \" + totalTasks + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Generates add syntax message once AddAlias is successful."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param type Type of command for alias"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param alias"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String of successful add alias message"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public static String printAddAlias(String type, String alias) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return  \"\\nGot it. I\u0027ve overwritten the alias:\\n\" + type + \" : \" + alias;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Generates done task message once successful."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param currTask Most recent Task executed"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String of successful done task message"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String printDoneTask(Task currTask) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"\\nNice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                + currTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Generates deleted task message once delete is successful."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param currTask most recent Task that was deleted"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param totalTasks total number of tasks after deleton of task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String of deleted task message"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String printDeletedTask(Task currTask, int totalTasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"\\nNoted. I\u0027ve removed this task:\\n\" + currTask.toString()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                + \"\\n\" + \"Now you have \" + totalTasks + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Generates all contents found in taskList."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param tasks TaskList"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String message of TaskList"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String showList(TaskList tasks) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            Task currTask \u003d list.get(i);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            sb.append(num + \". \" + currTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Generates matching tasks from search result."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param tasks TaskList"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String message of TaskList of matching results"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String printMatches(ArrayList\u003cTask\u003e results) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        for (int i \u003d 0; i \u003c results.size(); i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            Task currTask \u003d results.get(i);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            sb.append(num + \". \" + currTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Calls for user\u0027s input"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 135
    }
  },
  {
    "path": "src/main/java/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " * Deals with operation to update tasks: done commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    protected int pos;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public UpdateCommand(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * Executes operation to update existing task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param tasks TaskList to perform changes from"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param ui Ui to generate message outputs"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @param storage Object to save tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     * @return String generate message as output from successful operation"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            if (Parser.isValidNumber(command, tasks.getList().size())) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                pos \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                Task currTask \u003d tasks.updateTask(pos);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                storage.updateTasks(currTask, \"done\", pos - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                return ui.printDoneTask(currTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 47
    }
  },
  {
    "path": "src/main/java/data/alias.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "LIST | list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "EXIT | bye"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "FIND | find"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "DONE | done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "DELETE | delete"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "TODO | todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "DEADLINE | deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "EVENT | event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "ADDALIAS | addalias"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "LISTALIAS | listalias"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 10
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"500.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"89.0\" fitWidth\u003d\"89.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"550.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" styleClass\u003d\"textfield\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"474.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" styleClass\u003d\"send_Btn\" layoutX\u003d\"424.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"SEND\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"550.0\" vvalue\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.topAnchor\u003d\"0.0\" AnchorPane.bottomAnchor\u003d\"41.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"552.0\" prefWidth\u003d\"538.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.UpdateCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void testTodo_toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        //test 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertEquals(\"[T][ ] hello\", new Todo(\"hello\").toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        //test 2"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Task todo \u003d new Todo(\"hello\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertEquals(\"[T][X] hello\", todo.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void testEvent_toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        //test 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertEquals(\"[E][ ] return book (at: 2/12/2019 1800)\", new Event(\"return book\", \"2/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        //test 2"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Task event \u003d new Event(\"return book\", \"2/12/2019 1800\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        event.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertEquals(\"[E][X] return book (at: 2/12/2019 1800)\", event.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void testDeadline_toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        //test 1"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertEquals(\"[D][ ] return book (by: 2/12/2019 1800)\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                new Deadline(\"return book\", \"2/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        //test 2"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Task deadline \u003d new Deadline(\"return book\", \"2/12/2019 1800\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        deadline.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertEquals(\"[D][X] return book (by: 2/12/2019 1800)\", deadline.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void testCommandType() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertTrue((parser.parse(\"todo hello\")) instanceof AddCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertTrue((parser.parse(\"event return book /at 2/12/2019 1800\")) instanceof AddCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertTrue((parser.parse(\"deadline return book /by 2/12/2019 1800\")) instanceof AddCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertTrue((parser.parse(\"done 1\")) instanceof UpdateCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertTrue((parser.parse(\"delete 1\")) instanceof DeleteCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertTrue((parser.parse(\"list\")) instanceof ListCommand);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertTrue((parser.parse(\"find hello\")) instanceof FindCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertTrue((parser.parse(\"bye\")) instanceof ExitCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    public void testAddCommand() throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        //test 1"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        assertEquals(\"[D][ ] return book (by: 2nd December 2019, 6PM)\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "                new AddCommand(\"D\", \"return book /by 2/12/2019 1800\").toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        //test 2"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            Command c \u003d new AddCommand(\"D\", \"return book /by 2/12/2019\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            fail(); // test should not reach this line"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            assertEquals(\"Invalid date format: dd/mm/yyyy HHmm only!\", e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        //test 3"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            parser.parse(\"todo \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "            assertEquals(\"       OOPS!!! The description of a todo cannot be empty.\", e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yyuanxin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yyuanxin": 88
    }
  }
]
