[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "SQwQ": 23
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t Task to be added"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public AddCommand(Task t) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.task \u003d t;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Adds task to TaskList and displays confirmation"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        tasks.addTask(this.task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showAddedTask(this.task, tasks.getListSize());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 25
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Abstract method to manipulate"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * TaskList/UI/Storage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * To check if \"bye\" command is issued"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return false except for child ExitCommand"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 32
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param s Input String specifying task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Deadline(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns Task as formatted String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String unprocessed \u003d super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        boolean isFirst \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (unprocessed.contains(\"/\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (int i \u003d 0; i \u003c unprocessed.length(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                char c \u003d unprocessed.charAt(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                if (c \u003d\u003d \u0027/\u0027 \u0026\u0026 isFirst) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    temp.append(\"(by:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    i +\u003d 2;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    isFirst \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    temp.append(c);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                //Process char"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"[D]\" + temp.append(\u0027)\u0027).toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"[D]\" + unprocessed;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 42
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    int id;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i Index of task to be deleted"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DeleteCommand(int i) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.id \u003d i;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Deletes task from TaskList and displays confirmation"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException If task does not exist"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Task t \u003d tasks.getTask(id);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        tasks.deleteTask(this.id);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showDelete(t, tasks.getListSize());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 27
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    int id;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i Index of task to be done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DoneCommand(int i) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.id \u003d i;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Marks task in Tasklist as complete and displays confirmation"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException If task does not exist"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        tasks.completeTask(this.id);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showComplete(tasks.getTask(this.id));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param filePath location of file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Main loop which takes in command and execute"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * until isExit \u003d true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Main driver"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        new Duke(\"C:/Users/User/Documents/GitHub/duke/src/main/tasks.txt\").run();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 52,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * DukeException to handle all kinds of exceptions"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param message text to be displayed when thrown"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param s Input String specifying task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Event(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns Task as formatted String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String unprocessed \u003d super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        boolean isFirst \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (unprocessed.contains(\"/\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (int i \u003d 0; i \u003c unprocessed.length(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                char c \u003d unprocessed.charAt(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                if (c \u003d\u003d \u0027/\u0027 \u0026\u0026 isFirst) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    temp.append(\"(at:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    i +\u003d 2;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    isFirst \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    temp.append(c);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                //Process char"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"[D]\" + temp.append(\u0027)\u0027).toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return \"[D]\" + unprocessed;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 41
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Update save file with all changes and display confirmation"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException If fails to save file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        storage.updateSaveFile(tasks.getAllTasks());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 32
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    String keywords \u003d \"\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public FindCommand(String str) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.keywords \u003d str;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showMatch(tasks.findTasks(this.keywords));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 12
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Display all tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param ui User Interface"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param storage Class dealing with local storage of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        ui.showList(tasks.getAllTasks());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 20
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * To parse all user inputs"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return command to be executed"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException If invalid command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                int id \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new DoneCommand(id);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Invalid index provided!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new FindCommand(command.substring(5));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                int id \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new DeleteCommand(id);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch  (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Invalid index provided!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return new AddCommand(new Todo(command));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (!command.contains(\"/by \")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please follow format e.g deadline return book /by Sunday\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new AddCommand(new Deadline(formatTime(command)));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else if (command.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (!command.contains(\"/at \")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please follow format e.g event project meeting /at Mon 2-4pm\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                return new AddCommand(new Event(formatTime(command)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * To format time of user input"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted time string"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if invalid time format"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private static String formatTime(String input) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder temp \u003d new StringBuilder();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        boolean flag \u003d false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        List\u003cString\u003e formatStrings \u003d Arrays.asList(\"d/M/y HHmm\", \"d/M/y\", \"d/M\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        List\u003cString\u003e outputFormats \u003d Arrays.asList(\"MMMMM dd, yyyy, h:mm a\", \"MMMMM dd, yyyy\", \"MMMMM dd\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (int i \u003d 0; i \u003c input.length(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            char c \u003d input.charAt(i);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (flag) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                temp.append(c);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                result.append(c);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (c \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                flag \u003d true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (int i \u003d 0; i \u003c formatStrings.size(); i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DateFormat df \u003d new SimpleDateFormat(formatStrings.get(i));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                df.setLenient(false);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                date \u003d df.parse(temp.toString().substring(3));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                DateFormat formatter \u003d new SimpleDateFormat(outputFormats.get(i));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                result.append(\"   \").append(formatter.format(date));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                //System.out.println(\"!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"Time format not acceptable!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            return result.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 106
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param s location of file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Storage(String s) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.filePath \u003d s;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Loads tasks to task list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return LinkedList containing tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if file does not exist"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public LinkedList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        LinkedList\u003cTask\u003e result \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"File not found!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                List\u003cString\u003e temp \u003d Files.lines(file.toPath())"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        .collect(Collectors.toList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                for (String s : temp) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    Task curr \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    if (s.contains(\"[T]\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        curr \u003d new Todo(s.substring(7));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    } else if (s.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        curr \u003d new Deadline(s.substring(7));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    } else if (s.contains(\"[E]\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        curr \u003d new Event(s.substring(7));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    if (s.contains(\"[✓]\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                        curr.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                    result.add(curr);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                throw new DukeException(\"File not found!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Updates Save file with any changes"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks Class dealing with manipulating global LinkedList storing tasks"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if save file fails"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void updateSaveFile(LinkedList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            FileWriter fw \u003d new FileWriter(saveFile, false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                fw.write(t.toString() + \"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"Save failed\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 84
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param description user input describing task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Set symbol for completion status"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Mark task as completed"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns Task as formatted String"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted String"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 41
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    LinkedList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor for case with no existing save file"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.tasks \u003d new LinkedList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor for case with existing save file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param lst LinkedList storing existing tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.tasks \u003d lst;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns task at given id in linkedlist"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param id index in linkedlist"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Task getTask(int id) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.tasks.get(id - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Gets all tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return linkedlist containing all tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public LinkedList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Delete task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i index in linkedlist"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if index out of bounds"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void deleteTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            this.tasks.remove(i - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No such task exist!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Mark task at index as complete"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i index in linkedlist"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @throws DukeException if index out of bounds"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void completeTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            this.tasks.get(i - 1).setDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No such task exist!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Adds task to linkedlist"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t task to be added"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns total number of tasks"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return size of linkedlist"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public LinkedList\u003cTask\u003e findTasks(String keywords) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        LinkedList\u003cTask\u003e results \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (Task t : this.tasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            if (t.toString().contains(keywords)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                results.add(t);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 96
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param s description of task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Todo(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * returns Task as formatted String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return formatted String"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays welcome message"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\\n\" + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Gets command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @return user input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays error message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param message text of error"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays goodbye message"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays all tasks in given linkedlist"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param tasks linkedlist containing tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showList(LinkedList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        showGivenList(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showMatch(LinkedList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        showGivenList(tasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    private void showGivenList(LinkedList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            System.out.println(i + \". \" + t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays confirmation for deleting task"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t task deleted"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i total number of tasks"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showDelete(Task t, int i) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Now you have \" + i + \" tasks in the list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays confirmation for completing task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t completed task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showComplete(Task t) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays confirmation for adding task"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param t task added"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * @param i total number of tasks"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showAddedTask(Task t, int i) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"Now you have \" + i + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     * Displays line"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        System.out.println(\"-----------------------------------------------------------------------------------\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 114
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest1() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"deadline return book /by 29/02/2019 1800\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest2() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"deadline return book /by 31/4/2019 1800\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest3() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"deadline return book /by 31/13/2019 1800\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest4() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"deadline return book /by when the cow jumps over the moon\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void dateInputTest5() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            Parser.parse(\"event return book /at when the cow jumps over the moon\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 44
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void getTaskTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(IndexOutOfBoundsException.class, () -\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            t.getTask(1);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void completeTaskTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            t.completeTask(1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    public void deleteTaskTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "            t.deleteTask(1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SQwQ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SQwQ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SQwQ": 32
    }
  }
]
