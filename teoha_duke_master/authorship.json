[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "checkstyle{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 29,
      "-": 14
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": "D | 0 | return book | 6/6/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "E | 0 | project meeting | 24/08/2019 1800 - 24/08/2019 2000"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "T | 0 | make a boat"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "E | 0 | testui | 20/10/2019 1234 - 21/12/2019 1235"
      }
    ],
    "authorContributionMap": {
      "teoha": 5
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": " * Starting point of the application."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "    ScrollPane scrollPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "    VBox dialogContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "    TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "    Button sendButton;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "    AnchorPane mainLayout;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "    Scene scene;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Main driver function for the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param filePath Path to save events save file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teoha"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teoha"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teoha"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teoha"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teoha"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teoha"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Initializes and executes the application."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teoha"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teoha"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teoha"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teoha"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teoha"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teoha"
        },
        "content": "                Command c \u003d Parser.parseUserInput(fullCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teoha"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teoha"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teoha"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teoha"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teoha"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teoha"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teoha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teoha"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Returns response to a userImage input."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return String representation of the result of a userImage input"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teoha"
        },
        "content": "        PrintStream ps \u003d new PrintStream(baos);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teoha"
        },
        "content": "        final PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ui.switchStream(ps);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teoha"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teoha"
        },
        "content": "            String fullCommand \u003d input;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teoha"
        },
        "content": "            Command c \u003d Parser.parseUserInput(fullCommand);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teoha"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teoha"
        },
        "content": "            if (c.isExit()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teoha"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teoha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teoha"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teoha"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.setOut(old);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return baos.toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 103,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": " * Launches the JavaFX GUI."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.gui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 32
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "/** Abstract class that all Commands that add tasks into current list of tasks. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 6
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "import static duke.util.Parser.parseDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "/** Represents command to add a deadline task into task list which has yet to be executed. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class AddDeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public AddDeadlineCommand(String description, String date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Adds a deadline into the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param tasks Current list of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param ui UI being used"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param storage Current storage in use"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws IOException Error with accessing file or file writer"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws EmptyDescriptionException Error when no description is provided"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws ParseException Error when incorrect format for date is used"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "            throws IOException, EmptyDescriptionException, ParseException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Date deadlineDate \u003d parseDate(date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Task task \u003d new Deadline(description, deadlineDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ui.showTaskAddedMessage(task, tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": "        storage.saveDeadLine(description, date);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Test Exit Command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Whether command is an Exit Command"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 55
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "import static duke.util.Parser.parseDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "/** The AddEventCommandClass represents a command used to add events into the current list. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class AddEventCommand extends AddCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public AddEventCommand(String description, String duration) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Adds an event into task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param tasks Current list of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param ui UI being used"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param storage Current storage in use"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws IOException Error with accessing file or file writer"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws EmptyDescriptionException Error when no description is provided"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws ParseException Error when incorrect format for date is used"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "            throws IOException, EmptyDescriptionException, ParseException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Date start \u003d parseDate(duration.split(\"-\")[0].trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Date end \u003d parseDate(duration.split(\"-\")[1].trim());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Task task \u003d new Event(description, start, end);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ui.showTaskAddedMessage(task, tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teoha"
        },
        "content": "        storage.saveEvent(description, duration);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Tests Exit Command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return whether Command is an Exit Command"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 58
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class AddTodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Adds a to do task into task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param tasks Current list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param ui UI being used"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param storage Current storage in use"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws IOException Error with accessing file or file writer"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws EmptyDescriptionException Error when no description is provided"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "            throws IOException, EmptyDescriptionException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "            throw new EmptyDescriptionException("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    \"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Task task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ui.showTaskAddedMessage(task, tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "        storage.saveTodo(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Tests Exit Command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Whether command is an Exit Command"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 49
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "/** The Command class represents commands made by the user that are yet to be executed. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Executes command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param tasks Current list of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param ui UI being used"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param storage Current storage in use"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws IOException Error with accessing file or file writer"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws EmptyDescriptionException Error when no description is provided"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws ParseException Error when incorrect format for date is used"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "            throws IOException, EmptyDescriptionException, ParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Tests if command is exit command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Returns true if command is exit command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Deletes a singular task from current task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param tasks Current list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param ui UI being used"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param storage Current storage in use"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws IOException Error with accessing file or file writer"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws EmptyDescriptionException Error when no description is provided"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws ParseException Error when incorrect format for date is used"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "            throws IOException, EmptyDescriptionException, ParseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Task task \u003d tasks.getByIndex(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "        tasks.delete(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ui.showDeleteMessage(task, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Tests Exit Command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Whether command is an Exit Command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Marks a task as done by its index."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param tasks Current list of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param ui UI being used"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param storage Current storage in use"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws IOException Error with accessing file or file writer"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Task task \u003d tasks.getByIndex(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ui.showDoneMessage(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Tests if command is an Exit Command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Whether command is Exit Command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Exits the program and saves list into current storage."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param tasks Current list of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param ui UI being used"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param storage Current storage in use"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws IOException Error with accessing file or file writer"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "        storage.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ui.showClosingMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Tests if command is exit command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Whether command is an exit command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 32
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "            throws IOException, EmptyDescriptionException, ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "        List\u003cTask\u003e relevantList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.listSize(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "            if (tasks.getByIndex(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "                relevantList.add(tasks.getByIndex(i));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ui.showFindMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "        for (int i \u003d 0; i \u003c relevantList.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "            ui.showListElement(relevantList.get(i), i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 39
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": " * Executes command to list all tasks in tasklist."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": " * @param tasks Current list of tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": " * @param ui UI being used"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": " * @param storage Current storage in use"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": " * @throws IOException Error with accessing file or file writer"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ui.showListHeader();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.listSize(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "            ui.showListElement(tasks.getByIndex(i), i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Tests if command is exit command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Returns true if command is exif command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 34
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "/** Thrown when user inputs a task but leaves the description field empty. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "/** Thrown when user inputs an invalid command. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownStorageEntryException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class UnknownStorageEntryException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public UnknownStorageEntryException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public UnknownStorageEntryException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 10
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "        final Circle clip \u003d new Circle(50, 50, 45);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teoha"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teoha"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Creates and returns a new dialog box with the image"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * on the left."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param text Text in the dialog box"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param img Image attached to the dialog box"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Dialog box with image on the left."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teoha"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teoha"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 71
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Initializes properties of several nodes. Adds a welcome"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * message to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "        dialogContainer"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "                .getChildren()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "                .add(DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\\nWhat can I do for you?\", dukeImage));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teoha"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teoha"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teoha"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teoha"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teoha"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teoha"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teoha"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "/** Represents a deadline task. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public Deadline(String description, Date date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Returns the date of the deadline in numerical format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return A string representation of the date of the deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "                \"%02d/%02d/%04d %02d%02d\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "                date.getDate(),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "                date.getMonth(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "                date.getYear() + 1900,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "                date.getHours(),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "                date.getMinutes());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Returns a description of the properties of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return a string representation of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), getDateString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 38
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "/** Represents an event task. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Date start;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Date end;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Creates an event that comprises a start and end time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param start Starting time of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param end Ending time of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public Event(String description, Date start, Date end) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Returns the duration of the event separated by a dash."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return A string representation of the duration of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public String getDurationString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "                \"%02d/%02d/%04d %02d%02d - %02d/%02d/%04d %02d%02d\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "                start.getDate(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "                start.getMonth(),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "                start.getYear() + 1900,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "                start.getHours(),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "                start.getMinutes(),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "                end.getDate(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "                end.getMonth(),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "                end.getYear() + 1900,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "                end.getHours(),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "                end.getMinutes());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Returns a description of the properties of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return a string representation of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), getDurationString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 52
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": " * Parent class of all tasks. Tasks are identified by having a description and its completion"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": " * status."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return a string describing the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Sets the description of the task to the given input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param description User input of new description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Returns completion status of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Returns true if task is completed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public boolean checkDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Sets the completion status of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param done User input of new completion state."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teoha"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Returns icon depicting completions status for the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return return tick or X symbols"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Returns string representation of properties in the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return string representation of task properties."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 70
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "/** Represents a to do task. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Returns a description of the properties of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return a string representation of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 18
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.exception.UnknownStorageEntryException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": " * Parser contains the parseUserInput method which reads a command string and makes sense of its contents."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Reads the user input, makes sense of the input and return the corresponding Command which the"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * user intended."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param fullCommand String representation of the user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Command derived from understanding the user input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws EmptyDescriptionException Thrown when does not include a description"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws InvalidCommandException   Thrown when input string cannot be parsed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public static Command parseUserInput(String fullCommand)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "            throws EmptyDescriptionException, InvalidCommandException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": "        String[] strArr \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": "        switch (strArr[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": "        case (\"bye\"):"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teoha"
        },
        "content": "        case (\"list\"):"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teoha"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teoha"
        },
        "content": "        case (\"done\"):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teoha"
        },
        "content": "            int index \u003d Integer.parseInt(fullCommand.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teoha"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teoha"
        },
        "content": "        case (\"find\"):"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teoha"
        },
        "content": "            String keyword \u003d strArr[1].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teoha"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teoha"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teoha"
        },
        "content": "            for (int i \u003d 1; i \u003c strArr.length; i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teoha"
        },
        "content": "                description +\u003d strArr[i];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teoha"
        },
        "content": "                if (i !\u003d strArr.length - 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    description +\u003d \" \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teoha"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teoha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teoha"
        },
        "content": "            return new AddTodoCommand(description);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teoha"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teoha"
        },
        "content": "            String date \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teoha"
        },
        "content": "            int x \u003d 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teoha"
        },
        "content": "            for (int i \u003d 1; i \u003c strArr.length; i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teoha"
        },
        "content": "                if (!strArr[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    description +\u003d strArr[i];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    if (!strArr[i + 1].equals(\"/by\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teoha"
        },
        "content": "                        description +\u003d \" \";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teoha"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    x \u003d i;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teoha"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teoha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teoha"
        },
        "content": "            for (int i \u003d x + 1; i \u003c strArr.length; i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teoha"
        },
        "content": "                date +\u003d strArr[i];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teoha"
        },
        "content": "                if (i !\u003d strArr.length - 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    date +\u003d \" \";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teoha"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teoha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teoha"
        },
        "content": "            return new AddDeadlineCommand(description, date);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teoha"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teoha"
        },
        "content": "            String duration \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teoha"
        },
        "content": "            int y \u003d 0;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teoha"
        },
        "content": "            for (int i \u003d 1; i \u003c strArr.length; i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teoha"
        },
        "content": "                if (!strArr[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    description +\u003d strArr[i];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    if (!strArr[i + 1].equals(\"/at\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teoha"
        },
        "content": "                        description +\u003d \" \";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teoha"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    y \u003d i;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teoha"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teoha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teoha"
        },
        "content": "            for (int i \u003d y + 1; i \u003c strArr.length; i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teoha"
        },
        "content": "                duration +\u003d strArr[i];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teoha"
        },
        "content": "                if (i !\u003d strArr.length - 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    duration +\u003d \" \";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teoha"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teoha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teoha"
        },
        "content": "            return new AddEventCommand(description, duration);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teoha"
        },
        "content": "        case (\"delete\"):"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teoha"
        },
        "content": "            int i \u003d Integer.parseInt(fullCommand.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teoha"
        },
        "content": "            return new DeleteCommand(i);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teoha"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teoha"
        },
        "content": "            throw new InvalidCommandException("
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Reads and makes sense of storage input. Returns a task to be placed in"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * task list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param info Information string provided by storage."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Task parsed"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public static Task parseStorage(String info) throws ParseException, UnknownStorageEntryException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teoha"
        },
        "content": "        String[] infoArr \u003d info.split(Pattern.quote(\"|\"));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teoha"
        },
        "content": "        String[] dateArr;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teoha"
        },
        "content": "        if (infoArr[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teoha"
        },
        "content": "            newTask \u003d new ToDo(infoArr[2].trim());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teoha"
        },
        "content": "            if (infoArr[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teoha"
        },
        "content": "                newTask.setDone(true);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teoha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teoha"
        },
        "content": "            return newTask;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teoha"
        },
        "content": "        } else if (infoArr[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teoha"
        },
        "content": "            dateArr \u003d infoArr[3].trim().split(\"/\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teoha"
        },
        "content": "            assert Integer.parseInt(dateArr[1]) \u003c\u003d 12 : \"Invalid Month\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teoha"
        },
        "content": "            assert Integer.parseInt(dateArr[0]) \u003c\u003d 31 : \"Invalid Day\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teoha"
        },
        "content": "            assert Integer.parseInt(dateArr[2].substring(5,7)) \u003c 24 : \"Invalid Hours\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teoha"
        },
        "content": "            assert Integer.parseInt(dateArr[2].substring(7,9)) \u003c 60 : \"Invalid Minutes\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teoha"
        },
        "content": "            Date newDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\", Locale.getDefault()).parse(infoArr[3].trim());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teoha"
        },
        "content": "            newTask \u003d"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    new Deadline("
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teoha"
        },
        "content": "                            infoArr[2].trim(),"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teoha"
        },
        "content": "                            newDate);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teoha"
        },
        "content": "            if (infoArr[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teoha"
        },
        "content": "                newTask.setDone(true);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teoha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teoha"
        },
        "content": "            return newTask;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teoha"
        },
        "content": "        } else if (infoArr[0].trim().equals(\"E\")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teoha"
        },
        "content": "            dateArr \u003d infoArr[3].trim().split(\"/\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teoha"
        },
        "content": "            assert Integer.parseInt(dateArr[1]) \u003c\u003d 12 : \"Invalid Month\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teoha"
        },
        "content": "            assert Integer.parseInt(dateArr[0]) \u003c\u003d 31 : \"Invalid Day\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teoha"
        },
        "content": "            assert Integer.parseInt(dateArr[2].substring(5,7)) \u003c 24 : \"Invalid Hours\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teoha"
        },
        "content": "            assert Integer.parseInt(dateArr[2].substring(7,9)) \u003c 60 : \"Invalid Minutes\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teoha"
        },
        "content": "            String startDate \u003d infoArr[3].split(\"-\")[0].trim();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teoha"
        },
        "content": "            String endDate \u003d infoArr[3].split(\"-\")[1].trim();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teoha"
        },
        "content": "            Date newDurationStart \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\", Locale.getDefault()).parse(startDate);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teoha"
        },
        "content": "            Date newDurationEnd \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\", Locale.getDefault()).parse(endDate);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teoha"
        },
        "content": "            newTask \u003d"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teoha"
        },
        "content": "                    new Event("
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teoha"
        },
        "content": "                            infoArr[2].trim(),"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teoha"
        },
        "content": "                            newDurationStart,"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teoha"
        },
        "content": "                            newDurationEnd);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teoha"
        },
        "content": "            if (infoArr[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teoha"
        },
        "content": "                newTask.setDone(true);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teoha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teoha"
        },
        "content": "            return newTask;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teoha"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teoha"
        },
        "content": "            throw new UnknownStorageEntryException();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Parses and a date in String format and returns it in java.util.Date"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * format."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param date String representation of the date"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return java.util.Date format of the date"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public static Date parseDate(String date) throws ParseException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return new SimpleDateFormat(\"dd/MM/yyyy HHmm\", Locale.getDefault()).parse(date);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 182
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.exception.UnknownStorageEntryException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "/** Deals with loading tasks from the file and saving tasks in the file. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "    FileWriter fileWriter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Loads tasks saved in an external file into the current list of tasks. Initializes a"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * FileWriter to write into external source."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return List of tasks loaded from external source"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws IOException Thrown when there is a problem with loading the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws ParseException Thrown when date provided by user is in the wrong format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "        List\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "        fileWriter \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "        while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "                tempTaskList.add(Parser.parseStorage(fileScanner.nextLine()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return tempTaskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Saves a to do task into the external file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws IOException Thrown if there is an error writing into file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void saveTodo(String description) throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teoha"
        },
        "content": "        if (fileWriter !\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teoha"
        },
        "content": "            fileWriter.write(String.format(\"\\nT | 0 | %s\", description));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teoha"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Saves a deadline task in to the external file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param date Date of deadline"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws IOException Thrown if there is an error writing into file"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void saveDeadLine(String description, String date) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teoha"
        },
        "content": "        if (fileWriter !\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teoha"
        },
        "content": "            fileWriter.write(String.format(\"\\nD | 0 | %s | %s\", description, date));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teoha"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Saves an event task into the external file."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param duration Duration of the event detailing the start and end date"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws IOException Thrown if there is an error writing into file"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void saveEvent(String description, String duration) throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teoha"
        },
        "content": "        if (fileWriter !\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teoha"
        },
        "content": "            fileWriter.write(String.format(\"\\nE | 0 | %s | %s\", description, duration));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teoha"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teoha"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Closes the File Writer."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @throws IOException Thrown if there is an error closing the File Writer"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void close() throws IOException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teoha"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 98
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "/** Contains the task list and operations to manage tasks in the list. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Add a task into the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param task Task to be added into the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Remove a task from the list using its index as displayed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param inputNum Index of item to remove as displayed to user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void delete(int inputNum) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "        tasks.remove(inputNum - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Returns a task from the task list by its index (starting from 0)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param index Index of item in the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Task denoted by index."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public Task getByIndex(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Returns number of tasks in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return Integer of total number of tasks in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public int listSize() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 56
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "/** Provides methods to deal with all interactions with the user. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Prints the message of an error."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param errorMessage Message of an error"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /** Prints the message when the user terminates the operation. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void showClosingMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Prints an element in the list displayed to the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param task Task being processed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param index Index of the task being processed"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void showListElement(Task task, int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.println((index + 1) + \". \" + task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /** Prints the header of the list when requested by user. */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void showListHeader() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Prints the message shown after a task is marked as done."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param task Task being marked as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void showDoneMessage(Task task) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Prints message about the task and the size of task list after a task is added into the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param task Task being added to the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void showTaskAddedMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.println(String.format(\"Now you have %d tasks in the list.\", tasks.listSize()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Prints message after a task is deleted."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param task Task being deleted"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @param tasks List of tasks task is being deleted from."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void showDeleteMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teoha"
        },
        "content": "                \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teoha"
        },
        "content": "                        + task"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teoha"
        },
        "content": "                        + \"\\nNow you have \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teoha"
        },
        "content": "                        + tasks.listSize()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teoha"
        },
        "content": "                        + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /** Prints the welcome message when the application first starts up. */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /** Prints an empty line. */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /** Prints the error message when file containing saved tasks cannot be loaded. */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.println(\"Cannot load file\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /** Prints message header for list in list of relevant results. */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void showFindMessage() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teoha"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * Reads the command in the next line a user inputs."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teoha"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teoha"
        },
        "content": "     * @return String representation of the command in the next line."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teoha"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teoha"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void switchStream(PrintStream ps) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teoha"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 112
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-border-style: solid;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "teoha": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" AnchorPane.topAnchor\u003d\"0\" AnchorPane.bottomAnchor\u003d\"41.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "teoha": 19
    }
  },
  {
    "path": "src/test/java/CommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class CommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void addDeadLineCommandTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Assertions.assertEquals(false,new AddDeadlineCommand(\"description\",\"date\").isExit());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 10
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void deadlineTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"description\", new Date(2019 - 1900, 8, 26, 18, 0));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Assertions.assertEquals(\"26/08/2019 1800\", deadline.getDateString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": "        //Assertions.assertEquals(\"[D][\\u2718] description (by: 26/08/2019 1800)\", deadline.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Event event \u003d new Event(\"description\", new Date(2019 - 1900, 8, 26, 18, 0),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "                new Date(2019 - 1900, 8, 26, 19, 0));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "        Assertions.assertEquals(\"26/08/2019 1800 - 26/08/2019 1900\", event.getDurationString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teoha"
        },
        "content": "        //Assertions.assertEquals(\"[E][\\u2718] description (at: 26/08/2019 1800 - 26/08/2019 1900)\", event.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teoha"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teoha"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teoha"
        },
        "content": "        ToDo todo \u003d new ToDo(\"description\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teoha"
        },
        "content": "        //Assertions.assertEquals(\"[T][\\u2718] description\", todo.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teoha"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teoha"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teoha": 31
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "[T][✗] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": "Now you have 1 tasks in the list."
      }
    ],
    "authorContributionMap": {
      "teoha": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "todo return book\\nlist"
      }
    ],
    "authorContributionMap": {
      "teoha": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teoha"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teoha"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teoha"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teoha"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teoha"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teoha"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teoha"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teoha"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teoha"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teoha"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teoha"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teoha"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teoha"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teoha"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teoha"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teoha"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teoha"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "teoha": 21
    }
  }
]
