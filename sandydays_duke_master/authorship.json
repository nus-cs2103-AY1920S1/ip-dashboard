[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "test {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 9,
      "-": 19
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Starts execution of the bot."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Starts the Duke bot with given ui, storage, and task list generated from the storage (if any)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * and prompts user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Creates and runs new Duke object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sandydays": 53,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * DukeException class that is thrown when any kind of exception is encountered during file loading, parsing of user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * input, or execution of the command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": " }"
      }
    ],
    "authorContributionMap": {
      "sandydays": 20
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.command.ShowCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.lang.ArrayIndexOutOfBoundsException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles parsing of user input to commands so that they can be interpreted by the bot."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Parses the user input and returns a specific command type upon interpretation (on a case-by-case basis of the"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * user input)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param userInput Command given by user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @return Sub-class of Command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @throws DukeException if error in parsing certain Add Command subclasses."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        String[] command \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        switch (command[0]) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                return new ShowCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                int i \u003d Integer.parseInt(command[1]) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                return new DoneCommand(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                int j \u003d Integer.parseInt(command[1]) - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                return new DeleteCommand(j);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    return new TodoCommand(command[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    String[] detailsD \u003d command[1].split(\" /by \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    return new DeadlineCommand(detailsD[0], detailsD[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! The description of the deadline is incomplete.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    String[] detailsE \u003d command[1].split(\" /at \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    return new EventCommand(detailsE[0], detailsE[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! The description of the event is incomplete.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                return new FindCommand(command[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                return new UnknownCommand();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sandydays": 73
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles interactions of the duke bot\u0027s list of tasks and the file that saves these tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Loads file with previously saved list of tasks, if any, or creates a new file in the desired location."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @throws DukeException If unable to create new file or read from an existing file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public LinkedList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        LinkedList\u003cTask\u003e tasks \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                tasks \u003d readData(file, tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private LinkedList\u003cTask\u003e readData(File file, LinkedList\u003cTask\u003e tasks) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Scanner readFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            String nextTask \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            String[] details \u003d nextTask.split(Pattern.quote(\" | \"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            String type \u003d details[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                task \u003d new Todo(details[2]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                task \u003d new Deadline(details[2], details[3]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                task \u003d new Event(details[2], details[3]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            if (details[1].equals(\"1\")) task.markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Writes tasks in the taskList to a file in the hard drive that can be retrieved by the user when they use the bot"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * again."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @throws IOException If unable to write updated taskList to the file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void writeToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        LinkedList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            toWrite +\u003d tasks.get(i).toSave();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            if (i !\u003d tasks.size() - 1) toWrite +\u003d \"\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        fw.write(toWrite);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sandydays": 101
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Stores list of tasks and handles changes to this list (such as addition, deletion, modification of tasks) based on"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private LinkedList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.taskList \u003d new LinkedList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public TaskList(LinkedList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Gets list of tasks stored in this instance of the TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public LinkedList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Marks a certain task as done in the taskList when user inputs done command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param taskNum Task to be marked done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @return Task marked done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @throws DukeException if the taskNum passed in is not valid."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Task markDone(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        if (taskNum + 1 \u003e taskList.size() || taskNum + 1 \u003c 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! This task does not exist.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Task t \u003d taskList.remove(taskNum);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        taskList.add(taskNum, t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Deletes a certain task from the taskList when user inputs delete command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param taskNum Task to be deleted."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @return Task deleted."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @throws DukeException if the taskNum passed in is not valid."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Task deleteTask(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        if (taskNum + 1 \u003e taskList.size() || taskNum + 1 \u003c 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! This task does not exist.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Task t \u003d taskList.remove(taskNum);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Adds a certain task to the taskList when user inputs an add command (more specifically deadline, event, and todo)."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param t Task to add."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public LinkedList\u003cTask\u003e findTasks(String toFind) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        LinkedList\u003cTask\u003e result \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        CharSequence cs \u003d toFind;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        for (int k \u003d 0; k \u003c taskList.size(); k++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            Task t \u003d taskList.get(k);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            if (t.getDescription().contains(cs)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                result.add(t);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                result.add(new Task(\"fake task\"));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 91
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles user\u0027s interactions with the bot\u0027s ui, printing appropriate messages when needed to indicate"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * the result of a command typed in by the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Prints loading error message if any exception thrown when file with tasks is loaded from storage or created."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"\\u2639 OOPS!!! Unable to load file. Try again!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Prints welcome message to user to prompt user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Reads user input and returns it."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @return userInput that was scanned."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Prints line before and after the bot\u0027s response to a command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Prints error message for any error thrown from the parsing or execution of a user command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param error Error message to be printed to screen."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Prints exit message before the bot is closed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Prints all tasks in the list when user inputs list command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        LinkedList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            System.out.println((i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Prints a modified task if the task\u0027s status has changed (to completed) when the user inputs done command."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param t Changed Task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showChangedTask(Task t) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Prints a task that was deleted by the user through the delete command."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param t Deleted task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showDeletedTask(Task t) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Prints number of tasks left in the list once a task has been deleted through the delete command."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void showNumTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        int size \u003d taskList.getTasks().size();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.print(\"Now you have \" + size);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            System.out.println(\" task in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            System.out.println(\" tasks in the list.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Prints a task that was added to task list through the commands deadline, event, or todo."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param task Added task."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void printAddedTask(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        int taskListSize \u003d tasks.getTasks().size();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        System.out.print(\"Now you have \" + taskListSize);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        if (taskListSize \u003d\u003d 1) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            System.out.println(\" task in the list.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            System.out.println(\" tasks in the list.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void printFoundTasks(LinkedList\u003cTask\u003e foundTasks) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        if (foundTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            System.out.println(\"No matching tasks found!\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                Task t \u003d foundTasks.get(i);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                if (!t.getDescription().equals(\"fake task\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                    System.out.println((i + 1) + \".\" + t);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 145
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles commands that require adding a task to the list of tasks, namely deadline, event, and todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private Task addedTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public AddCommand(Task t) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.addedTask \u003d t;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        tasks.addTask(addedTask);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.printAddedTask(addedTask, tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 29
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Defines the two basic methods, execute and isExit, that all commands inheriting from this class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * must implement."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Executes a command (based on the command type and the current status of the TaskList, Ui, and Storage)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param tasks List of Tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param ui Ui instance."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @param storage Storage instance that holds access to file in hard drive."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @throws DukeException If there is a problem in the format of the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Returns a boolean based on whether a user command requires the Duke Bot to exit or not."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @return Boolean that is true only for the bye command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles the command to add a deadline to the list of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public DeadlineCommand(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(new Deadline(description, by));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 15
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles command that requires deleting a task from the list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Task taskChanged \u003d tasks.deleteTask(taskNum);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.showDeletedTask(taskChanged);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.showNumTasks(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles command that marks a task from the list of tasks as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Task taskChanged \u003d tasks.markDone(taskNum);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.showChangedTask(taskChanged);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 30
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles the command that requires adding an event to the list of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public EventCommand(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(new Event(description, at));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 15
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles the command to exit from the program and close the bot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            ui.showExit();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 29
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    private String toFind;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public FindCommand(String toFind) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.toFind \u003d toFind;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        LinkedList\u003cTask\u003e tasksWithKeyword \u003d tasks.findTasks(toFind);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.printFoundTasks(tasksWithKeyword);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ShowCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles the command to show the list of all tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class ShowCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        ui.showTasks(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 21
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles the command to add a todo to the list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public TodoCommand(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(new Todo(command));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 14
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles the command that is not recognised by duke bot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 22
    }
  },
  {
    "path": "src/main/java/duke/task/DateAndTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Converts dd/mm/yyyy XXXX hours to Date of Month, Year, Time in 12-hour format."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class DateAndTime {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected String dateAndTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected int date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected int month;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected int year;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected int timeNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected String timeDay;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected String[] monthMappings \u003d new String[]{\"\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                                                    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public DateAndTime(String dateAndTime) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            String[] split \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            String date[] \u003d split[0].split(\"/\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            int time \u003d Integer.parseInt(split[1]) / 100;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            this.date \u003d Integer.parseInt(date[0]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            this.month \u003d Integer.parseInt(date[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            this.year \u003d Integer.parseInt(date[2]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            if (time \u003c 12) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                this.timeNumber \u003d (time \u003d\u003d 0) ? 12 : time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                this.timeDay \u003d \"am\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                this.timeNumber \u003d time - 12;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "                this.timeDay \u003d \"pm\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sandydays"
        },
        "content": "            throw new DukeException(\"Date and time not in correct format.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Saves the original dd/mm/yyyy XXXX hours as a string to use when saving these tasks into"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * the hard drive."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @return String format in which Date and Time was received in the constructor."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return dateAndTime;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        String extra \u003d (date \u003d\u003d 1) ? \"st\" : (date \u003d\u003d 2) ? \"nd\" : (date \u003d\u003d 3) ? \"rd\" : \"th\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return this.date + extra + \" of \" + monthMappings[this.month] + \" \" + this.year + \", \" + this.timeNumber + this.timeDay;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles a certain type of Task with a description and date and time when deadline will happen."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected DateAndTime by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.by \u003d new DateAndTime(by);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"D | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \" + by.toSave();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles a certain type of Task with a description and date and time when event will happen."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected DateAndTime at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.at \u003d new DateAndTime(at);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"E | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \" + at.toSave();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles different types of Tasks, including events, deadlines, and todos."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Returns a status icon based on boolean value of isDone"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @return Unicode character check mark if isDone is true, else returns unicode character heavy ballot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Gets the description of this Task\u0027s instance."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @return String description of the Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Marks this task\u0027s instance as done by toggling the isDone attribute."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * Saves a dummy string (is overridden by subclasses of Task)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     * @return Empty string."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sandydays"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 53
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": " * Handles a certain type of Task with only a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toSave() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 21
    }
  },
  {
    "path": "src/test/data/tasksTestExpected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "T | 0 | buy groceries"
      }
    ],
    "authorContributionMap": {
      "sandydays": 1
    }
  },
  {
    "path": "src/test/java/TodoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class TodoCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    // Since this method returns void, testing it using its side effects"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void executingCommand_todoCommand_success() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        // Setting up actual TaskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Storage s \u003d new Storage(\"data/tasksTest.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        new TodoCommand(\"buy groceries\").execute(t, ui, s);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        // Setting up expected list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        LinkedList\u003cTask\u003e tExpected \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        tExpected.add(new Todo(\"buy groceries\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        // Comparing the list of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        assertEquals(tExpected.get(0).toString(), t.getTasks().get(0).toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void exiting_todoCommand_noExitingOrFalse() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        assertEquals(false, new TodoCommand(\"buy groceries\").isExit());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 36
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sandydays"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sandydays"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void todoSavingAsString_todo_expectedString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Task t \u003d new Todo(\"buy groceries\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        assertEquals(\"T | 0 | buy groceries\", t.toSave());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        assertEquals(\"T | 1 | buy groceries\", t.toSave());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    public void todoPrintingAsString_todo_expectedString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        Task t \u003d new Todo(\"buy groceries\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        assertEquals(\"[T][\\u2718] buy groceries\", t.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sandydays"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sandydays"
        },
        "content": "        assertEquals(\"[T][\\u2713] buy groceries\", t.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sandydays"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sandydays"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sandydays": 26
    }
  },
  {
    "path": "src/test/tasksTestExpected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sandydays"
        },
        "content": "T | 0 | buy groceries"
      }
    ],
    "authorContributionMap": {
      "sandydays": 1
    }
  }
]
