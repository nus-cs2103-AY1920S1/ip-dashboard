[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public Deadline(String topic, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        super(topic);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        this.details \u003d String.format(\"%s (by: %s)\", topic, deadline);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 10
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "import java.util.ListIterator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private static final String INDENTATION_LVL1 \u003d \"     \"; // 5 spaces, for first level indentation."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private static final String INDENTATION_LVL2 \u003d \"       \"; // 7 spaces, for second level indentation (i.e. more inner)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // 79 characters, excluding \\n. Line is of length 75 characters."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private static final String LINE \u003d \"    ___________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private static final int CHARACTERS_LIMIT \u003d 73; // length that a string to be printed should not exceed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        taskList \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        new Duke().start();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // Start Duke bot"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        receiveCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private void printWelcomeMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        String logo \u003d \"      ____        _        \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                + \"     |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                + \"     | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                + \"     | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        echo(() -\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            System.out.print(logo + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            System.out.print(INDENTATION_LVL1 + \"Hello! I\u0027m Duke\\n\" + INDENTATION_LVL1 + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // Receive command from the user, exits the program when user enter \"bye\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private void receiveCommand() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            String command \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                    addToDo(command);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                    addDeadline(command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                    addEvent(command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                } else if (\"list\".equals(command)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                    list();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                    markTaskAsDone(command);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                    deleteTask(command);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                } else if (\"bye\".equals(command)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                    echo(\"Bye. Hope to see you again!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                echo(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // add to do entry to the taskList"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private void addToDo(String command) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        String topic \u003d command.substring(4).trim();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        if (\"\".equals(topic)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        addTask(new ToDo(topic));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // add deadline entry to the taskList"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private void addDeadline(String command) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        String[] details \u003d command.substring(8).trim().split(\"/by\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        if (details.length \u003d\u003d 1 || \"\".equals(details[0].trim()) || \"\".equals(details[1].trim())) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            throw new DukeException(\"The description and deadline of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        String topic \u003d details[0].stripTrailing();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        String deadline \u003d details[1].stripLeading();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        addTask(new Deadline(topic, deadline));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // add event entry to the taskList"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private void addEvent(String command) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        String[] details \u003d command.substring(5).trim().split(\"/at\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        if (details.length \u003d\u003d 1 || \"\".equals(details[0].trim()) || \"\".equals(details[1].trim())) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            throw new DukeException(\"The description and date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        String topic \u003d details[0].stripTrailing();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        String date \u003d details[1].stripLeading();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        addTask(new Event(topic, date));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // add Task entries(to do, deadline \u0026 event) to the taskList"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private void addTask(Task task) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        echo(() -\u003e {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            System.out.printf(\"%sGot it. I\u0027ve added this task:\\n\", INDENTATION_LVL1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            System.out.printf(indentAndSplit(task.toString(), INDENTATION_LVL2));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            System.out.printf(String.format(\"%sNow you have %s in the list.\\n\", INDENTATION_LVL1, getTaskPhrase()));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        });"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // delete a task from the taskList"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private void deleteTask(String command) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            int index \u003d Integer.parseInt(command.substring(6).trim());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            if (!indexIsValid(index)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                throw new DukeException(\"Index must be between 1 and the number of task added!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            Task task \u003d taskList.remove(index - 1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            echo(() -\u003e {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                System.out.printf(\"%sNoted. I\u0027ve removed this task:\\n\", INDENTATION_LVL1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                System.out.printf(indentAndSplit(task.toString(), INDENTATION_LVL2)); // task details"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                System.out.printf(\"%sNow you have %s in the list.\\n\", INDENTATION_LVL1, getTaskPhrase());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            });"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            echo(String.format(\"%s There can only be an integer after the word \\\"delete\\\"\", DukeException.PREFIX ));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // Mark a task in the task list as done"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private void markTaskAsDone(String command) throws DukeException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            int index \u003d Integer.parseInt(command.substring(4).trim());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            if (!indexIsValid(index)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                throw new DukeException(\"Index must be between 1 and the number of task added!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            echo(() -\u003e {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                System.out.printf(\"%sNice! I\u0027ve marked this task as done:\\n\", INDENTATION_LVL1);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                System.out.printf(indentAndSplit(task.toString(), INDENTATION_LVL2)); // task details"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            });"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            echo(String.format(\"%s There can only be an integer after the word \\\"done\\\"\", DukeException.PREFIX ));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // List all the tasks in the taskList"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private void list() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        echo(() -\u003e {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            System.out.print(INDENTATION_LVL1 + \"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            ListIterator\u003cTask\u003e iterator \u003d taskList.listIterator();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                String taskDetails \u003d iterator.next().toString();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                System.out.printf(indentAndSplit(String.format(\"%d.%s\", i + 1, taskDetails),"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                        INDENTATION_LVL1));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        });"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     * print the stuff specified by the printFunction, enclosed within two lines."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     * @param printFunction function which print something."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public void echo(PrintFunction printFunction) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        System.out.print(LINE);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        printFunction.print();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        System.out.print(LINE);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     * Print the strings provided line by line, enclosed within two long horizontal lines."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     * Each line is indented by 5 spaces."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     * @param strings strings to be printed."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public void echo(String... strings) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        echo(() -\u003e {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            for (String string : strings) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                System.out.print(indentAndSplit(string, INDENTATION_LVL1));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        });"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // Indent a string using the indentation string given and add a newline character at the back."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // If the length of the string is more than the number of characters allowed in a line"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // (taking the indentation into account), split the string into separate lines."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private String indentAndSplit(String string, String indentation) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        int lengthLimit \u003d getLengthLimit(indentation.length());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        if (string.length() \u003c\u003d lengthLimit) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            return String.format(\"%s%s\\n\", indentation, string);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            return splitIntoLines(string, indentation.length());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     * Split a given string into lines if it\u0027s more than the characters limit allowed in one line"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     * , with indentation in front of the string in each line."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     * Indentation Number is the number of spaces in front of a string in each line."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private String splitIntoLines(String string, int indentation) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(string.length() + 30);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        String indentation_string \u003d getIndentationString(indentation);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        // Remove the spaces in front of the given string first"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        String string_to_be_treated \u003d string.trim();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        int lengthLimit \u003d getLengthLimit(indentation);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            builder.append(indentation_string);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            builder.append(string_to_be_treated.substring(0, lengthLimit));"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            builder.append(\"\\n\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            string_to_be_treated \u003d string_to_be_treated.substring(lengthLimit);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            if (string_to_be_treated.length() \u003c\u003d lengthLimit) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                builder.append(indentation_string);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                builder.append(string_to_be_treated);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                builder.append(\"\\n\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // Return an indentation String"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private String getIndentationString(int indentation) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        if (indentation \u003d\u003d INDENTATION_LVL1.length()) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            return INDENTATION_LVL1;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        } else if (indentation \u003d\u003d INDENTATION_LVL2.length()) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            return INDENTATION_LVL2;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            StringBuilder identationBuilder \u003d new StringBuilder(indentation);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            for (int i \u003d 0; i \u003c indentation; i++) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "                identationBuilder.append(\" \");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "            return identationBuilder.toString();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // Check if a user-given index for accessing the taskList is valid."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private boolean indexIsValid(int index) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        return index \u003e 0 \u0026\u0026 index \u003c\u003d taskList.size();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // Return the phrase \"N word\" or \"N words\" (singular or plural)."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // N is the the number of tasks in the taskList."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private String getTaskPhrase() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        int size \u003d taskList.size();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        return size \u003e 1 ? size + \" tasks\" : size + \" task\";"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // Return the number of characters allowed in one line after taking indentation into consideration"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private int getLengthLimit(int indentation) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        return CHARACTERS_LIMIT - (indentation - INDENTATION_LVL1.length());"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 271,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public static final String PREFIX \u003d  \"\\u2639  OOPS!!!\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        super(String.format(\"%s %s\", PREFIX, message));"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public Event(String topic, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        super(topic);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        this.details \u003d String.format(\"%s (at: %s)\", topic, date);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 10
    }
  },
  {
    "path": "src/main/java/PrintFunction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": " * An interface used for printing."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "public interface PrintFunction {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     * Print the things specified in the implementation of this method."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     * This method is used for specifying what to be printed, and hence allowing objects of this interface type"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     * to be passed around to other methods."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    void print();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 11
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    private String status;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    // varies according to the actual type, definitely includes topic, other optional included fields are date."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    protected String details;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public Task(String s) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        title \u003d s;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        status \u003d \"\\u2717\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        status \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        return String.format(\"[%s][%s] %s\", type, status, details);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 27
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    public ToDo(String topic) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        super(topic);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "        this.details \u003d topic;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 7
    }
  },
  {
    "path": "src/main/test/test1.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "      ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     added: read book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     added: return book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     1. read book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     2. return book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    "
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 24
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "      ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [T][✗] read book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [D][✗] return book (by: June 6th)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [E][✗] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [T][✗] join sports club"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [T][✗] borrow book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     ☹  OOPS!!! There can only be an integer after the word \"done\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [T][✓] read book"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [T][✓] join sports club"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     1.[T][✓] read book"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     2.[D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     3.[E][✗] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     4.[T][✓] join sports club"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     5.[T][✗] borrow book"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     ☹  OOPS!!! There can only be an integer after the word \"delete\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     ☹  OOPS!!! There can only be an integer after the word \"delete\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [E][✗] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     1.[T][✓] read book"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     2.[D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     3.[T][✓] join sports club"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     4.[T][✗] borrow book"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [T][✓] join sports club"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     1.[T][✓] read book"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     2.[D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     3.[T][✗] borrow book"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [T][✗] borrow book"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     1.[T][✓] read book"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     2.[D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [T][✓] read book"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     1.[D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Now you have 0 task in the list."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     ☹  OOPS!!! Index must be between 1 and the number of task added!"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Bye. Hope to see you again!"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 145
    }
  },
  {
    "path": "text-ui-test/EXPECTED2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "      ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [T][✗] this is a super long message that your mama also don\u0027t know how "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       to deal with it"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     1.[T][✗] this is a super long message that your mama also don\u0027t know how "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     to deal with it"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [T][✓] this is a super long message that your mama also don\u0027t know how "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       to deal with it"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       [T][✓] this is a super long message that your mama also don\u0027t know how "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "       to deal with it"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Now you have 0 task in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "     Bye. Hope to see you again!"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    ___________________________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 41
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "doneabc"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "done1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "done 2 "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "deleteabc"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "deleter3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 24
    }
  },
  {
    "path": "text-ui-test/input2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "todo this is a super long message that your mama also don\u0027t know how to deal with it"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "# compile ALL the java code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "# Test 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "then"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    echo \"Test 1 result: PASSED\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    echo \"Test 1 result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "# Test 2"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "java -classpath ../bin Duke \u003c input2.txt \u003e ACTUAL2.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "diff ACTUAL2.TXT EXPECTED2.TXT"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "then"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    echo \"Test 2 result: PASSED\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "else"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    echo \"Test 2 result: FAILED\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 47
    }
  },
  {
    "path": "text-ui-test/runtest_copy.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "# compile ALL the java code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 34
    }
  },
  {
    "path": "tutorials/javaFxTutorialPart3.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 3 – Interacting with the user"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Picking up from where we left off last tutorial, we have successfully achieved the desired layout. Now let’s make the application respond to user input. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Rather than to do everything in one try, let’s iterate and build up towards our final goal. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 1 – Echoing the User"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "JavaFX has an _event-driven architecture style_. As such, we programmatically define _handler_ methods to execute as a response to certain _events_. When an event is detected, JavaFX will call the respective handlers."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "For Duke, there are two events that we want to respond to, namely the user pressing `Enter` in the `TextField` and left-clicking the `Button`. These are the `onAction` event for the `TextField` and the `onMouseClicked` event for the `Button`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "For now, let’s have the application add a new `Label` with the text from the `TextField`. Update the `Main` class as follows. You\u0027ll need to add an `import javafx.scene.control.Label;` too."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Step 1 code here"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 2 code here"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 1:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * @param text String containing text to add"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    return textToAdd;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and give it a whirl!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "![Echo not scrolling as intended](assets/EchoNotScrolling.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "At first glance everything appears to work perfectly. However, when the `VBox` stretches beyond the confines of the `ScrollPane`, the `ScrollPane` does not scroll down automatically as expected. We can remedy this by attaching a handler on the `VBox` to react to its own size changing and scrolling the `ScrollPane` down."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Update the `start` method as shown below."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    // current code ..."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Verify that the `ScrollPane` scrolls as intended."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 2 – Adding Dialog Boxes"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "In the mockup of the UI, notice that the dialog boxes are composed of two different controls (`ImageView` and `Label`) and reused multiple times. In situations like this, it is often beneficial to create our own custom control."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s create our custom control `DialogBox`:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "We use the code in our main class just like any other control. Here are the steps to update the code to use the custom control in `Main.java`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "First, add these imports:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "Next, add two images to the `main/resources/images` folder."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "For this tutorial, we have two images `DaUser.png` and `DaDuke.png` to represent the user avatar and Duke\u0027s avatar respectively but you can use any image you want."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "Image|Filename"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "---|---"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "![DaDuke](assets/DaUser.png) | `DaUser.png`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "![DaUser](assets/DaDuke.png) | `DaDuke.png`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "Add a new method to handle user input:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 2:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": " * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": " * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": " * Replace this stub with your completed method."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "private String getResponse(String input) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "Update the event handler code in the `start` method to use the new `handleUserInput` method:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and see how it works."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 2](assets/DialogBoxesIteration2.png) "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 3 – Adding custom behavior to DialogBox"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "One additional benefit of defining a custom control is that we can add behavior specific to our `DialogBox`. Let’s add a method to flip a dialog box such that the image on the left to differentiate between user input and Duke’s output."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": " * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "private void flip() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    db.flip();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    return db;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "You\u0027ll need to update the imports as follows:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "Now, we can go back to the `Main` class and change the event handler to use our new `DialogBox`. "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Chris Kheng"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application and play around with it. "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 3](assets/DialogBoxesIteration3.png)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "You have successfully implemented a fully functional GUI for Duke!  "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "1. While the GUI looks similar to the mockup, there are still parts that need to be refined. Try your hand at some of these tasks:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each DialogBox"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each ImageView and its Label"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "   * Clip the ImageView into a circle"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add background color to each dialog box"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "1. After attempting the changes, reflect critically on the following:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   * What was the development workflow like?"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "   * Is the code base well-organized?"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "Chris Kheng": 2,
      "-": 241
    }
  }
]
