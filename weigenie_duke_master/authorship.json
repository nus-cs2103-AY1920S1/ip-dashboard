[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "# weiGENIE"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "This genie will help you manage all your tasks!"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "**Available Commands**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "* help"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "* list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "* todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "* deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "* event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "* done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "* delete"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "* find"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "Command | Example |  Description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "---------------|---------------|---------------"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "`help` | help todo | Provide descriptions for each specific command in the CLI"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "`list` | list | List all current tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "`todo \u003ctodo name\u003e` | todo Buy Groceries | Add a new todo"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "`deadline \u003cdeadline name\u003e /by \u003cdate and time (dd/MM/yyyy HHmm)\u003e` | deadline Assignment /by 10/10/2019 2359 | Add a new Deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "`event \u003cevent name\u003e /at \u003cdate and time (dd/MM/yyyy HHmm)\u003e` | event Hackathon /at 23/09/2019 0900 | Add a new Event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "`done \u003ctask serial no\u003e` | done 1 | Mark a task as done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "`delete \u003ctask serial no\u003e` | delete 2 | Delete a task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "`find \u003ctext\u003e` | find Buy | Find all tasks containing the text"
      }
    ],
    "authorContributionMap": {
      "weigenie": 25
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.1\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    testRuntime(\u0027org.junit.jupiter:junit-jupiter-engine:5.5.1\u0027)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "test {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "run {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weigenie"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weigenie"
        },
        "content": "version \u00270.1.0\u0027"
      }
    ],
    "authorContributionMap": {
      "weigenie": 23,
      "-": 12
    }
  },
  {
    "path": "src/main/java/data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "T|0|eat lunch "
      }
    ],
    "authorContributionMap": {
      "weigenie": 1
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 56
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.commands.Command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": " * Main class to handle other classes."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    static final String TEXT_DOCUMENT \u003d \"./src/main/java/data/data.txt\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /** Storage to read and write files. */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /** Collections of the tasks. */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /** Handles input and output. */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /** Action taken depending on input. */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Command command;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Constructor for JavaFX implementation"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        storage \u003d new Storage(TEXT_DOCUMENT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Initialising of programme."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param filePath Filepath of data stored."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void start(Stage primaryStage) throws Exception {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        primaryStage.setScene(scene);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        primaryStage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        primaryStage.setResizable(false);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        primaryStage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        primaryStage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        });"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        });"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        });"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        });"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                DialogBox.getUserDialog(userInput.getText(), user),"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                DialogBox.getDukeDialog(getResponse(userInput.getText()), duke)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return ui.getResponse();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return ui.getResponse();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 181,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Main method."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param args Default input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 17
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /** Controller for FXMLLoader */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            assert duke !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 34
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public MainWindow() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /** Set Controller for MainWindow */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 55
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Exception specified for Duke programme."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param msg Message describing the exception."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 12
    }
  },
  {
    "path": "src/main/java/duke/execution/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.commands.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private static final SimpleDateFormat DATE_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Parses a line to return a Command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param line Line to be parsed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Command after parsing."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public static Command parse(String line) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert line !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        String[] split \u003d line.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        String rest \u003d getRestOfInput(split);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return parseForCommand(split[0], rest);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Checks whether a string can be formatted to be a Date."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param txt String to be checked."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Boolean whether the string can be formatted to be a Date."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public static boolean isDate(String txt) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert txt !\u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            DATE_FORMAT.parse(txt);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Get Date in desired format."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param txt String of date to be formatted."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Formatted Date."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public static String getFormattedDate(String txt) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            Date date \u003d DATE_FORMAT.parse(txt);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            assert date !\u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            String day \u003d new SimpleDateFormat(\"dd\").format(date);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            String month \u003d new SimpleDateFormat(\"MMMMMMMMMMMMMMM\").format(date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            String year \u003d new SimpleDateFormat(\"yy\").format(date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            String time \u003d new SimpleDateFormat(\"h:mm a\").format(date).toLowerCase();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            String ordinalIndicator;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            int intDay \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            if (intDay \u003e\u003d 11 \u0026\u0026 intDay \u003c\u003d 13) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                ordinalIndicator \u003d \"th\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            } else if (intDay % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                ordinalIndicator \u003d \"st\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            } else if (intDay % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                ordinalIndicator \u003d \"nd\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            } else if (intDay % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                ordinalIndicator \u003d \"rd\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                ordinalIndicator \u003d \"th\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            String outputDate \u003d intDay + ordinalIndicator + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return outputDate;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            System.out.println(\"isDate has bugs\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Parse String for a Command to be returned."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param action String specifying the Command type."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param txt String containing the description for the Command to be executed."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Command after parsing."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @throws DukeException If action String not identifiable."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private static Command parseForCommand(String action, String txt) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return new ByeCommand(txt);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return new ListCommand(txt);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return new DoneCommand(txt);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return new TodoCommand(txt);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return new DeadlineCommand(txt);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return new EventCommand(txt);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return new DeleteCommand(txt);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return new FindCommand(txt);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            return new HelpCommand(txt);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            System.out.println(\"ERROR_LOG: txt: \" + txt);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Seperates the rest of the line from the first word in a splited input string."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param split Splited input string."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Concatenated String without the first word."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private static String getRestOfInput(String[] split) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        String rest \u003d \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        for (int i \u003d 1; i \u003c split.length; i++) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            rest +\u003d split[i];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            rest +\u003d \" \";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return rest;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 135
    }
  },
  {
    "path": "src/main/java/duke/execution/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    String filepath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Storage to access data file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param filepath File path to data file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Loads tasks from file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Loaded list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @throws DukeException If file cannot be found."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException, IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        FileReader fileReader;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            fileReader \u003d new FileReader(filepath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            System.out.println(\"ERROR_LOG: file not found: \" + filepath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            createNewFile(file);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        readFromData(new BufferedReader(fileReader), tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Saves tasks into specified file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param taskList Tasks to be saved."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void saveToDataFile(TaskList taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            assert fileWriter !\u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            for (Task task: tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                String taskData \u003d task.getData();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                bufferedWriter.write(taskData);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private ArrayList\u003cTask\u003e createNewFile(File file) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (file.createNewFile()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            System.out.println(\"data file is created\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            System.out.println(\"data file is not created\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void readFromData(BufferedReader bufferedReader, ArrayList\u003cTask\u003e tasks) throws IOException, DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert  bufferedReader !\u003d null;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        String line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            String[] split \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            addToTaskList(tasks, split);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        bufferedReader.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void addToTaskList(ArrayList\u003cTask\u003e tasks, String[] split) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        switch (split[0]) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            Todo newTodo \u003d new Todo(split[2]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            if (Boolean.parseBoolean(split[1])) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                newTodo.markAsDone();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            tasks.add(newTodo);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(split[2], split[3]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            if (Boolean.parseBoolean(split[1])) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                newDeadline.markAsDone();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            tasks.add(newDeadline);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            Event newEvent \u003d new Event(split[2], split[3]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            if (Boolean.parseBoolean(split[1])) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                newEvent.markAsDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            tasks.add(newEvent);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\"error data formatting in data.txt\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 115
    }
  },
  {
    "path": "src/main/java/duke/execution/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Initialises a new colelctions of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        System.out.println(\"initiating new tasklist\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Initialises a collections of tasks from an ArrayList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param tasks Arraylist of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Adds a task into the collections."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Deletes a task from the collections."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param no Position of task to be deleted."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void delete(int no) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        tasks.remove(no - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Gets collections of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Collections of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Gets number of tasks in collections."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Number of tasks in collections."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Gets a task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param num Position of task to be retrieved."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Task associated with num."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Task get(int num) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return this.tasks.get(num);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param n Position of task to be marked as done."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Task that has been marked as done."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Task markDone(int n) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        tasks.get(n - 1).markAsDone();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return tasks.get(n - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Adds a Todo Task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param title Title of Todo."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Todo that has been added."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Task addTodo(String title) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.tasks.add(new Todo(title));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Adds a Deadline Task."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param title Input for creation of Deadline."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Deadline that has been added."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @throws DukeException If met with error with the input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Task addDeadline(String title) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        String[] split \u003d title.split(\"/by \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Input should include \u0027by\u0027!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (!Parser.isDate(split[1])) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The date format inputted is in the wrong format!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        Deadline deadlineAdded \u003d new Deadline(split[0], Parser.getFormattedDate(split[1]));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        tasks.add(deadlineAdded);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return deadlineAdded;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Adds an Event Task."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param title Input for creation of Event."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Event that has been added."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @throws DukeException If met with error with the input."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Task addEvent(String title) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        String[] split \u003d title.split(\"/at \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Input should include \u0027at\u0027!\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (!Parser.isDate(split[1])) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The date format inputted is in the wrong format!\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        Event eventAdded \u003d new Event(split[0], Parser.getFormattedDate(split[1]));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        tasks.add(eventAdded);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return eventAdded;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Deletes a task in the collections."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param txt Text containing position of task to be deleted."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Deleted task."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Task deleteTask(String txt) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        int deleteNum \u003d Integer.parseInt(txt.trim()) - 1;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return tasks.remove(deleteNum);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Finds all the tasks containing the text."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param txt Specified text to be found in the tasks."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return TaskList containing the found tasks."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public TaskList find(String txt) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            if (tasks.get(i).contains(txt)) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                list.add(tasks.get(i));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return new TaskList(list);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Checks whether the collections is empty."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Boolean value whether the collections is empty."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 175
    }
  },
  {
    "path": "src/main/java/duke/execution/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": " * User interface to handle printing of messages."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private String response \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Shows loading error."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param e Exception."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void showLoadingError(Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        System.out.println(\"Data file cannot be loaded\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Shows welcome message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\"Hello! I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Shows error."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param e Exception."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void showError(Exception e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Shows a done task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param task Task that has been marked as done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\" Nice! I\u0027ve marked this task as done:\\n\" + task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Shows a task that has been added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param task Task that bas been added."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param size Number of tasks in the collections."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void showAddTask(Task task, int size) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\" Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Shows a task that has been deleted."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param task Task has been deleted."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param size Number of tasks left in the collections."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void showDeleted(Task task, int size) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\" Noted. I\u0027ve removed this task:\\n\" + task + \"\\nNow you have \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Shows exit message."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Lists down the tasks in the collections."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param taskList Collections of tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void listTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            setResponse(\" No tasks to be found.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            response \u003d \"Here are the tasks in your list\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                response +\u003d (i + 1) + \". \" + taskList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void showHelp() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\"Commands available:\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                \"\u0027list\u0027, \u0027todo\u0027, \u0027event\u0027, \u0027deadline\u0027, \u0027done\u0027, \u0027delete\u0027, \u0027find\u0027\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                \"\","
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                \"Type \u0027help \u003ccommand\u003e\u0027 to find out more about the command (eg. \u0027help list\u0027)\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void showHelp(String command) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        switch(command.trim()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            showListHelp();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            showTodoHelp();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            showEventHelp();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            showDeadlineHelp();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            showDoneHelp();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            showDeleteHelp();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            showFindHelp();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            showHelpError(command);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void showListHelp() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\"Type \u0027list\u0027 to retrieve the list of tasks on hand currently.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void showTodoHelp() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\"Type \u0027todo \u003ctodo name\u003e\u0027 to add a new Todo.\","
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                \"eg. \u0027todo Buy Groceries for my Mother\u0027\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void showEventHelp() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\"Type \u0027event \u003cevent name\u003e /at \u003cdate (DD/MM/YYYY HHmm)\u003e\u0027 to add a new Event.\","
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                \"eg. \u0027event Facebook Hackathon /at 10/10/2019 0900\u0027\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void showDeadlineHelp() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\"Type \u0027deadline \u003cevent name\u003e /by \u003cdate (DD/MM/YYYY HHmm)\u003e\u0027 to add a new Deadline.\","
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                \"eg. \u0027deadline Assignment /by 21/09/2019 2359\u0027\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void showDoneHelp() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\"Type \u0027done \u003ctask S/N\u003e\u0027 to mark a task as done, as shown in list.\","
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                \"eg. \u0027done 2\u0027\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void showDeleteHelp() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\"Type \u0027delete \u003ctask S/N\u003e\u0027 to delete a task, as shown in list.\","
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                \"eg. \u0027delete 2\u0027\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void showFindHelp() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\"Type \u0027find \u003ctext\u003e\u0027 to find tasks containing the text.\","
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                \"eg. \u0027find buy\u0027\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void showHelpError(String command) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        setResponse(\"I am sorry, \u0027\" + command + \"\u0027 cannot be understood as a command\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Helper function to handle formatting of printing."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param txt Text to be printed within the formatted borders."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private void setResponse(String... txt) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.response \u003d \"\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        for (String s: txt) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            this.response +\u003d s;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            this.response +\u003d \"\\n\";"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return this.response;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 175
    }
  },
  {
    "path": "src/main/java/duke/execution/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class ByeCommand extends Command  {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public ByeCommand(String txt) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(txt);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        checkValidity();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected void checkValidity() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 26
    }
  },
  {
    "path": "src/main/java/duke/execution/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected String txt;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Command to be executed by programme."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param txt Description of command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Command(String txt) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.txt \u003d txt;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param tasks Associated TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param ui Associated Ui."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param storage Associated Storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Boolean whether the command has been ran."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @throws DukeException If error was met."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert tasks !\u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert ui !\u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assert storage !\u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        checkValidity();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected abstract void checkValidity() throws DukeException;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 41
    }
  },
  {
    "path": "src/main/java/duke/execution/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class DeadlineCommand extends Command  {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public DeadlineCommand(String txt) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(txt);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        Task deadlineAdded \u003d tasks.addDeadline(txt);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ui.showAddTask(deadlineAdded, tasks.getSize());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        storage.saveToDataFile(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected void checkValidity() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (txt.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } else if (!txt.contains(\"/by\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Deadline input should include \u0027/by\u0027.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 32
    }
  },
  {
    "path": "src/main/java/duke/execution/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public DeleteCommand(String txt) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(txt);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        Task deletedTask \u003d tasks.deleteTask(txt);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ui.showDeleted(deletedTask, tasks.getSize());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        storage.saveToDataFile(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected void checkValidity() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (txt.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of an delete cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 30
    }
  },
  {
    "path": "src/main/java/duke/execution/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class DoneCommand extends Command  {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public DoneCommand(String txt) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(txt);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        checkValidity();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        Task taskDone \u003d tasks.markDone(Integer.parseInt(txt));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ui.showDone(taskDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        storage.saveToDataFile(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected void checkValidity() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (txt.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 33
    }
  },
  {
    "path": "src/main/java/duke/execution/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class EventCommand extends Command  {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public EventCommand(String txt) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(txt);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        Task eventAdded \u003d tasks.addEvent(txt);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ui.showAddTask(eventAdded, tasks.getSize());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        storage.saveToDataFile(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected void checkValidity() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (txt.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } else if (!txt.contains(\"/at\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Event input should include \u0027/at\u0027.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 32
    }
  },
  {
    "path": "src/main/java/duke/execution/commands/ExceptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class ExceptionCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public ExceptionCommand(String txt) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(txt);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected void checkValidity() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 22
    }
  },
  {
    "path": "src/main/java/duke/execution/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class FindCommand extends Command  {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public FindCommand(String txt) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(txt);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        checkValidity();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        TaskList foundTasks \u003d tasks.find(txt);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ui.listTasks(foundTasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected void checkValidity() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (txt.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of an delete cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 31
    }
  },
  {
    "path": "src/main/java/duke/execution/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public HelpCommand(String txt) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(txt);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (txt.isEmpty()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            ui.showHelp();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            ui.showHelp(txt);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected void checkValidity() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 30
    }
  },
  {
    "path": "src/main/java/duke/execution/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class ListCommand extends Command  {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public ListCommand(String txt) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(txt);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        checkValidity();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ui.listTasks(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected void checkValidity() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 26
    }
  },
  {
    "path": "src/main/java/duke/execution/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.execution.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.models.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class TodoCommand extends Command  {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public TodoCommand(String txt) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(txt);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        checkValidity();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        Task todoAdded \u003d tasks.addTodo(txt);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        ui.showAddTask(todoAdded, tasks.getSize());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        storage.saveToDataFile(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected void checkValidity() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        if (txt.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 31
    }
  },
  {
    "path": "src/main/java/duke/models/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": " * Task with a deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /** Deadline of task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Deadline Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param date Date of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + date + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        int isDone \u003d super.isDone"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                ? 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                : 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return \"D|\" + isDone + \"|\" + super.description + \"|\" + this.date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 33
    }
  },
  {
    "path": "src/main/java/duke/models/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": " * Event with a specified date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /** Specified date for the event. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Event Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param date Date of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + this.date + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        int isDone \u003d super.isDone"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                ? 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                : 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return \"E|\" + isDone + \"|\" + super.description + \"|\" + this.date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 33
    }
  },
  {
    "path": "src/main/java/duke/models/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": " * Task with a description and boolean of whether is has been done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /** Description of task. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /** Boolean of whether the task has been marked as done. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Gets a tick or cross depending whether the task has been done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Tick or cross."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Gets the data of the task to be saved."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Data of the task to be saved."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public abstract String getData();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Checks whether task title contains specified text."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param txt Specified text to look for."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @return Boolean of whether task title contains text."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public boolean contains(String txt) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return description.toLowerCase().contains(txt.toLowerCase());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 55
    }
  },
  {
    "path": "src/main/java/duke/models/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "package duke.models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": " * A simple Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * Todo Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        int isDone \u003d super.isDone"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                ? 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weigenie"
        },
        "content": "                : 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        return \"T|\" + isDone + \"|\" + super.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 28
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "weigenie": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "weigenie": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    void isDate() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assertEquals(true,  Parser.isDate(\"02/12/2019 1800\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        assertEquals(false, Parser.isDate(\"2 Jan 2019\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 14
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "import duke.execution.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    public void addDeadline_wrongDateFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            new TaskList().addDeadline(\"Submission /by 2 Jan 2019\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            assertEquals(\" ☹ OOPS!!! The date format inputted is in the wrong format!\", e.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            new TaskList().addDeadline(\"2 Jan 2019\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "            assertEquals(\" ☹ OOPS!!! Input should include \u0027by\u0027!\", e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weigenie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weigenie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weigenie": 24
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "weigenie": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weigenie"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weigenie"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weigenie"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weigenie"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weigenie"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weigenie"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weigenie"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weigenie"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weigenie"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weigenie"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weigenie"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weigenie"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weigenie"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weigenie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weigenie"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weigenie"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "weigenie": 21
    }
  }
]
