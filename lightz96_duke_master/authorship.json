[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "[![Build Status](https://travis-ci.org/lightz96/duke.svg?branch\u003dmaster)](https://travis-ci.org/lightz96/duke)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "lightz96": 2,
      "-": 39
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "//    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "test {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "//javafx {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "//    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": "//    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 51,
      "-": 13
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "D | 0 | submit | 25 August 2019, 03:02 AM"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": "D | 1 | submit another | 25 August 2019, 03:02 AM"
      }
    ],
    "authorContributionMap": {
      "lightz96": 2
    }
  },
  {
    "path": "data/dukeTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "D | 0 | submit | 20 September 2019, 12:21 AM"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": "D | 0 | submit another | 20 September 2019, 12:21 AM"
      }
    ],
    "authorContributionMap": {
      "lightz96": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# Table of contents"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": "1. [Duke](#Duke)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "2. [Features](#Features)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\t2.1. [Adds todo tasks: `todo`](#Todo)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\t"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\t2.2. [Adds deadline tasks: `deadline`](#Deadline)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "\t"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\t2.3. [Adds event tasks: `event`](#Event)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "\t"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\t2.4. [Mark task as complete: `done`](#Done)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "\t"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\t2.5. [Finds task: `find`](#Find)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\t"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\t2.6. [Delete task: `delete`](#Delete)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\t"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\t2.7. [Undo your previous command: `undo`](#Undo)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\t2.8. [List all task items: `list`](#List)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\t2.9. [Exit the program: `bye`](#Bye)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "3. [Command summary](#summary)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\t"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\t"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# 1. Duke \u003ca name\u003d\"Duke\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Duke is a task tracker desktop application which allows user to manage their own tasks. It uses Command-Line Interface (CLI), so user can perform operations by typing the commands into the textfield. "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "![Duke](Ui.png)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# 2. Features \u003ca name\u003d\"Features\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Command Format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "* Words within \u003c\u003e are to be supplied by the user. For example, `todo \u003ctask\u003e`, `\u003ctask\u003e` requires user to filled in their own task. "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "## 2.1. Adds todo task: `todo` \u003ca name\u003d\"Todo\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Format: `todo \u003ctask\u003e`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Example of usage: \u003cbr /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "`todo create user stories`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Expected outcome: \u003cbr /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "![Todo command](todo.PNG)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "## 2.2. Adds deadline task: `deadline` \u003ca name\u003d\"Deadline\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Format: `deadline \u003ctask\u003e /by \u003cdate\u003e`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "NOTE: `\u003cdate\u003e` must be in the format of dd/MM/yyyy HHmm. Example: 02/12/2019 1800"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Example of usage: \u003cbr /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "`deadline create user stories /by 12/09/2019 2359`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Expected outcome: \u003cbr /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "![Deadline command](deadline.PNG)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "## 2.3. Adds event task: `event` \u003ca name\u003d\"Event\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Format: `event \u003ctask\u003e /at \u003clocation\u003e`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Example of usage: \u003cbr /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "`event hackathon /at COM1`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Expected outcome: \u003cbr /\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": "![Event command](event.PNG)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lightz96"
        },
        "content": "## 2.4. Mark task as complete: `done` \u003ca name\u003d\"Done\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Format: `done \u003cindex\u003e`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lightz96"
        },
        "content": "NOTE: `\u003cindex\u003e` must be a valid task list item."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Example of usage: \u003cbr /\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lightz96"
        },
        "content": "`done 5`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Expected outcome: \u003cbr /\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lightz96"
        },
        "content": "![Done command](done.PNG)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lightz96"
        },
        "content": "## 2.5. Finds task: `find` \u003ca name\u003d\"Find\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Show task that contains at least one of the user specified words. \u003cbr /\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Format: `find \u003cwords to search\u003e`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Example of usage: \u003cbr /\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lightz96"
        },
        "content": "`find stories hackathon`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Expected outcome: \u003cbr /\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lightz96"
        },
        "content": "![Find command](find.PNG)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lightz96"
        },
        "content": "## 2.6. Delete task: `delete` \u003ca name\u003d\"Delete\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Format: `delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lightz96"
        },
        "content": "NOTE: `\u003cindex\u003e` must be a valid task list item."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Example of usage: \u003cbr /\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lightz96"
        },
        "content": "`delete 5`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Expected outcome: \u003cbr /\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lightz96"
        },
        "content": "![Delete command](delete.PNG)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lightz96"
        },
        "content": "## 2.7. Undo your previous command: `undo` \u003ca name\u003d\"Undo\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Format: `undo`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lightz96"
        },
        "content": "## 2.8. List all task items: `list` \u003ca name\u003d\"List\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lightz96"
        },
        "content": "## 2.9. Exit the program: `bye` \u003ca name\u003d\"Bye\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# 3. Command summary \u003ca name\u003d\"summary\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lightz96"
        },
        "content": "* **Todo**: `todo \u003ctask\u003e` \u003cbr /\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Example: `todo create user stories` "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lightz96"
        },
        "content": "* **Deadline**: `deadline \u003ctask\u003e /by \u003cdate\u003e` \u003cbr /\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Example: `deadline create user stories /by 12/09/2019 2359`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lightz96"
        },
        "content": "* **Event**: `event \u003ctask\u003e /at \u003clocation\u003e` \u003cbr /\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Example: `event hackathon /at COM1`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lightz96"
        },
        "content": "* **Done**: `done \u003cindex\u003e` \u003cbr /\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Example: `done 5`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lightz96"
        },
        "content": "* **Find**: `find \u003cwords to search\u003e` \u003cbr /\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Example: `find stories hackathon`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lightz96"
        },
        "content": "* **Delete**: `delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lightz96"
        },
        "content": "Example: `delete 5`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lightz96"
        },
        "content": "* **Undo**: `undo`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lightz96"
        },
        "content": "* **List**: `list`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lightz96"
        },
        "content": "* **Bye**: `bye`"
      }
    ],
    "authorContributionMap": {
      "lightz96": 106,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.DukeWindow;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Main Duke Program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private PastOperationList pastOperationList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private DukeWindow mainUi;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void init() throws Exception {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        pastOperationList \u003d new PastOperationList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void start(Stage primaryStage) throws Exception {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        mainUi \u003d new DukeWindow(primaryStage, storage, tasks, pastOperationList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        mainUi.show();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 41,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Starting point of the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 12
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 9
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Runs the specified command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskList TaskList object for the duke program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param storage storage object for the duke program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param pastOperationList PastOperationList object for the duke program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return String to be printed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public abstract String execute(TaskList taskList, Storage storage, PastOperationList pastOperationList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Notifies the program to exit."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true if it is exitCommand, else false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.GetArgumentsUtil;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.UndoInfo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private static final int DEADLINE_ARGUMENT_STARTING_INDEX \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private static final String DEADLINE_DELIMITER \u003d \"/by\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private static final String DATETIME_PATTERN \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private String[] commands;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public DeadlineCommand(String[] commands) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.commands \u003d commands;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, PastOperationList pastOperationList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert taskList !\u003d null : \"tasklist cannot be null\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert storage !\u003d null : \"storage cannot be null\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATETIME_PATTERN);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            String[] args \u003d GetArgumentsUtil.getTwoCommandArgs(DEADLINE_ARGUMENT_STARTING_INDEX,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    DEADLINE_DELIMITER, commands);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(args[1], formatter);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            Task deadlineTask \u003d new Deadline(args[0], dateTime);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            taskList.addToTaskList(deadlineTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            pastOperationList.keepTrackOfLastOperation(deadlineTask, new UndoInfo(\"delete\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            String message \u003d String.join(\"\\n\", Messages.ADDED_TASK_MESSAGE,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    Messages.COMMAND_INDENTATION + Messages.COMPLETION_INDENTATION + deadlineTask.toString(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    String.format(Messages.LIST_SIZE_FORMAT, taskList.getSize()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return Messages.DATETIME_PARSE_EXCEPTION;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (DukeException e1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return e1.getMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 58
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.UndoInfo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private int itemNum;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public DeleteCommand(int itemNum) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.itemNum \u003d itemNum;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, PastOperationList pastOperationList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert taskList !\u003d null : \"tasklist cannot be null\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert storage !\u003d null : \"storage cannot be null\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            Task removedTask \u003d taskList.deleteFromTaskListByIndex(itemNum - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            pastOperationList.keepTrackOfLastOperation(removedTask, new UndoInfo(\"add\", itemNum - 1));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return String.join(\"\\n\", Messages.DELETE_TASK_MESSAGE,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    Messages.COMMAND_INDENTATION + Messages.COMPLETION_INDENTATION + removedTask.toString(),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    String.format(Messages.LIST_SIZE_FORMAT, taskList.getSize()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return Messages.INVALID_SIZE_EXCEPTION;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 42
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.UndoInfo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private int itemNum;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public DoneCommand(int itemNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.itemNum \u003d itemNum;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, PastOperationList pastOperationList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert taskList !\u003d null : \"tasklist cannot be null\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert storage !\u003d null : \"storage cannot be null\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            Task completedTask \u003d taskList.getTask(itemNum - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (completedTask.getStatus()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                return Messages.DONE__ALREADY_COMPLETED_MESSAGE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            completedTask.completeTask();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            pastOperationList.keepTrackOfLastOperation(completedTask, new UndoInfo(\"undone\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return String.join(\"\\n\", Messages.DONE_MESSAGE, Messages.COMMAND_INDENTATION"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    + Messages.COMPLETION_INDENTATION + taskList.getTask(itemNum - 1).toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return Messages.INVALID_SIZE_EXCEPTION;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 42
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.GetArgumentsUtil;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.UndoInfo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private String[] commands;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private static final int EVENT_ARGUMENTS_START_INDEX \u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private static final String EVENT_DELIMITER \u003d \"/at\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public EventCommand(String[] commands) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.commands \u003d commands;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, PastOperationList pastOperationList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert taskList !\u003d null : \"tasklist cannot be null\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert storage !\u003d null : \"storage cannot be null\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            String[] args \u003d GetArgumentsUtil.getTwoCommandArgs(EVENT_ARGUMENTS_START_INDEX, EVENT_DELIMITER, commands);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            Task eventTask \u003d new Event(args[0], args[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            taskList.addToTaskList(eventTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            pastOperationList.keepTrackOfLastOperation(eventTask, new UndoInfo(\"delete\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return String.join(\"\\n\", Messages.ADDED_TASK_MESSAGE, Messages.COMMAND_INDENTATION"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    + Messages.COMPLETION_INDENTATION + eventTask.toString(),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    String.format(Messages.LIST_SIZE_FORMAT, taskList.getSize()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 45
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, PastOperationList pastOperationList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert taskList !\u003d null : \"tasklist cannot be null\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert storage !\u003d null : \"storage cannot be null\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            storage.saveData(taskList.getTaskList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return Messages.BYE_MESSAGE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 30
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private String[] itemsToFind;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public FindCommand(String[] itemToFind) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.itemsToFind \u003d itemToFind;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, PastOperationList pastOperationList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert taskList !\u003d null : \"tasklist cannot be null\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert storage !\u003d null : \"storage cannot be null\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskMatchedList \u003d taskList.findTasks(itemsToFind);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String formattedTasks \u003d taskList.getTasksInString(taskMatchedList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return String.join(\"\\n\", Messages.FIND_TASK_MESSAGE, Messages.COMMAND_INDENTATION"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                + formattedTasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, PastOperationList pastOperationList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert taskList !\u003d null : \"tasklist cannot be null\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert storage !\u003d null : \"storage cannot be null\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String formattedString \u003d taskList.getTasksInString(taskList.getTaskList());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String message \u003d String.join(\"\\n\", Messages.LIST_MESSAGE,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Messages.COMMAND_INDENTATION + formattedString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 25
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.GetArgumentsUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.UndoInfo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class ToDoCommand extends AddCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private String[] commands;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private static final int TODO_ARGUMENT_START_INDEX \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public ToDoCommand(String[] commands) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.commands \u003d commands;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, PastOperationList pastOperationList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert taskList !\u003d null : \"tasklist cannot be null\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert storage !\u003d null : \"storage cannot be null\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String arg \u003d GetArgumentsUtil.concatStrings(Arrays.copyOfRange(commands, TODO_ARGUMENT_START_INDEX,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                commands.length));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task toDoTask \u003d new Todo(arg);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.addToTaskList(toDoTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        pastOperationList.keepTrackOfLastOperation(toDoTask, new UndoInfo(\"delete\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return String.join(\"\\n\", Messages.ADDED_TASK_MESSAGE,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Messages.COMMAND_INDENTATION + Messages.COMPLETION_INDENTATION + toDoTask.toString(),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                String.format(Messages.LIST_SIZE_FORMAT, taskList.getSize()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 36
    }
  },
  {
    "path": "src/main/java/duke/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.UndoInfo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, PastOperationList pastOperationList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (pastOperationList.noPastOperation()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return Messages.NO_COMMAND_TO_UNDO;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            Task task \u003d pastOperationList.getLastOperation();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            UndoInfo commandsToPerform \u003d pastOperationList.getUndoCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            boolean isSuccessful \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            switch (commandsToPerform.getUndoCommand()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                isSuccessful \u003d undoDelete(taskList, task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            case \"add\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                isSuccessful \u003d undoAdd(taskList, task, commandsToPerform.getIndexToAdd());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            case \"undone\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                isSuccessful \u003d undoDone(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                isSuccessful \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (isSuccessful) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                return Messages.UNDO_MESSAGE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                return Messages.UNDO_FAILED_MESSAGE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return Messages.INVALID_SIZE_EXCEPTION;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Removes the most recently added task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskList is the task list for duke."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskToDelete is the recently added task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true if duke successfully undo the command, else false."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean undoDelete(TaskList taskList, Task taskToDelete) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList.deleteFromTaskListByTask(taskToDelete);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Adds back the deleted task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskList tasklist of the duke program."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskToUndo is the deleted task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param index is the position where the task was initially at."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean undoAdd(TaskList taskList, Task taskToUndo, int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.addToTaskList(taskToUndo, index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Un-complete the task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param task is the task to un-complete."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean undoDone(Task task) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        task.setDone(false);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 86
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.UndoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Parses command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Converts the command into command object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param command command inputted by the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return converted command object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException throws by {@link #findCommand(String[])}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws NumberFormatException throws by {@link #findCommand(String[])}."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command parse(String command) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] commandArr \u003d command.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return findCommand(commandArr);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Returns the correct command object based on user inputted command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the last command entered by the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user inputted an invalid command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws NumberFormatException if user inputted an invalid description for done and delete command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command findCommand(String[] commands) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        switch (commands[0]) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            command \u003d verifyByeCommand(commands);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            command \u003d verifyListCommand(commands);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            command \u003d verifyDoneCommand(commands);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            command \u003d verifyTodoCommand(commands);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            command \u003d verifyDeadlineCommand(commands);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            command \u003d verifyEventCommand(commands);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            command \u003d verifyDeleteCommand(commands);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            command \u003d verifyFindCommand(commands);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        case \"undo\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            command \u003d verifyUndoCommand(commands);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Verifies bye command."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the command enter by the user."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return ExitCommand if the command matches the syntax."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user inputted an invalid command."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command verifyByeCommand(String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Verifies list command."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the command enter by the user."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return ListCommand if the command matches the syntax."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user inputted an invalid command."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command verifyListCommand(String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Verifies done command."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the command enter by the user."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return DoneCommand if the command matches the syntax."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user inputted an invalid command."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command verifyDoneCommand(String[] commands) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (commands.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                return new DoneCommand(Integer.parseInt(commands[1]));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new DukeException(String.format(Messages.DESCRIPTION_MISSING_EXCEPTION, \"done\"));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new NumberFormatException(String.format(Messages.DESCRIPTION_FORMAT_EXCEPTION, \"done\","
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    \"number\"));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Verifies todo command."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the command enter by the user."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return TodoCommand if the command matches the syntax."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user inputted an invalid command."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command verifyTodoCommand(String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (commands.length \u003e 1) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return new ToDoCommand(commands);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(String.format(Messages.DESCRIPTION_MISSING_EXCEPTION, \"todo\"));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Verifies deadline command."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the command enter by the user."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return DeadlineCommand if the command matches the syntax."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user inputted an invalid command."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command verifyDeadlineCommand(String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (commands.length \u003e 1) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return new DeadlineCommand(commands);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(String.format(Messages.DESCRIPTION_MISSING_EXCEPTION, \"deadline\"));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Verifies event command."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the command enter by the user."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return EventCommand if the command matches the syntax."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user inputted an invalid command."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command verifyEventCommand(String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (commands.length \u003e 1) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return new EventCommand(commands);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(String.format(Messages.DESCRIPTION_MISSING_EXCEPTION, \"event\"));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Verifies delete command."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the command enter by the user."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return DeleteCommand if the command matches the syntax."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user inputted an invalid command."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command verifyDeleteCommand(String[] commands) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (commands.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(commands[1]));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new DukeException(String.format(Messages.DESCRIPTION_MISSING_EXCEPTION, \"delete\"));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new NumberFormatException(String.format(Messages.DESCRIPTION_FORMAT_EXCEPTION, \"delete\","
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    \"number\"));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Verifies find command."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the command enter by the user."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return FindCommand if the command matches the syntax."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user inputted an invalid command."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command verifyFindCommand(String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (commands.length \u003e 1) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return new FindCommand(Arrays.copyOfRange(commands, 1, commands.length));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(String.format(Messages.DESCRIPTION_FORMAT_EXCEPTION, \"find\"));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Verifies undo command."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the command enter by the user."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return UndoCommand if the command matches the syntax."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user inputted an invalid command."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command verifyUndoCommand(String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 234
    }
  },
  {
    "path": "src/main/java/duke/shared/GetArgumentsUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.shared;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Retrieves command arguments utility."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class GetArgumentsUtil {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Retrieves two args from an arrays."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param start is the start index where the method will sublist from."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param delimiter is the string that determine the 2 arguments."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the latest command inputted by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return an array of 2 items, command description and sub-command(e.g. /at) description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user does not provide the sub-command / the sub-command does not have any description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static String[] getTwoCommandArgs(int start, String delimiter, String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert commands !\u003d null : \"commands should not be null\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert delimiter !\u003d \"\" : \"delimiter should not be empty\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert start \u003e\u003d 0 : \"start should be positive\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] args \u003d new String[2];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cString\u003e commandList \u003d Arrays.asList(commands);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        int indexOfSeparator \u003d commandList.indexOf(delimiter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (indexOfSeparator \u003d\u003d commandList.size() - 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(String.format(Messages.SUBDESCRIPTION_MISSING_EXCEPTION, delimiter));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (indexOfSeparator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(String.format(Messages.NO_SUBDESCRIPTION_EXCEPTION, delimiter));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            args[0] \u003d concatStrings(commandList.subList(start, indexOfSeparator)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    .toArray(new String[indexOfSeparator - 1]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            args[1] \u003d concatStrings(commandList.subList(indexOfSeparator + 1, commandList.size())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    .toArray(new String[commandList.size() - (indexOfSeparator + 1)]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert args.length \u003d\u003d 2 : \"args should have 2 items\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Concatenates the arguments (in array)."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param command is last command inputted by the user (in array)."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return argument of the command in String."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static String concatStrings(String[] command) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert command !\u003d null : \"command cannot be null\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        StringBuilder myStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        for (int i \u003d 0; i \u003c command.length; i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            myStringBuilder.append(command[i]).append(\" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        myStringBuilder.deleteCharAt(myStringBuilder.length() - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return myStringBuilder.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 61
    }
  },
  {
    "path": "src/main/java/duke/shared/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.shared;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Hardcoded messages to be display in the Duke GUI."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String COMMAND_INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String COMPLETION_INDENTATION \u003d \"  \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String BYE_MESSAGE \u003d COMMAND_INDENTATION + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String GREETING_MESSAGE \u003d COMMAND_INDENTATION + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + COMMAND_INDENTATION + \"What can I do for you?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String ADDED_MESSAGE \u003d COMMAND_INDENTATION + \"added: \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String LIST_MESSAGE \u003d COMMAND_INDENTATION + \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DONE_MESSAGE \u003d COMMAND_INDENTATION + \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String ADDED_TASK_MESSAGE \u003d COMMAND_INDENTATION + \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DELETE_TASK_MESSAGE \u003d COMMAND_INDENTATION + \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String FIND_TASK_MESSAGE \u003d COMMAND_INDENTATION + \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String UNDO_MESSAGE \u003d COMMAND_INDENTATION + \"Undo command executed successfully\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String LIST_SIZE_FORMAT \u003d COMMAND_INDENTATION + \"Now you have %d tasks in the list.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DESCRIPTION_MISSING_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"OOPS!!! The description of a %s cannot be empty.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String UNKNOWN_COMMAND_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DESCRIPTION_FORMAT_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"OOPS!!! The description need to be %s.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String SUBDESCRIPTION_MISSING_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"OOPS!!! The description of a %s cannot be empty.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String NO_SUBDESCRIPTION_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"OOPS!!! \\\"%s\\\" cannot be found in the command\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String INVALID_SIZE_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"OOPS!!! Invalid task number\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DATETIME_PARSE_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"The description of /by must be in the correct format (dd/MM/yyyy HHmm). E.g. 02/12/2019 1800\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String NO_COMMAND_TO_UNDO \u003d COMMAND_INDENTATION + \"No more commands to undo\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String UNDO_FAILED_MESSAGE \u003d COMMAND_INDENTATION + \"Undo fails to run\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DONE__ALREADY_COMPLETED_MESSAGE \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"Task is already marked as complete\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 41
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.GetArgumentsUtil;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Loads and save data from text file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DATETIME_PATTERN \u003d \"dd MMMM yyyy, hh:mm a\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final int DONE_INDEX \u003d 2;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final int TASK_INDEX \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final int START_ARGUMENTS_INDEX \u003d 4;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Provides constructor for storage."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param filePath file path to load our data from."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Reads and load data from file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return list of past tasks saved in the text file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IOException throws by {@link #readFile()}."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException throws by {@link GetArgumentsUtil#getTwoCommandArgs(int, String, String[])}."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException, DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        readFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Reads and decode the text in the text file line-by-line."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IOException if file cannot be found / file cannot be opened."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException throws by {@link GetArgumentsUtil#getTwoCommandArgs(int, String, String[])}."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void readFile() throws IOException, DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                decodeLine(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Decodes the line and adds to the tasklist."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param line line read from the text file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException throws by {@link GetArgumentsUtil#getTwoCommandArgs(int, String, String[])}."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void decodeLine(String line) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] inputLines \u003d line.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (inputLines[TASK_INDEX].equals(\"T\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            task \u003d toDoParser(inputLines);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (inputLines[TASK_INDEX].equals(\"E\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            task \u003d eventParser(inputLines);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (inputLines[TASK_INDEX].equals(\"D\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            task \u003d deadlineParser(inputLines);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Converts the decoded line to ToDo object."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param inputLines line from the text file."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return converted todo object."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task toDoParser(String[] inputLines) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert inputLines.length \u003e 4 : \"inputLines should contain more than 4 items\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task toDoTask \u003d null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String taskName \u003d String.join(\" \", Arrays.copyOfRange(inputLines, START_ARGUMENTS_INDEX,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                inputLines.length));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (inputLines[DONE_INDEX].equals(\"1\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            toDoTask \u003d new Todo(taskName, true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (inputLines[DONE_INDEX].equals(\"0\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            toDoTask \u003d new Todo(taskName, false);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert toDoTask !\u003d null;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return toDoTask;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Converts the decoded line to Event object."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param inputLines line from the text file."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return converted event object."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException throws by {@link GetArgumentsUtil#getTwoCommandArgs(int, String, String[])}."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task eventParser(String[] inputLines) throws DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert inputLines.length \u003e 4 : \"inputLines should contain more than 4 items\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task eventTask \u003d null;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] args \u003d GetArgumentsUtil.getTwoCommandArgs(0,\"|\","
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Arrays.copyOfRange(inputLines, START_ARGUMENTS_INDEX, inputLines.length));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (inputLines[DONE_INDEX].equals(\"1\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            eventTask \u003d new Event(args[0], args[1], true);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (inputLines[DONE_INDEX].equals(\"0\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            eventTask \u003d new Event(args[0], args[1], false);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert eventTask !\u003d null;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return eventTask;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Converts the decoded line to Deadline Object."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param inputLines line from the text file."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return converted deadline object."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException throws by {@link GetArgumentsUtil#getTwoCommandArgs(int, String, String[])}."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task deadlineParser(String[] inputLines) throws DukeException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert inputLines.length \u003e 4 : \"inputLines should contain more than 4 items\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task deadlineTask \u003d null;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATETIME_PATTERN);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] args \u003d GetArgumentsUtil.getTwoCommandArgs(0, \"|\","
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Arrays.copyOfRange(inputLines, START_ARGUMENTS_INDEX, inputLines.length));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(args[1], formatter);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (inputLines[DONE_INDEX].equals(\"1\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            deadlineTask \u003d new Deadline(args[0], dateTime, true);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (inputLines[DONE_INDEX].equals(\"0\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            deadlineTask \u003d new Deadline(args[0], dateTime, false);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert deadlineTask !\u003d null;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return deadlineTask;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Encodes the task and save it to the text file."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskList latest list of tasks."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IOException throws by {@link #writeToFile(String)}."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void saveData(List\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert taskList !\u003d null;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        StringBuilder myStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (!taskList.isEmpty()) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    myStringBuilder.append(task.getShortForm()).append(\" | \").append(task.getStatus() ? 1 : 0)"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                            .append(\" | \").append(task.getName()).append(\"\\n\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    myStringBuilder.append(task.getShortForm()).append(\" | \").append(task.getStatus() ? 1 : 0)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                            .append(\" | \").append(task.getName()).append(\" | \").append(((Event) task).getTiming())"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                            .append(\"\\n\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    myStringBuilder.append(task.getShortForm()).append(\" | \").append(task.getStatus() ? 1 : 0)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                            .append(\" | \").append(task.getName()).append(\" | \")"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                            .append(((Deadline) task).getFormattedDateTime())"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                            .append(\"\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            myStringBuilder.deleteCharAt(myStringBuilder.length() - 1);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            writeToFile(myStringBuilder.toString());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            writeToFile(myStringBuilder.toString());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Writes text to file."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param linesToWrite string to be written to the file."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IOException if file cannot be opened."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void writeToFile(String linesToWrite) throws IOException {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filePath));"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        bufferedWriter.append(linesToWrite);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        bufferedWriter.close();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 214
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private char shortForm \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    protected LocalDateTime submissionTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Provides constructor that will be used for entered command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param name name of the deadline task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param submissionTime datetime of the deadline task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Deadline(String name, LocalDateTime submissionTime) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.submissionTime \u003d submissionTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Provides constructor that will be used for loading data from text."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param name name of the deadline task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param submissionTime datetime of the deadline task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param isDone is the status of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Deadline(String name, LocalDateTime submissionTime, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.submissionTime \u003d submissionTime;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public LocalDateTime getSubmissionTime() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return submissionTime;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void setSubmissionTime(LocalDateTime submissionTime) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.submissionTime \u003d submissionTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Formats the datetime."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return formatted datetime."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String getFormattedDateTime() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return submissionTime.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy, hh:mm a\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public char getShortForm() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return shortForm;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return \"[\" + getShortForm() + \"]\" + super.toString() + \" (by: \" + getFormattedDateTime() + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private char shortForm \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    protected String timing;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Provides constructor that will be used for entered command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param name name of the event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param timing datetime/location of the event task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Event(String name, String timing) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        //Used when user entered command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Provides constructor that will be used for loading data from text."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param name name of the event task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param timing datetime/location of the event task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param isDone is the status of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Event(String name, String timing, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        //Used when program loads data from text"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void setTiming(String timing) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public char getShortForm() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return shortForm;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return \"[\" + getShortForm() + \"]\" + super.toString() + \" (at: \" + timing + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 49
    }
  },
  {
    "path": "src/main/java/duke/task/PastOperationList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Keeps track of past modification operations. It will be clear when user closed the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class PastOperationList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Stack\u003cTask\u003e taskPastStack;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Stack\u003cUndoInfo\u003e operationToUndo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public PastOperationList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskPastStack \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        operationToUndo \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Keeps track of the performed task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param task is the task that was last executed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void keepTrackOfLastOperation(Task task, UndoInfo undoInfo) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (task !\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            taskPastStack.push(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            operationToUndo.push(undoInfo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Retrieves the last performed modification operation executed by the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return the last performed modification task runs by the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task getLastOperation() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskPastStack.pop();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Retrieves the command to undo."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return UndoInfo object which consists the command to undo."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public UndoInfo getUndoCommand() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return operationToUndo.pop();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Returns true if there is no operation to undo, else false."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true if there is no operation to undo, else false."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean noPastOperation() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskPastStack.empty();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Provides constructor that will be used for entered command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param name name of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        //Used when user entered command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Provides constructor that will be used for loading data from text."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param name name of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param isDone is the status of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        //Used when program loads data from text"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Change status icon to tick."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return isDone ? \"O\" : \"X\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public abstract char getShortForm();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getName();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 64
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Contains a list of Tasks object. Performs operation like adds, deletes to taskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Formats the list of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param listToDisplay list of tasks to be formatted."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return formatted list of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String getTasksInString(List\u003cTask\u003e listToDisplay) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert listToDisplay !\u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        StringBuilder myStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        for (int i \u003d 0; i \u003c listToDisplay.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (i \u003c listToDisplay.size() - 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                myStringBuilder.append(i + 1).append(\".\").append(listToDisplay.get(i)).append(\"\\n\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                        .append(Messages.COMMAND_INDENTATION);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else if (i \u003d\u003d listToDisplay.size() - 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                myStringBuilder.append(i + 1).append(\".\").append(listToDisplay.get(i));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return myStringBuilder.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Adds task to tasklist."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param task task to be added to tasklist."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true if task has been added successfully, else false."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean addToTaskList(Task task) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert task !\u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList.add(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Adds task to tasklist based on index."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param task task to be added to tasklist."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param index position to place the task into."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IndexOutOfBoundsException when it is trying to add to an invalid index."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void addToTaskList(Task task, int index)  throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert task !\u003d null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(index, task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Provides the number of items in taskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return number of items inside taskList."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Removes task from taskList."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param index index of the taskList."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return removed task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IndexOutOfBoundsException index less than 0 or bigger than the size of taskList."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task deleteFromTaskListByIndex(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert index \u003e 0;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList.remove(index);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Retrieves task from tasklist."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param index index of the taskList."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return requested task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IndexOutOfBoundsException index less than 0 or bigger than the size of the tasklist."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task getTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert index \u003e\u003d 0;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Provides all tasks within the tasklist."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return a list of tasks within the tasklist."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Finds tasks that contains the keywords stated in the itemToFind."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param itemToFind keywords provided by the user."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return list of tasks that matches the keywords."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public List\u003cTask\u003e findTasks(String[] itemToFind) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert itemToFind !\u003d null;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e matchedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cString\u003e itemListInString \u003d Arrays.asList(itemToFind);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            List\u003cString\u003e subNameList \u003d Arrays.asList(task.getName().split(\"\\\\s+\"));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (!Collections.disjoint(itemListInString, subNameList)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                matchedTaskList.add(task);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return matchedTaskList;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Deletes task using Task object."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param task is the task to be deleted from the taskList."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true if successfully deleted, else false."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean deleteFromTaskListByTask(Task task) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assert task !\u003d null;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList.remove(task);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 138
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private char shortForm \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        //Used when user entered command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Todo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        //Used when program loads data from text"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public char getShortForm() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return shortForm;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return \"[\" + getShortForm() + \"]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 24
    }
  },
  {
    "path": "src/main/java/duke/task/UndoInfo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class UndoInfo {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private String undoCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private int indexToAdd;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public UndoInfo(String undoCommand) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.indexToAdd \u003d -1;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.undoCommand \u003d undoCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public UndoInfo(String undoCommand, int indexToAdd) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.indexToAdd \u003d indexToAdd;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.undoCommand \u003d undoCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String getUndoCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return undoCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public int getIndexToAdd() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return indexToAdd;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 24
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.text.TextAlignment;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Displays the Dialog Box for the commands entered by user and duke replies."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public DialogBox() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Creates DialogBox."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param text text entered in the textfield."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param img image to be displayed in the dialogbox (either duke image or user image)."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Creates and formats HBox for user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param text text entered in the textfield."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param img user image."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return DialogBox that contains the text and img."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        db.dialog.setTextAlignment(TextAlignment.RIGHT);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Creates and formats HBox for duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param text text entered in the textfield."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param img duke image."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return DialogBox that contains the text and img."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        db.dialog.setTextAlignment(TextAlignment.LEFT);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 89
    }
  },
  {
    "path": "src/main/java/duke/ui/DukeWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Displays the Duke GUI. Executes the command when user enters it in the Duke GUI."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DukeWindow extends AnchorPane {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Stage stage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private PastOperationList pastOperationList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public DukeWindow() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Creates DukeWindow Ui constructor."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param stage primary stage."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param storage storage object for this Ui."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param tasks a list of tasks for this Ui."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param pastOperationList a list of past performed task for this Ui."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public DukeWindow(Stage stage, Storage storage, TaskList tasks, PastOperationList pastOperationList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.stage \u003d stage;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.pastOperationList \u003d pastOperationList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Loads the DukeWindows.fxml."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void show()  {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/DukeWindow.fxml\"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            fxmlLoader.setRoot(stage);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        showWelcome();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Reads user input and run the commands."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String fullCommand \u003d userInput.getText().trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getUserDialog(\"Command enter: \" + fullCommand, user));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            String outputString \u003d c.execute(tasks, storage, pastOperationList);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (c.isExit()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            outputToUi(outputString);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            outputToUi(e.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            outputToUi(String.format(Messages.DESCRIPTION_FORMAT_EXCEPTION, \"number\"));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Prints the message in the Ui."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param message message to be printed."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void outputToUi(String message) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(message, duke));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Prints welcome message to user."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        outputToUi(Messages.GREETING_MESSAGE);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 128
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"true\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        \u003cText fx:id\u003d\"dialog\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" wrappingWidth\u003d\"250.0\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        \u003c/HBox.margin\u003e\u003c/Text\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "lightz96": 19
    }
  },
  {
    "path": "src/main/resources/view/DukeWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?import javafx.scene.Scene?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c?import javafx.stage.Stage?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"410\" title\u003d\"Duke\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    \u003cscene\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        \u003cScene\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                \u003cURL value\u003d\"@Duke.css\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            \u003cAnchorPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                \u003cchildren\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Enter\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                        \u003ccontent\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"560.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                        \u003c/content\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                \u003c/children\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        \u003c/Scene\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    \u003c/scene\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "lightz96": 32
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 12
    }
  },
  {
    "path": "src/test/java/duke/command/DeadlineCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DeadlineCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeadlineCommand(\"deadline test\".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeadlineCommand(\"deadline test /by \".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeadlineCommand(\"deadline test /by 20/12/2019 1800\".split(\"\\\\s+\"))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .isExit());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Storage storage \u003d new Storage(\"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        PastOperationList pastOperationList \u003d new PastOperationList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(Messages.DATETIME_PARSE_EXCEPTION, new DeadlineCommand(\"deadline test /by 20/12/2019\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .split(\"\\\\s+\"))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .execute(new TaskList(), storage, pastOperationList));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(\"20/12/2019 1800\", formatter);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task deadlineTask \u003d new Deadline(\"test\", dateTime);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(String.join(\"\\n\", Messages.ADDED_TASK_MESSAGE,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Messages.COMMAND_INDENTATION + Messages.COMPLETION_INDENTATION + deadlineTask.toString(),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                String.format(Messages.LIST_SIZE_FORMAT, 1)),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                new DeadlineCommand(\"deadline test /by 20/12/2019 1800\".split(\"\\\\s+\"))"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .execute(new TaskList(), storage, pastOperationList));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 51
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private PastOperationList pastOperationList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeleteCommand(1).isExit());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeleteCommand(10).isExit());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        pastOperationList \u003d new PastOperationList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(Messages.INVALID_SIZE_EXCEPTION, new DeleteCommand(10)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .execute(taskList1, storage, pastOperationList));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(String.join(\"\\n\", Messages.DELETE_TASK_MESSAGE,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Messages.COMMAND_INDENTATION + Messages.COMPLETION_INDENTATION + task2.toString(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                String.format(Messages.LIST_SIZE_FORMAT, 1)), new DeleteCommand(2)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .execute(taskList1, storage, pastOperationList));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 48
    }
  },
  {
    "path": "src/test/java/duke/command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private PastOperationList pastOperationList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private static final String DATETIME_PATTERN \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DoneCommand(1).isExit());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DoneCommand(10).isExit());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATETIME_PATTERN);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(\"08/09/2019 1130\", formatter);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", dateTime, false);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", dateTime);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        pastOperationList \u003d new PastOperationList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(Messages.INVALID_SIZE_EXCEPTION, new DoneCommand(10)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .execute(taskList1, storage, pastOperationList));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(String.join(\"\\n\", Messages.DONE_MESSAGE, Messages.COMMAND_INDENTATION"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                + Messages.COMPLETION_INDENTATION + \"[D][O] submit (by: 08 September 2019, 11:30 AM)\"),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                new DoneCommand(1).execute(taskList1, storage, pastOperationList));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 53
    }
  },
  {
    "path": "src/test/java/duke/command/EventCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class EventCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private PastOperationList pastOperationList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new EventCommand(\"event a\".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new EventCommand(\"event a /at\".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new EventCommand(\"event a /at SG\".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        pastOperationList \u003d new PastOperationList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(String.join(\"\\n\", Messages.ADDED_TASK_MESSAGE, Messages.COMMAND_INDENTATION"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                + Messages.COMPLETION_INDENTATION + new Event(\"a\", \"SG\", false),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                String.format(Messages.LIST_SIZE_FORMAT, 3)),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                new EventCommand(\"event a /at SG\".split(\"\\\\s+\")).execute(taskList1, storage, pastOperationList));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 47
    }
  },
  {
    "path": "src/test/java/duke/command/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private PastOperationList pastOperationList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(true, new ExitCommand().isExit());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        pastOperationList \u003d new PastOperationList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(Messages.BYE_MESSAGE, new ExitCommand().execute(taskList1, storage, pastOperationList));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 40
    }
  },
  {
    "path": "src/test/java/duke/command/FindCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class FindCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private PastOperationList pastOperationList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] arr \u003d \"find another\".split(\"\\\\s+\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new FindCommand(Arrays.copyOfRange(arr, 1, arr.length)).isExit());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] arr1 \u003d \"find another\".split(\"\\\\s+\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        pastOperationList \u003d new PastOperationList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(String.join(\"\\n\", Messages.FIND_TASK_MESSAGE, Messages.COMMAND_INDENTATION"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                + \"1.\" + task2), new FindCommand(Arrays.copyOfRange(arr1, 1, arr1.length))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .execute(taskList1, storage, pastOperationList));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 47
    }
  },
  {
    "path": "src/test/java/duke/command/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private PastOperationList pastOperationList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new ListCommand().isExit());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/dukeTest.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        pastOperationList \u003d new PastOperationList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(String.join(\"\\n\", Messages.LIST_MESSAGE,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Messages.COMMAND_INDENTATION + \"1.\" + task1 + \"\\n\" + Messages.COMMAND_INDENTATION + \"2.\" + task2),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                new ListCommand().execute(taskList1, storage, pastOperationList));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 43
    }
  },
  {
    "path": "src/test/java/duke/command/ToDoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.PastOperationList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class ToDoCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private PastOperationList pastOperationList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new ToDoCommand(\"todo read book\".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new ToDoCommand(\"todo read\".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        pastOperationList \u003d new PastOperationList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(String.join(\"\\n\", Messages.ADDED_TASK_MESSAGE,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Messages.COMMAND_INDENTATION + Messages.COMPLETION_INDENTATION + new Todo(\"read book\", false),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                String.format(Messages.LIST_SIZE_FORMAT, 3)),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                new ToDoCommand(\"todo read book\".split(\"\\\\s+\")).execute(taskList1, storage, pastOperationList));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(String.join(\"\\n\", Messages.ADDED_TASK_MESSAGE,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Messages.COMMAND_INDENTATION + Messages.COMPLETION_INDENTATION + new Todo(\"read\", false),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                String.format(Messages.LIST_SIZE_FORMAT, 4)), new ToDoCommand(\"todo read\".split(\"\\\\s+\"))"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .execute(taskList1, storage, pastOperationList));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 50
    }
  },
  {
    "path": "text-ui-test/expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "      [T][✘] read book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "      [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "      [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "      [T][✘] join sports club"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "      [T][✘] borrow book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    1.[T][✘] read book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    4.[T][✘] join sports club"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    5.[T][✘] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lightz96": 44
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "lightz96": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "REM create bin directory if doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e actual.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lightz96": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "lightz96": 34
    }
  }
]
