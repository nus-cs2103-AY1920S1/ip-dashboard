[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 17,
      "-": 15
    }
  },
  {
    "path": "src/main/java/DeadLine.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Represents a DeadLine Task. A DeadLine object is represented by a description"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * and a time it is due by."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class DeadLine extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  // Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public DeadLine(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Returns the deadline in which the task is due by"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @return deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String getDeadLine() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return this.by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return \"[D] \" + super.toString() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException, DukeException, IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        // Scanner object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        boolean printed \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        // Create a Ui \u0026 show welcome message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        // Create file under Storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        Storage s \u003d new Storage(\"data/taskList.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                TaskList t \u003d new TaskList(s);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                // If previous list has been loaded"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                if (printed) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                    String command \u003d sc.next();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                    if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                        // Create Parser \u0026 Execute"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                        Parser p \u003d new Parser(command, \"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                        p.executeAndSave(t, s);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                    } else if (command.equals(\"list\") || command.equals(\"deadline\") || command.equals(\"todo\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                            || command.equals(\"event\") || command.equals(\"done\") || command.equals(\"delete\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                            || command.equals(\"find\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                        String description \u003d sc.nextLine().stripLeading();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                        Parser p \u003d new Parser(command, description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                        p.executeAndSave(t, s);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                        throw new DukeException(\"OOPS! I\u0027m sorry, I don\u0027t know what that means! :(\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                    // If previous list not loaded, print Tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                    t.printTasks();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                    printed \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                System.out.println(\"\\n\\t\" + e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                System.out.println(\"\\n\\t\" + e.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "                System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 61,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Represents an Event Task. An event task is represented by a description and"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * the timing the event happens."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private String timing;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  // Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public Event(String description, String timing) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.timing \u003d timing;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Returns the timing at which the event happens"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @return timing"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String getTiming() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return this.timing;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return \"[E] \" + super.toString() + \" (at:\" + timing + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 28
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Parser object handles all input reading and prints the respective output."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private String taskDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private int taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private boolean taskNumChanged \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private String date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private String dateBeforeFormat;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private static String getSuffix(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    int day \u003d dateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    int remainder \u003d day % 10;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    if (remainder \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return \"st\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (remainder \u003d\u003d 2) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return \"nd\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (remainder \u003d\u003d 3) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return \"rd\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return \"th\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private static String getDate(String dateTimeString) throws DateTimeParseException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Create formatter to recognise input pattern and convert to LocalDateTime"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString, formatter);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    String suffix \u003d getSuffix(dateTime) + \" of\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Format LocalDateTime"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    DateTimeFormatter wantedFormat \u003d DateTimeFormatter.ofPattern(\" d\u0027\" + suffix + \"\u0027 MMMM yyyy, h.mm a\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    String formattedDate \u003d wantedFormat.format(dateTime);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return formattedDate;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public Parser(String command, String description)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      throws DukeException, NumberFormatException, DateTimeParseException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.taskNum \u003d Integer.valueOf(description);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.taskNumChanged \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.taskDescription \u003d description;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String[] wordArr \u003d description.split(\"/by\", 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        if (wordArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "          throw new DukeException(\"OOPS! Deadlines should be followed by a /by.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.taskDescription \u003d wordArr[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.dateBeforeFormat \u003d wordArr[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.date \u003d getDate(wordArr[1].stripLeading());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String[] wordArr \u003d description.split(\"/at\", 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        if (wordArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "          throw new DukeException(\"OOPS! Deadlines should be followed by a /at.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.taskDescription \u003d wordArr[0];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.dateBeforeFormat \u003d wordArr[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.date \u003d getDate(wordArr[1].stripLeading());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.taskNum \u003d Integer.valueOf(description);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.taskNumChanged \u003d true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        this.taskDescription \u003d description;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        throw new DukeException(\"OOPS! I\u0027m sorry, I don\u0027t know what that means! :(\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } catch (DukeException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\t\" + e.getMessage());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tOOPS! An integer is expected after done / delete.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"OOPS! Dates should be in the format mm/dd/yyyy (24-hour time format)\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Executes the commands only."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @param taskList"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws DukeException"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws IOException"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void executeOnly(TaskList taskList) throws DukeException, IOException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (taskDescription \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        throw new DukeException(\"OOPS! The description for todo should not be empty.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Create a ToDo task and add to to tasks"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      ToDo task \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      tasks.add(task);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      DeadLine task \u003d new DeadLine(taskDescription, date);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      tasks.add(task);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      Event task \u003d new Event(taskDescription, date);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      tasks.add(task);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (taskNum \u003c 0 || taskNum \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        throw new DukeException(\"OOPS! Integer is out of range of list.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      tasks.remove(taskNum);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (taskNum \u003c 0 || taskNum \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        throw new DukeException(\"OOPS! Integer is out of range of list.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      tasks.get(taskNum).setAsDone();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      taskList.printTasks();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      throw new DukeException(\"OOPS! I\u0027m sorry, I don\u0027t know what that means! :(\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    taskList.setTaskList(tasks);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Executes the commands and save them into the file in Storage"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @param taskList TaskList containing all tasks."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @param s        Storage object."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws DukeException"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws IOException"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void executeAndSave(TaskList taskList, Storage s) throws DukeException, IOException {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ArrayList\u003cTask\u003e tasks \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (taskDescription \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        throw new DukeException(\"OOPS! The description for todo should not be empty.\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      ToDo task \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      tasks.add(task);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Printing Output"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tGot it! I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\t\" + task.toString());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Save the command in taskList.txt"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String text \u003d \"todo \" + taskDescription + \"\\n\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      s.appendToFile(text);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      DeadLine task \u003d new DeadLine(taskDescription, date);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      tasks.add(task);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Printing Output"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tGot it! I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\t\" + task.toString());"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Save the command in taskList.txt"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String text \u003d \"deadline \" + taskDescription + \" /by \" + dateBeforeFormat + \"\\n\";"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      s.appendToFile(text);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      Event task \u003d new Event(taskDescription, date);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      tasks.add(task);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Printing Output"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tGot it! I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\t\" + task.toString());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Save the command in taskList.txt"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String text \u003d \"event \" + taskDescription + \" /at \" + dateBeforeFormat + \"\\n\";"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      s.appendToFile(text);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (taskNum \u003c 0 || taskNum \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        throw new DukeException(\"OOPS! Integer is out of range of list.\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (taskNumChanged) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        Task removed \u003d tasks.get(taskNum);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        tasks.remove(taskNum);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        // Printing Output"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        System.out.println(\"\\n\\tNoted. I have removed this task: \");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        System.out.println(\"\\n\\t\" + removed);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        System.out.println(\"\\n\\tNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        // Save the command in taskList.txt"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String text \u003d \"delete \" + taskNum + \"\\n\";"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        s.appendToFile(text);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (taskNum \u003c 0 || taskNum \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        throw new DukeException(\"OOPS! Integer is out of range of list.\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (taskNumChanged) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        tasks.get(taskNum).setAsDone();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        // Printing Output"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        System.out.println(\"\\n\\tNice! I have marked this task as done: \");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        System.out.println(\"\\n\\t\" + tasks.get(taskNum));"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        // Save the command in taskList.txt"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String text \u003d \"done \" + taskNum + \"\\n\";"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        s.appendToFile(text);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Printing Output"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      taskList.printTasks();"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      taskList.printFoundTasks(taskDescription);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      throw new DukeException(\"OOPS! I\u0027m sorry, I don\u0027t know what that means! :(\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    taskList.setTaskList(tasks);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 318
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Storage object holds the file, in which writing and reading will happen."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private File f;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.f \u003d f;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public File load() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return f;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Adds text supplied to File"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @param textToAdd."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @throws IOException If there\u0027s any input / output errors."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void appendToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    FileWriter fw \u003d new FileWriter(f.getAbsolutePath(), true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    fw.write(textToAdd);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    fw.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 32
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Task object is defined by a description. It has a field isDone to indicate"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * whether the task is completed or not."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  // Constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Sets the task to be done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void setAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * Returns a StatusIcon, based on whether the task is completed or not."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   * @return StatusIcon"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "   */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // X to represent done, nothing to represent not done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return (isDone ? \"X\" : \" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public boolean getBoolean() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return isDone;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 44
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public TaskList(Storage s) throws FileNotFoundException, DukeException, IOException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      Scanner sc \u003d new Scanner(s.load());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String command \u003d sc.next();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        String description \u003d sc.nextLine().stripLeading();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        Parser p \u003d new Parser(command, description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        p.executeOnly(this);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      sc.close();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"File is not found!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void printTasks() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\tHere are the tasks in your list: \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      System.out.println(\"\\n\\t\" + (i + 1) + \". \" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void printFoundTasks(String keyword) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    int count \u003d 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\tHere are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      String taskDescription \u003d taskList.get(i).getDescription();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      // Prints the task, only if it contains the keyword"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      if (taskDescription.contains(keyword)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        System.out.println(\"\\n\\t\" + count + \". \" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "      }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void setTaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    this.taskList \u003d tasks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 67
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " * Represents a ToDo Task. A ToDo task is represented by a description."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    return \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void showWelcome() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "        + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    // Welcome message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\n\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    System.out.println(\"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 14
    }
  },
  {
    "path": "src/main/java/data/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "event project meeting  /at  28/08/2019 1430"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "deadline submit CS2103T quiz  /by  25/08/2019 2359"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "event project meeting  /at  27/08/2019 1430"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "todo sign book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "deadline submit CS2103T  /by  25/08/2019 2359"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 11
    }
  },
  {
    "path": "src/test/java/DeadLineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class DeadLineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"[D] [ ] return book (by:Sunday)\", new DeadLine(\"return book\", \"Sunday\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"[D] [ ] sign book (by:Monday)\", new DeadLine(\"sign book\", \"Monday\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testSetAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    DeadLine d \u003d new DeadLine(\"return book\", \"Sunday\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    d.setAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertTrue(d.getBoolean());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    DeadLine d \u003d new DeadLine(\"return book\", \"Sunday\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\" \", d.getStatusIcon());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    d.setAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"X\", d.getStatusIcon());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 28
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"[E] [ ] project meeting (at:Sunday)\", new Event(\"project meeting\", \"Sunday\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"[E] [ ] CS2103 discussion (at:2pm)\", new Event(\"CS2103 discussion\", \"2pm\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testSetAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    Event e \u003d new Event(\"project meeting\", \"Sunday\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    e.setAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertTrue(e.getBoolean());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    Event e \u003d new Event(\"project meeting\", \"Sunday\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\" \", e.getStatusIcon());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    e.setAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"X\", e.getStatusIcon());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 28
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"[T] [ ] borrow book\", new ToDo(\"borrow book\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"[T] [ ] return book\", new ToDo(\"return book\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testSetAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ToDo t \u003d new ToDo(\"borrow book\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    t.setAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertTrue(t.getBoolean());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    ToDo t \u003d new ToDo(\"borrow book\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\" \", t.getStatusIcon());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    t.setAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "    assertEquals(\"X\", t.getStatusIcon());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bigjunnn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bigjunnn": 28
    }
  }
]
