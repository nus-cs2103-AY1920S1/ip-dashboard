[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 22,
      "-": 15
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "D | 0 | submit | 25 August 2019, 03:02 AM"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": "D | 0 | submit another | 25 August 2019, 03:02 AM"
      }
    ],
    "authorContributionMap": {
      "lightz96": 2
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Main Duke Program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Constructor of Duke object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param filePath path to the input text file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Runs the duke program."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                ui.showError(String.format(Messages.DESCRIPTION_FORMAT_EXCEPTION, \"number\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 58,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Notify the program to exit."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 12
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public abstract boolean execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 11
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.GetArgumentsUtil;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private static final String DATETIME_PATTERN \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private String[] commands;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public DeadlineCommand(String[] commands) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.commands \u003d commands;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Notify the program to exit."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Executes Deadline command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskList TaskList object for the duke program"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param ui ui object for the duke program"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param storage storage object for the duke program"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true if the command executes successfully, else false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATETIME_PATTERN);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            String[] args \u003d GetArgumentsUtil.getTwoCommandArgs(1, \"/by\", commands);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(args[1], formatter);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            Task deadlineTask \u003d new Deadline(args[0], dateTime);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            taskList.addToTaskList(deadlineTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            ui.showMessage(Messages.ADDED_TASK_MESSAGE, Messages.COMMAND_INDENTATION"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    + Messages.COMPLETION_INDENTATION + deadlineTask.toString(),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    String.format(Messages.LIST_SIZE_FORMAT, taskList.getSize()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            ui.showError(Messages.DATETIME_PARSE_EXCEPTION);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (DukeException e1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            ui.showError(e1.getMessage());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 62
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private int itemNum;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public DeleteCommand(int itemNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.itemNum \u003d itemNum;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Notify the program to exit."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Executes Delete command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskList TaskList object for the duke program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param ui ui object for the duke program"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param storage storage object for the duke program"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true if the command executes successfully, else false"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            Task removedTask \u003d taskList.deleteFromTaskList(itemNum - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            ui.showMessage(Messages.DELETE_TASK_MESSAGE,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    Messages.COMMAND_INDENTATION + Messages.COMPLETION_INDENTATION + removedTask.toString(),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    String.format(Messages.LIST_SIZE_FORMAT, taskList.getSize()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            ui.showError(Messages.INVALID_SIZE_EXCEPTION);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 47
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private int itemNum;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public DoneCommand(int itemNum) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.itemNum \u003d itemNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Notify the program to exit."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Executes Done command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskList TaskList object for the duke program"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param ui ui object for the duke program"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param storage storage object for the duke program"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true if the command executes successfully, else false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            taskList.getTask(itemNum - 1).completeTask();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            ui.showMessage(Messages.DONE_MESSAGE, Messages.COMMAND_INDENTATION"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    + Messages.COMPLETION_INDENTATION + taskList.getTask(itemNum - 1).toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            ui.showError(Messages.INVALID_SIZE_EXCEPTION);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 44
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.GetArgumentsUtil;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private String[] commands;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public EventCommand(String[] commands) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.commands \u003d commands;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Notify the program to exit."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Executes Event command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskList TaskList object for the duke program"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param ui ui object for the duke program"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param storage storage object for the duke program"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true if the command executes successfully, else false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            String[] args \u003d GetArgumentsUtil.getTwoCommandArgs(1, \"/at\", commands);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            Task eventTask \u003d new Event(args[0], args[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            taskList.addToTaskList(eventTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            ui.showMessage(Messages.ADDED_TASK_MESSAGE, Messages.COMMAND_INDENTATION"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    + Messages.COMPLETION_INDENTATION + eventTask.toString(),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    String.format(Messages.LIST_SIZE_FORMAT, taskList.getSize()));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 50
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Notify the program to exit."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Executes Exit command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskList TaskList object for the duke program"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param ui ui object for the duke program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param storage storage object for the duke program"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true if the command executes successfully, else false"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            storage.saveData(taskList.getTaskList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            ui.showMessage(Messages.BYE_MESSAGE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 40
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private String[] itemsToFind;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public FindCommand(String[] itemToFind) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.itemsToFind \u003d itemToFind;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskMatchedList \u003d taskList.findTasks(itemsToFind);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String formattedTasks \u003d taskList.getTasksInString(taskMatchedList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ui.showMessage(Messages.FIND_TASK_MESSAGE, Messages.COMMAND_INDENTATION + formattedTasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 31
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Notify the program to exit."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Executes List command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskList TaskList object for the duke program"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param ui ui object for the duke program"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param storage storage object for the duke program"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String formattedString \u003d taskList.getTasksInString(taskList.getTaskList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ui.showMessage(Messages.LIST_MESSAGE, Messages.COMMAND_INDENTATION + formattedString);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 31
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.GetArgumentsUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class ToDoCommand extends AddCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private String[] commands;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public ToDoCommand(String[] commands) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.commands \u003d commands;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Executes ToDo command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskList TaskList object for the duke program"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param ui ui object for the duke program"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param storage storage object for the duke program"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return true "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String arg \u003d GetArgumentsUtil.concatStrings(Arrays.copyOfRange(commands, 1, commands.length));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task toDoTask \u003d new Todo(arg);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.addToTaskList(toDoTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ui.showMessage(Messages.ADDED_TASK_MESSAGE,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Messages.COMMAND_INDENTATION + Messages.COMPLETION_INDENTATION + toDoTask.toString(),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                String.format(Messages.LIST_SIZE_FORMAT, taskList.getSize()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 37
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Parses command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Converts the command into command object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param command command inputted by the user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return converted command object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException throws by {@link #findCommand(String[])}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws NumberFormatException throws by {@link #findCommand(String[])}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command parse(String command) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] commandArr \u003d command.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return findCommand(commandArr);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Returns the correct command object based on user inputted command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the last command entered by the user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user inputted an invalid command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws NumberFormatException if user inputted an invalid description for done and delete command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static Command findCommand(String[] commands) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (commands[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (commands[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (commands[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (commands.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                return new DoneCommand(Integer.parseInt(commands[1]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new DukeException(String.format(Messages.DESCRIPTION_MISSING_EXCEPTION, \"done\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (commands[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (commands.length \u003e 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                return new ToDoCommand(commands);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new DukeException(String.format(Messages.DESCRIPTION_MISSING_EXCEPTION, \"todo\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (commands[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (commands.length \u003e 1) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                return new DeadlineCommand(commands);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new DukeException(String.format(Messages.DESCRIPTION_MISSING_EXCEPTION, \"deadline\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (commands[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (commands.length \u003e 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                return new EventCommand(commands);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new DukeException(String.format(Messages.DESCRIPTION_MISSING_EXCEPTION, \"event\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (commands[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                if (commands.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    return new DeleteCommand(Integer.parseInt(commands[1]));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    throw new DukeException(String.format(Messages.DESCRIPTION_MISSING_EXCEPTION, \"delete\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new NumberFormatException(String.format(Messages.DESCRIPTION_FORMAT_EXCEPTION, \"delete\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                        \"number\"));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (commands[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (commands.length \u003e 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                return new FindCommand(Arrays.copyOfRange(commands, 1, commands.length));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else if (commands.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                throw new DukeException(String.format(Messages.DESCRIPTION_FORMAT_EXCEPTION, \"find\"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        throw new DukeException(Messages.UNKNOWN_COMMAND_EXCEPTION);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 99
    }
  },
  {
    "path": "src/main/java/duke/shared/GetArgumentsUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.shared;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class GetArgumentsUtil {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Retrieves two args from an arrays."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param start is the start index where the method will sublist from"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param delimiter is the string that determine the 2 arguments"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param commands is the latest command inputted by the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return an array of 2 items, command description and sub-command(e.g. /at) description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException if user does not provide the sub-command / the sub-command does not have any description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static String[] getTwoCommandArgs(int start, String delimiter, String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] args \u003d new String[2];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cString\u003e commandList \u003d Arrays.asList(commands);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        int indexOfSeparator \u003d commandList.indexOf(delimiter);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (indexOfSeparator \u003d\u003d commandList.size() - 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(String.format(Messages.SUBDESCRIPTION_MISSING_EXCEPTION, delimiter));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (indexOfSeparator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            throw new DukeException(String.format(Messages.NO_SUBDESCRIPTION_EXCEPTION, delimiter));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            args[0] \u003d concatStrings(commandList.subList(start, indexOfSeparator)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    .toArray(new String[indexOfSeparator - 1]));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            args[1] \u003d concatStrings(commandList.subList(indexOfSeparator + 1, commandList.size())"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                    .toArray(new String[commandList.size() - (indexOfSeparator + 1)]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return args;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Concatenate the arguments (in array)."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param command is last command inputted by the user (in array)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return argument of the command in String"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static String concatStrings(String[] command) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        StringBuilder myStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        for (int i \u003d 0; i \u003c command.length; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            myStringBuilder.append(command[i]).append(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        myStringBuilder.deleteCharAt(myStringBuilder.length() - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return myStringBuilder.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 48
    }
  },
  {
    "path": "src/main/java/duke/shared/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.shared;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String COMMAND_INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String COMPLETION_INDENTATION \u003d \"  \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String BYE_MESSAGE \u003d COMMAND_INDENTATION + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String GREETING_MESSAGE \u003d COMMAND_INDENTATION + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + COMMAND_INDENTATION + \"What can I do for you?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String ADDED_MESSAGE \u003d COMMAND_INDENTATION + \"added: \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String LIST_MESSAGE \u003d COMMAND_INDENTATION + \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DONE_MESSAGE \u003d COMMAND_INDENTATION + \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String ADDED_TASK_MESSAGE \u003d COMMAND_INDENTATION + \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DELETE_TASK_MESSAGE \u003d COMMAND_INDENTATION + \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String FIND_TASK_MESSAGE \u003d COMMAND_INDENTATION + \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String LIST_SIZE_FORMAT \u003d COMMAND_INDENTATION + \"Now you have %d tasks in the list.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DESCRIPTION_MISSING_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"☹ OOPS!!! The description of a %s cannot be empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String UNKNOWN_COMMAND_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DESCRIPTION_FORMAT_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"☹ OOPS!!! The description need to be %s.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String SUBDESCRIPTION_MISSING_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"☹ OOPS!!! The description of a %s cannot be empty.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String NO_SUBDESCRIPTION_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"☹ OOPS!!! \\\"%s\\\" cannot be found in the command\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String INVALID_SIZE_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"☹ OOPS!!! Invalid task number\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DATETIME_PARSE_EXCEPTION \u003d COMMAND_INDENTATION"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"☹ The description of /by must be in the correct format (dd/MM/yyyy HHmm). E.g. 2/12/2019 1800\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 32
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.GetArgumentsUtil;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Loads and save data from text file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String DATETIME_PATTERN \u003d \"dd MMMM yyyy, hh:mm a\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final int DONE_INDEX \u003d 2;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final int TASK_INDEX \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final int START_ARGUMENTS_INDEX \u003d 4;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Constructor for storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param filePath file path to load our data from"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Reads and load data from file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return list of past tasks saved in the text file"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IOException throws by {@link #readFile()}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException throws by {@link GetArgumentsUtil#getTwoCommandArgs(int, String, String[])}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException, DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        readFile();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Reads and decode the text in the text file line-by-line."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IOException if file cannot be found / file cannot be opened"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException throws by {@link GetArgumentsUtil#getTwoCommandArgs(int, String, String[])}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void readFile() throws IOException, DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                decodeLine(line);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Decode the line and adds to the tasklist."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param line line read from the text file"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException throws by {@link GetArgumentsUtil#getTwoCommandArgs(int, String, String[])}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void decodeLine(String line) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] inputLines \u003d line.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (inputLines[TASK_INDEX].equals(\"T\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            task \u003d toDoParser(inputLines);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (inputLines[TASK_INDEX].equals(\"E\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            task \u003d eventParser(inputLines);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (inputLines[TASK_INDEX].equals(\"D\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            task \u003d deadlineParser(inputLines);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Convert the decoded line to ToDo object."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param inputLines line from the text file"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return converted todo object"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task toDoParser(String[] inputLines) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task toDoTask \u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String taskName \u003d String.join(\" \", Arrays.copyOfRange(inputLines, START_ARGUMENTS_INDEX,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                inputLines.length));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (inputLines[DONE_INDEX].equals(\"1\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            toDoTask \u003d new Todo(taskName, true);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (inputLines[DONE_INDEX].equals(\"0\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            toDoTask \u003d new Todo(taskName, false);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return toDoTask;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Convert the decoded line to Event object."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param inputLines line from the text file"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return converted event object"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException throws by {@link GetArgumentsUtil#getTwoCommandArgs(int, String, String[])}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task eventParser(String[] inputLines) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task eventTask \u003d null;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] args \u003d GetArgumentsUtil.getTwoCommandArgs(0,\"|\","
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Arrays.copyOfRange(inputLines, START_ARGUMENTS_INDEX, inputLines.length));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (inputLines[DONE_INDEX].equals(\"1\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            eventTask \u003d new Event(args[0], args[1], true);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (inputLines[DONE_INDEX].equals(\"0\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            eventTask \u003d new Event(args[0], args[1], false);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return eventTask;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Convert the decoded line to Deadline Object."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param inputLines line from the text file"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return converted deadline object"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws DukeException throws by {@link GetArgumentsUtil#getTwoCommandArgs(int, String, String[])}"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task deadlineParser(String[] inputLines) throws DukeException {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task deadlineTask \u003d null;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATETIME_PATTERN);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] args \u003d GetArgumentsUtil.getTwoCommandArgs(0, \"|\","
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                Arrays.copyOfRange(inputLines, START_ARGUMENTS_INDEX, inputLines.length));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(args[1], formatter);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        if (inputLines[DONE_INDEX].equals(\"1\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            deadlineTask \u003d new Deadline(args[0], dateTime, true);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        } else if (inputLines[DONE_INDEX].equals(\"0\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            deadlineTask \u003d new Deadline(args[0], dateTime, false);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return deadlineTask;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Encode the task and save it to the text file."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param taskList latest list of tasks"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IOException throws by {@link #writeToFile(String)}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void saveData(List\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        StringBuilder myStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                myStringBuilder.append(task.getShortForm()).append(\" | \").append(task.getStatus() ? 1 : 0).append(\" | \")"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                        .append(task.getName()).append(\"\\n\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                myStringBuilder.append(task.getShortForm()).append(\" | \").append(task.getStatus() ? 1 : 0).append(\" | \")"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                        .append(task.getName()).append(\" | \").append(((Event) task).getTiming()).append(\"\\n\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                myStringBuilder.append(task.getShortForm()).append(\" | \").append(task.getStatus() ? 1 : 0).append(\" | \")"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                        .append(task.getName()).append(\" | \").append(((Deadline) task).getFormattedDateTime())"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                        .append(\"\\n\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        myStringBuilder.deleteCharAt(myStringBuilder.length() - 1);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        writeToFile(myStringBuilder.toString());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Write text to file."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param linesToWrite string to be written to the file"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IOException if file cannot be opened"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void writeToFile(String linesToWrite) throws IOException {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(filePath));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        bufferedWriter.append(linesToWrite);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        bufferedWriter.close();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 179
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private char shortForm \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    protected LocalDateTime submissionTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Constructor that will be used for entered command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param name name of the deadline task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param submissionTime datetime of the deadline task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Deadline(String name, LocalDateTime submissionTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.submissionTime \u003d submissionTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Constructor that will be used for loading data from text."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param name name of the deadline task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param submissionTime datetime of the deadline task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param isDone is the status of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Deadline(String name, LocalDateTime submissionTime, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.submissionTime \u003d submissionTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public LocalDateTime getSubmissionTime() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return submissionTime;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void setSubmissionTime(LocalDateTime submissionTime) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.submissionTime \u003d submissionTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Formats the datetime."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return formatted datetime"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String getFormattedDateTime() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return submissionTime.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy, hh:mm a\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public char getShortForm() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return shortForm;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return \"[\" + getShortForm() + \"]\" + super.toString() + \" (by: \" + getFormattedDateTime() + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private char shortForm \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    protected String timing;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Constructor that will be used for entered command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param name name of the event task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param timing datetime/location of the event task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Event(String name, String timing) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        //Used when user entered command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Constructor that will be used for loading data from text."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param name name of the event task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param timing datetime/location of the event task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param isDone is the status of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Event(String name, String timing, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        //Used when program loads data from text"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void setTiming(String timing) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public char getShortForm() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return shortForm;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return \"[\" + getShortForm() + \"]\" + super.toString() + \" (at: \" + timing + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Constructor that will be used for entered command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param name name of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        //Used when user entered command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Constructor that will be used for loading data from text."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param name name of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param isDone is the status of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        //Used when program loads data from text"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Change status icon to tick."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public abstract char getShortForm();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getName();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 57
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Formats the list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param listToDisplay list of tasks to be formatted"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return formatted list of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String getTasksInString(List\u003cTask\u003e listToDisplay) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        StringBuilder myStringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        for (int i \u003d 0; i \u003c listToDisplay.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (i \u003c listToDisplay.size() - 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                myStringBuilder.append(i + 1).append(\".\").append(listToDisplay.get(i)).append(\"\\n\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                        .append(Messages.COMMAND_INDENTATION);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            } else if (i \u003d\u003d listToDisplay.size() - 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                myStringBuilder.append(i + 1).append(\".\").append(listToDisplay.get(i));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return myStringBuilder.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Adds task to tasklist."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param task task to be added to tasklist"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void addToTaskList(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Provides the number of items in taskList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return number of items inside taskList"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Removes task from taskList."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param index index of the taskList"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return removed task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IndexOutOfBoundsException index less than 0 or bigger than the size of taskList"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task deleteFromTaskList(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList.remove(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Retrieves task from tasklist."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param index index of the taskList"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return requested task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @throws IndexOutOfBoundsException index less than 0 or bigger than the size of the tasklist"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Task getTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Provides all tasks within the tasklist."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return a list of tasks within the tasklist"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Finds tasks that contains the keywords stated in the itemToFind."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param itemToFind keywords provided by the user"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return list of tasks that matches the keywords"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public List\u003cTask\u003e findTasks(String[] itemToFind) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e matchedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cString\u003e itemListInString \u003d Arrays.asList(itemToFind);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            List\u003cString\u003e subNameList \u003d Arrays.asList(task.getName().split(\"\\\\s+\"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            if (!Collections.disjoint(itemListInString, subNameList)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                matchedTaskList.add(task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return matchedTaskList;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 100
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private char shortForm \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        //Used when user entered command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Todo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        //Used when program loads data from text"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public char getShortForm() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return shortForm;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return \"[\" + getShortForm() + \"]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 24
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": " * Displays message to the user via terminal."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String START_HORIZONTAL_LINE \u003d \"   _______________________________________________________\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"_____\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public static final String END_HORIZONTAL_LINE \u003d \"   _________________________________________________________\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            + \"___\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Displays error messages to user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param errorMessages error message that Ui will displayed to user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void showError(String... errorMessages) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        printLines(errorMessages);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Displays info messages to user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param messages info message that Ui will displayed to user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void showMessage(String... messages) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        printLines(messages);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Reads user command entered by the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @return command entered by the user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Print welcome message to user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        printLines(Messages.GREETING_MESSAGE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * Prints messages to the terminal."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     * @param messagesLines messages to be printed to the console"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lightz96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void printLines(String... messagesLines) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        System.out.println(START_HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        for (String line : messagesLines) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lightz96"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        System.out.println(END_HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 64
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 12
    }
  },
  {
    "path": "src/test/java/duke/command/DeadlineCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.shared.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import jdk.jfr.StackTrace;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DeadlineCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeadlineCommand(\"deadline test\".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeadlineCommand(\"deadline test /by \".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeadlineCommand(\"deadline test /by 20/12/2019 1800\".split(\"\\\\s+\"))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .isExit());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Storage storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeadlineCommand(\"deadline test\".split(\"\\\\s+\"))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .execute(new TaskList(), ui, storage));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeadlineCommand(\"deadline test /by \".split(\"\\\\s+\"))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .execute(new TaskList(), ui, storage));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeadlineCommand(\"deadline test /by 20/12/2019\".split(\"\\\\s+\"))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .execute(new TaskList(), ui, storage));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(true, new DeadlineCommand(\"deadline test /by 20/12/2019 1800\".split(\"\\\\s+\"))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .execute(new TaskList(), ui, storage));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 43
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeleteCommand(1).isExit());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeleteCommand(10).isExit());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DeleteCommand(10).execute(taskList1, ui, storage));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(true, new DeleteCommand(2).execute(taskList1, ui, storage));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 43
    }
  },
  {
    "path": "src/test/java/duke/command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DoneCommand(1).isExit());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DoneCommand(10).isExit());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new DoneCommand(10).execute(taskList1, ui, storage));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(true, new DoneCommand(2).execute(taskList1, ui, storage));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 42
    }
  },
  {
    "path": "src/test/java/duke/command/EventCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class EventCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new EventCommand(\"event a\".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new EventCommand(\"event a /at\".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new EventCommand(\"event a /at SG\".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new EventCommand(\"event a\".split(\"\\\\s+\")).execute(taskList1, ui, storage));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new EventCommand(\"event a /at\".split(\"\\\\s+\")).execute(taskList1, ui, storage));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(true, new EventCommand(\"event a /at SG\".split(\"\\\\s+\")).execute(taskList1, ui, storage));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 44
    }
  },
  {
    "path": "src/test/java/duke/command/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(true, new ExitCommand().isExit());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(true, new ExitCommand().execute(taskList1, ui, storage));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 40
    }
  },
  {
    "path": "src/test/java/duke/command/FindCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class FindCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] arr \u003d \"find another\".split(\"\\\\s+\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new FindCommand(Arrays.copyOfRange(arr, 1, arr.length)).isExit());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        String[] arr1 \u003d \"find another\".split(\"\\\\s+\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(true, new FindCommand(Arrays.copyOfRange(arr1, 1, arr1.length))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "                .execute(taskList1, ui, storage));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 45
    }
  },
  {
    "path": "src/test/java/duke/command/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new ListCommand().isExit());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(true, new ListCommand().execute(taskList1, ui, storage));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 40
    }
  },
  {
    "path": "src/test/java/duke/command/ToDoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "public class ToDoCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private TaskList taskList1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testIsExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new ToDoCommand(\"todo read book\".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(false, new ToDoCommand(\"todo read\".split(\"\\\\s+\")).isExit());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task1 \u003d new Deadline(\"submit\", LocalDateTime.now(), false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        Task task2 \u003d new Deadline(\"submit another\", LocalDateTime.now());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        taskList1 \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(true, new ToDoCommand(\"todo read book\".split(\"\\\\s+\")).execute(taskList1, ui, storage));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "        assertEquals(true, new ToDoCommand(\"todo read\".split(\"\\\\s+\")).execute(taskList1, ui, storage));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lightz96": 42
    }
  },
  {
    "path": "text-ui-test/expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": "      [T][✘] read book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": "      [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "      [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "      [T][✘] join sports club"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "      [T][✘] borrow book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    1.[T][✘] read book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    4.[T][✘] join sports club"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    5.[T][✘] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lightz96"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lightz96": 44
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "lightz96": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "REM create bin directory if doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e actual.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lightz96": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lightz96"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lightz96"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lightz96"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lightz96"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lightz96"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lightz96"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lightz96"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lightz96"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lightz96"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lightz96"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lightz96"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lightz96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lightz96"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lightz96"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lightz96"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lightz96"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lightz96"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lightz96"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lightz96"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "lightz96": 34
    }
  }
]
