[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    AddCommand(Task task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        ui.printAddTaskMessage(task.toString(), tasks.size());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 13
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    Command() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 13
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        SimpleDateFormat properFormat \u003d new SimpleDateFormat(\"dd \u0027of\u0027 MMMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (by: \" + properFormat.format(this.by)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 19
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    protected int deletedTask;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    DeleteCommand(int deleted) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.deletedTask \u003d deleted;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        ui.printRemoveMessage(tasks.delete(this.deletedTask), tasks.size());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 13
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    protected int doneTask;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    DoneCommand(int doneTask) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.doneTask \u003d doneTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        tasks.markAsDone(this.doneTask);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        ui.printDone(tasks.get(this.doneTask).toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            this.tasks \u003d new TaskList(this.storage.loadFromFile());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                String userInput \u003d ui.userInput();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                Command c \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                if (c !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                System.err.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            this.storage.saveToFile(this.tasks.getAllTasks());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            System.err.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    public static Date dateFormatter(String date) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            Date parseDate \u003d formatter.parse(date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            return parseDate;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            throw new DukeException(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        Duke duke \u003d new Duke(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 62,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        SimpleDateFormat properFormat \u003d new SimpleDateFormat(\"dd \u0027of\u0027 MMMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (at: \" + properFormat.format(this.at)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 18
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    ExitCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        super.isExit \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 12
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    ListCommand() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        ui.printTaskList(tasks.getAllTasks());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    private static void todoCheck(String[] tasks) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        if (tasks.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    private static void deadlineCheck(String[] tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        if (tasks.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } else if (!userInput.contains(\"/by\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            throw new DukeException(\"OOPS!!! Deadline must include /by (date to complete task).\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } else if (userInput.substring(userInput.indexOf(\"/by\") + 3).equals(\"\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                || userInput.substring(userInput.indexOf(\"/by\") + 4).equals(\"\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please include the date to complete task after /by command.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    private static void eventCheck(String[] tasks, String userInput) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        if (tasks.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } else if (!userInput.contains(\"/at\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            throw new DukeException(\"OOPS!!! Event must include /at (time of event).\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } else if (userInput.substring(userInput.indexOf(\"/at\") + 3).equals(\"\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                || userInput.substring(userInput.indexOf(\"/at\") + 4).equals(\"\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please include the time of event after /at.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            String[] task \u003d command.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            String instruction \u003d task[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            if (instruction.equals(\"done\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(task[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                return new DoneCommand(taskNumber - 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            } else if (instruction.equals(\"delete\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(task[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    return new DeleteCommand(taskNumber - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    throw new DukeException(\"OOPS!!! Provide a task number to delete!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                switch (instruction) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                case \"todo\": {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        todoCheck(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        Task todo \u003d new Todo(command.substring(5));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        return new AddCommand(todo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        System.err.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                case \"deadline\": {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        deadlineCheck(task, command);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        Task deadline \u003d new Deadline(command.substring(9, command.indexOf(\"/by\")),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                                Duke.dateFormatter(command.substring(command.indexOf(\"/by\") + 4)));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        return new AddCommand(deadline);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        System.err.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                case \"event\": {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        eventCheck(task, command);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        Task event \u003d new Event(command.substring(9, command.indexOf(\"/at\")),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                                Duke.dateFormatter(command.substring(command.indexOf(\"/at\") + 4)));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        return new AddCommand(event);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        System.err.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 92
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    ArrayList\u003cTask\u003e loadFromFile() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                String text;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                while ((text \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    String taskType \u003d text.charAt(1) + \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    case \"T\": {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        Task todo \u003d new Todo(text.substring(7));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        if (text.substring(4, 5).equals(\"V\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                            todo.markedAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        tasks.add(todo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    case \"D\": {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        Task deadline \u003d new Deadline(text.substring(7, text.indexOf(\"by\") - 2),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                                fileTaskDateConverter(text.substring(text.indexOf(\"by\") + 4, text.length() - 1)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        if (text.substring(4, 5).equals(\"V\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                            deadline.markedAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        tasks.add(deadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    case \"E\": {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        Task event \u003d new Event(text.substring(7, text.indexOf(\"at\") - 2),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                                fileTaskDateConverter(text.substring(text.indexOf(\"at\") + 4, text.length() - 1)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        if (text.substring(4, 5).equals(\"V\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                            event.markedAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        tasks.add(event);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    default: {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                        throw new DukeException(\"Error occurred, invalid Task type found.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    private Date fileTaskDateConverter(String date) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd \u0027of\u0027 MMMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            Date parseDate \u003d formatter.parse(date);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            return parseDate;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            throw new DukeException(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void saveToFile(ArrayList\u003cTask\u003e listOfInputs) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(f));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            for (Task task : listOfInputs) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                bw.append(task.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "                bw.append(\"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            throw new DukeException(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 93
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        return (isDone ? \"V\" : \"X\"); // return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    public void markedAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 21
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.lang.IndexOutOfBoundsException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e loadedTasks) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.tasks \u003d loadedTasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void add(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    String delete(int index) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            return this.tasks.remove(index).toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            throw new DukeException(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    int size() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    Task get(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void markAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.tasks.get(taskNumber).markedAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 38
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 10
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    String userInput() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        return this.sc.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void printFormat(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        printFormat(\"Hello, I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void printTaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "            System.out.println(counter + \".\" + task.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void printBye() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        printFormat(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void printDone(String task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void printRemoveMessage(String task, int size) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void printAddTaskMessage(String task, int size) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "fatclarence"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    void showLine() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "fatclarence"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "fatclarence": 56
    }
  }
]
