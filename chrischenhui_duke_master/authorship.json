[
  {
    "path": "data/task.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "T | 1 | one thing"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "E | 0 |  | 11/11/11 11:11"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "D | 0 | asd | 22/22/22 33:33"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 3
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        ui.showWelcome(tasks.list);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        new Duke(\"data/task.txt\").run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 40,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super.task \u003d task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void execute(TaskList t, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        t.list.add(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        ui.showAddedTask(task, t.list.size());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 17
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    int n;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    boolean exit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public abstract void execute(TaskList t, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return this.exit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 19
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public DeleteCommand(int n) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super.n \u003d n;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void execute(TaskList t, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            Task deletedTask \u003d t.list.remove(n);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            ui.showDeletedTask(deletedTask, t.list.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            throw new DukeException(\"Please input a number that is within the list\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 22
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public DoneCommand(int n) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super.n \u003d n;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void execute(TaskList t, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            Task doneTask \u003d t.list.get(n).markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            ui.showDoneTask(doneTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            throw new DukeException(\"Please input a number that is within the list\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void execute(TaskList t, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super.exit \u003d true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        ui.showExitMessage(t.list);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        storage.save(t.list);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 13
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void execute(TaskList t, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        ui.printList(t);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        date \u003d new Date(by);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"D | \" + getDoneStatus() + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.toString() + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        date \u003d new Date(at);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"E | \" + getDoneStatus() + \" | \" + description + \" | \" + at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.toString() + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    String getDoneStatus() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"T | \" + getDoneStatus() + \" | \" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 33
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"T | \" + getDoneStatus() + \" | \" + description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 17
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public static Command parse(String s) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String[] strArr \u003d s.split(\" \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String[] temp;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String action \u003d strArr[0].toLowerCase();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        int n;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new ListCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (s.length() \u003c 6) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please write in this format: done X\\nWhere X is a number in the list\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            n \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new DoneCommand(n);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (s.length() \u003c 7) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please write in this format: delete X\\nWhere X is a number in the list\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            n \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new DeleteCommand(n);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (s.length() \u003c 6) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            description \u003d s.substring(5);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new AddCommand(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (s.length() \u003c 10) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            temp \u003d s.split(\"/by\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please specify the deadline time using /by.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            description \u003d temp[0].substring(9).trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            String by \u003d temp[1].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please input a date in this format : dd/MM/yy HH:mm\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new AddCommand(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (s.length() \u003c 7) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            temp \u003d s.split(\"/at\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please specify the event time using /at.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            description \u003d temp[0].substring(6).trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            String at \u003d temp[1].trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please input a date in this format : dd/MM/yy HH:mm\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new AddCommand(task);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 95
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private ArrayList\u003cString\u003e contentList \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            System.out.println(\"You have no task.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            System.out.println(\"Problem occurred while creating a new file in Storage\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            assert (false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public ArrayList\u003cString\u003e load() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            String s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            contentList.add(s);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return contentList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/task.txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            String fileContent \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                fileContent +\u003d t.toWriteFile() + \"\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            fw.write(fileContent);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            System.out.println(\"File does not exist\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 50
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e content) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        for (String s : content) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            loadTask(s);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private void loadTask(String s) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String[] strArr \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String action \u003d strArr[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            t \u003d new ToDo(strArr[2]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            t \u003d new Deadline(strArr[2], strArr[3]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            t \u003d new Event(strArr[2], strArr[3]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            throw new DukeException(\"Previous Task storage is corrupted. Resetting your task . .\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 45
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private String LINES \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"Cannot load previous task\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.print(LINES);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void showExitMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"Saving your current tasks : \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void showWelcome(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(display(\"Hello! I\u0027m Duke\\nFeed me some commands!\\n\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"Leftover tasks from before : \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void showAddedTask(Task t, int n) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                + t"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                + \"\\nNow you have \" + n + \" tasks in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void showDeletedTask(Task t, int n) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                + t"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                + \"\\nNow you have \" + n + \" tasks in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void showDoneTask(Task t) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                + t);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void printList(TaskList t) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            System.out.println(\"Here are the task in your list:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            for (int i \u003d 0; i \u003c t.list.size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                System.out.println(i + 1 + \".\" + t.list.get(i));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            System.out.print(\"Your list is empty.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private String display(String text) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return LINES + text + LINES;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 80
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "  [T]✘ something"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "todo something"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 34
    }
  }
]
