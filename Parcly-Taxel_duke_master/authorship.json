[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    id \"java\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    id \"application\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    id \"checkstyle\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"5.1.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "group \"duke\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "version \"0.5.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    testImplementation \"org.junit.jupiter:junit-jupiter:5.5.1\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    toolVersion \u003d \"8.23\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    archiveVersion \u003d \"0.5.0\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "application {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    mainClassName \u003d \"duke.Main\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "run {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 40
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "rootProject.name \u003d \"duke\""
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 1
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.textual.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * The main class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "class Main {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Initializes a new Duke session."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Main() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            tasks \u003d new TaskList(storage.read());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printError(\"Could not read tasks from disk, starting from empty...\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Starts up the initialized Duke session."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        boolean hasExited \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        while (!hasExited) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                Command c \u003d parser.parseLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                hasExited \u003d c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        new Main().run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 54,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to add a new task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Creates a new AddCommand with the given task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param task The task to add."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param tl The task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param storage The place where tasks will be stored."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tl.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ui.printMessage(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ui.printMessage(\"  \" + task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        int n \u003d tl.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ui.printMessage(String.format(\"Now you have %d task%s in the list.\", n, n \u003d\u003d 1 ? \"\" : \"s\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            storage.write(tl.export());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printError(\"Error writing tasks to file\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 44
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Abstract class representing individual commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    boolean exit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Determines whether this command is exiting, i.e. whether the program should exit"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * after executing this command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return Whether this command is exiting."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param tl The task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param storage The place where tasks will be stored."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public abstract void execute(TaskList tl, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to delete an item from the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private final int ind;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Creates a new DeleteCommand with the specified index."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param s The index of the task to delete, where the first task is 1."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public DeleteCommand(String s) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            this.ind \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"Task index for the delete command must be an integer.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param tl The task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param storage The place where tasks will be stored."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            Task t \u003d tl.delete(ind);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printMessage(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printMessage(\"  \" + t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            int n \u003d tl.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printMessage(String.format(\"Now you have %d task%s in the list.\", n, n \u003d\u003d 1 ? \"\" : \"s\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printError(\"Task index must be between 1 and \" + tl.size() + \".\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            storage.write(tl.export());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printError(\"Error writing tasks to file\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 52
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to mark an item in the task list as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private final int ind;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Creates a new DoneCommand with the specified index."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param s The index of the task to mark as done, where the first task is 1."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public DoneCommand(String s) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            this.ind \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"Task index for the done command must be an integer.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param tl The task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param storage The place where tasks will be stored."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            tl.markDone(ind);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printMessage(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printMessage(\"  \" + tl.get(ind));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printError(\"Task index must be between 1 and \" + tl.size() + \".\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            storage.write(tl.export());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printError(\"Error writing tasks to file\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to exit Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Creates a new ExitCommand. In particular, sets the exit variable of its superclass"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * to true so the application can exit."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        exit \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param tl The task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param storage The place where tasks will be stored."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ui.printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 29
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to find items in the task list matching some keyword,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * and to display those items."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Creates a new FindCommand with the specified keyword."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param keyword The keyword that is being searched for."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param tl The task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param storage The place where tasks will be stored."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ui.printMessage(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTasks \u003d tl.filter(keyword);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d filteredTasks.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printMessage(i + \". \" + filteredTasks.get(i - 1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 39
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a command to list items in a task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Executes this command on the given task list and user interface."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param tl The task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param ui The user interface displaying events on the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param storage The place where tasks will be stored."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void execute(TaskList tl, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ui.printMessage(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tl.size(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            ui.printMessage(i + \". \" + tl.get(i));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 24
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class that handles reading and writing tasks from and to disk."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private final String path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Reads tasks from this instance\u0027s path, one task per line."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return An ArrayList of strings, each string representing a task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @throws FileNotFoundException If the file does not exist or is otherwise inaccessible."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public ArrayList\u003cString\u003e read() throws FileNotFoundException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ArrayList\u003cString\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        File f \u003d new File(path);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            out.add(sc.nextLine());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Writes the given string representations of tasks to this instance\u0027s path."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param lines The lines to be written, produced by TaskList\u0027s export() method."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @throws IOException If an error occurs while writing the tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void write(ArrayList\u003cString\u003e lines) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        FileWriter writer \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        for (String line: lines) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            writer.write(line + \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a deadline, a task to be completed by a certain time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private final LocalDateTime by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final Pattern PAT \u003d Pattern.compile(\"(.+) /by (.+)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Initializes a Deadline from its description and its time."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param desc A description of the task which is under deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param by The time by which this task must be done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    Deadline(String desc, LocalDateTime by) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Parses the given line and returns a Deadline constructed from it."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param line The parsed line, which should contain \"/by\" in its middle."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public static Deadline parse(String line) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (line.isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Matcher m \u003d PAT.matcher(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (!m.matches()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"Deadline description must include /by surrounded by spaces.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new Deadline(m.group(1), LocalDateTime.parse(m.group(2), inputFormatter));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"Time must be in the format day#/month#/yyyy hhmm.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns a string representation of this Deadline."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The desired string representation."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(displayFormatter) + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Exports this Deadline for saving to disk."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return A string representation of this task containing the type marker D and a time."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String export() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"D|\" + super.export() + \"|\" + by.format(inputFormatter);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 70
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing an event that will occur at or around a specified time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private final LocalDateTime at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final Pattern PAT \u003d Pattern.compile(\"(.+) /at (.+)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"d MMMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Initializes an Event from its description and its time."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param desc A description of the event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param at The time at which this event happens."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    Event(String desc, LocalDateTime at) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Parses the given line and returns an Event constructed from it."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param line The parsed line, which should contain \"/at\" in its middle."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public static Event parse(String line) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (line.isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Matcher m \u003d PAT.matcher(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (!m.matches()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"Event description must include /at surrounded by spaces.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new Event(m.group(1), LocalDateTime.parse(m.group(2), inputFormatter));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"Time must be in the format day#/month#/yyyy hhmm.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns a string representation of this Event."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The desired string representation."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(displayFormatter) + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Exports this Event for saving to disk."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return A string representation of this task containing the type marker E and a time."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String export() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"E|\" + super.export() + \"|\" + at.format(inputFormatter);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 70
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * A generic task, which can be marked as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private final String desc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Initializes a task not yet done with the given description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param desc A description of this task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns the description associated with this task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return This task\u0027s description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Gets a Unicode character representing whether this task is done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return U+2713 (tick) if this task is done, U+2718 (cross) otherwise."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private String getDoneChar() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return done ? \"✓\" : \"✘\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns a string representation of this task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The desired string representation."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        String boxedChar \u003d \"[\" + getDoneChar() + \"]\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return boxedChar + \" \" + desc;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Exports this task in a short, ASCII-friendly format. Suitable for interchange"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * with other applications or just viewing bare."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return A string representation of this task containing its done status (0 or 1)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *     and its description."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String export() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return (done ? \"1|\" : \"0|\") + desc;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 66
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * A class that holds a list of tasks that may be added to, removed or"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * marked as done. This list is indexed starting from 1."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private static final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Initializes an empty task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Imports the given ArrayList of Tasks and initializes this instance with them."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param stringTasks A list of tasks in exported format to be imported."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e stringTasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        for (String stringTask: stringTasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            String[] fields \u003d stringTask.split(\"\\\\|\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            switch (fields[0]) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                t \u003d new Todo(fields[2]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                t \u003d new Event(fields[2], LocalDateTime.parse(fields[3], inputFormatter));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                t \u003d new Deadline(fields[2], LocalDateTime.parse(fields[3], inputFormatter));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                t \u003d new Todo(\"nothing\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            if (fields[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                t.markDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns the number of tasks in this list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @returns The size of this instance\u0027s list, which is zero if and only if"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *     said list is empty."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Adds an undone task to the end of the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param t The task to be added."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Gets the task at one-indexed position i in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * \u003ccode\u003eget()\u003c/code\u003e, \u003ccode\u003emarkDone()\u003c/code\u003e and \u003ccode\u003eremoveTask()\u003c/code\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * all take an index i starting from 1, raising an exception if that index is invalid."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param i The index of the task to be retrieved, starting from 1."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The task at position i."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @throws IndexOutOfBoundsException If position i is not in the list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public Task get(int i) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return tasks.get(i - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Marks the task at index i as done."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @see #get(int)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void markDone(int i) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tasks.get(i - 1).markDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Removes the task at index i and returns it."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @see #get(int)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public Task delete(int i) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return tasks.remove(i - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Exports the tasks in this list into an ArrayList of strings, which can then"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * be written to disk."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return An ArrayList of strings representing this list\u0027s tasks."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public ArrayList\u003cString\u003e export() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ArrayList\u003cString\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        for (Task t: tasks) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            out.add(t.export());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Filters this instance\u0027s list for those tasks matching a given keyword."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param keyword The keyword being searched for."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return A smaller or same-size ArrayList containing those tasks with the given keyword."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public ArrayList\u003cTask\u003e filter(String keyword) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        ArrayList\u003cTask\u003e out \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            if (task.getDesc().contains(keyword)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                out.add(task);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 133
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class representing a task to be done, but not at any particular time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Initializes a Todo from its description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param desc What is to be done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    Todo(String desc) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Parses the given line and returns a Todo constructed from it."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param line The parsed line."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public static Todo parse(String line) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        if (line.isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return new Todo(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Returns a string representation of this Todo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The desired string representation."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Exports this Todo for saving to disk."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return A string representation of this task containing the type marker T."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String export() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return \"T|\" + super.export() + \"|\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 47
    }
  },
  {
    "path": "src/main/java/duke/textual/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.textual;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Parser for commands entered by the Duke user. It reads from standard input and"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * returns Command objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Parses a command from its two parts and returns a Command object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param cmd The command\u0027s first word, which dictates the rest of the"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *            command\u0027s structure."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param data The data associated with the command, which may be the empty string."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The corresponding Command object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private Command parse(String cmd, String data) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new DoneCommand(data);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new DeleteCommand(data);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new AddCommand(Todo.parse(data));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new AddCommand(Event.parse(data));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new AddCommand(Deadline.parse(data));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            return new FindCommand(data);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            throw new IllegalArgumentException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Scans the next line from standard input, returning a Command. This removes the dependency"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * on the Scanner class from other classes using this class."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @return The Command object corresponding to the scanned line."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public Command parseLine() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        String cmd \u003d sc.next();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        String data \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return parse(cmd, data);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 65
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * Class that handles messages shown to the user of this application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * It does not need to be instantiated with any tasks; these are passed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " * as arguments to its methods."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Prints a message line to the user, indented four spaces to distinguish"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * it from input commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param msg The message to print."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void printMessage(String msg) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        System.out.println(\"    \" + msg);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Prints a welcome message to the user, which happens at startup."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        printMessage(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        printMessage(\"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * Prints an error message with the given content."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     * @param msg The specifics of the error."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void printError(String msg) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        printMessage(\"☹ OOPS!!! \" + msg);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 35
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    void testTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Todo t1 \u003d Todo.parse(\"dig a trench from the fence to lunchtime\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(t1.toString(), \"[T][✘] dig a trench from the fence to lunchtime\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Event t2 \u003d Event.parse(\"Beijing Olympics Opening Ceremony /at 8/8/2008 2000\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        t2.markDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(t2.toString(), \"[E][✓] Beijing Olympics Opening Ceremony \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "                + \"(at: 8 August 2008 20:00)\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Deadline t3 \u003d Deadline.parse(\"my birth /by 4/12/1998 1251\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(t3.export(), \"D|0|my birth|4/12/1998 1251\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Todo t4 \u003d Todo.parse(\"nothing\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        t4.markDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(t4.export(), \"T|1|nothing|\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertThrows(IllegalArgumentException.class, () -\u003e Deadline.parse(\"heat death /by eternity\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    void testTaskList() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        for (int i \u003d 0; i \u003c 5; i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "            tasks.add(new TaskStub());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(tasks.size(), 5);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tasks.markDone(4);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        tasks.delete(3);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(tasks.get(3).toString(), \"done task\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(tasks.get(4).export(), \"undone export\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e tasks.get(5));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    void testCommand() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        StorageStub storageStub \u003d new StorageStub();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        UiStub uiStub \u003d new UiStub();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        TaskListStub tasksStub \u003d new TaskListStub();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        Command c \u003d new AddCommand(new TaskStub());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        c.execute(tasksStub, uiStub, storageStub);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(tasksStub.size(), 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        c \u003d new DeleteCommand(\"1\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        c.execute(tasksStub, uiStub, storageStub);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        assertEquals(tasksStub.size(), 0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 65
    }
  },
  {
    "path": "src/test/java/duke/StorageStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class StorageStub extends Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    StorageStub() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        super(\"no path\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public ArrayList\u003cString\u003e read() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void write(ArrayList\u003cString\u003e lines) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 19
    }
  },
  {
    "path": "src/test/java/duke/TaskListStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "public class TaskListStub extends TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    private boolean isEmpty \u003d true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        isEmpty \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public Task delete(int i) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        isEmpty \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return new TaskStub();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return isEmpty ? 0 : 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 24
    }
  },
  {
    "path": "src/test/java/duke/TaskStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "class TaskStub extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    TaskStub() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return done ? \"done task\" : \"undone task\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public String export() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        return done ? \"done export\" : \"undone export\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 19
    }
  },
  {
    "path": "src/test/java/duke/UiStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "class UiStub extends Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    public void printMessage(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "        System.out.println(\"ok got it\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Parcly-Taxel"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Parcly-Taxel": 11
    }
  }
]
