[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    mainClassName \u003d \"Duke.java\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 1,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * abstract method to handle user input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of Tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws DukeException if user input does not follow input format."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws IOException named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    abstract void execute(TaskList tasks, String input, Storage storage) throws"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            DukeException, IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * abstract method to determine if command is an exit command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a boolean."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * calls different classes to process user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                parser \u003d new Parser(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                Command c \u003d parser.parse();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                c.execute(tasks, fullCommand, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        new Duke(\"/Users/sheryl/CS2103/duke/src/main/java/Duke.txt\").run();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean done;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a string which represents the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a String."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * to set task as done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a string which is the month corresponding to int of month in calendar."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param c to get integer representing month."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return the string which represents month."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String getMonth(Calendar c) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        if (c.get(Calendar.MONTH) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"January\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (c.get(Calendar.MONTH) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"February\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (c.get(Calendar.MONTH) \u003d\u003d 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"March\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (c.get(Calendar.MONTH) \u003d\u003d 3) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"April\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (c.get(Calendar.MONTH) \u003d\u003d 4) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"May\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (c.get(Calendar.MONTH) \u003d\u003d 5) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"June\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (c.get(Calendar.MONTH) \u003d\u003d 6) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"July\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (c.get(Calendar.MONTH) \u003d\u003d 7) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"August\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (c.get(Calendar.MONTH) \u003d\u003d 8) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"September\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (c.get(Calendar.MONTH) \u003d\u003d 9) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"October\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (c.get(Calendar.MONTH) \u003d\u003d 10) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"November\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"December\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns string representation of task object."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return string."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"|1| \" + task;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return \"|0| \" + task;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "class Todo extends Task {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns string representation of task object."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return string."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return \"T\" + super.toString();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    Calendar by;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Deadline(String task, Calendar by) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns string representation of task object."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return string."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return \"D\" + super.toString() + \" | \" + by.get(Calendar.DAY_OF_MONTH) + \" \""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + getMonth(by) + \" \" + by.get(Calendar.YEAR) + \" \""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                    + by.get(Calendar.HOUR_OF_DAY)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                        + String.format(\"%02d\", by.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    Calendar from;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    Calendar to;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Event(String task, Calendar from, Calendar to) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.from \u003d from;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.to \u003d to;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns string representation of task object."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return string."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return \"E\" + super.toString() + \" | \" + from.get(Calendar.DAY_OF_MONTH) + \" \""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + getMonth(from) + \" \" + from.get(Calendar.YEAR) + \" \""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + from.get(Calendar.HOUR_OF_DAY)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + String.format(\"%02d\", from.get(Calendar.MINUTE)) + \"-\""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + to.get(Calendar.HOUR_OF_DAY)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                + String.format(\"%02d\", to.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 184,
      "-": 6
    }
  },
  {
    "path": "src/main/java/Duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "D|0|  return book  | 2 December 2019 1800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "T|0| read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "E|0| borrow book | 20 January 2018 1200-1600"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "T|0| attend meeting"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 3
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a Command which handles user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a Command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws DukeException if user input is incorrect."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Command parse() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] line \u003d input.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        if (line[0].equals(\"todo\") || line[0].equals(\"deadline\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            || line[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new addCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new doneCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new deleteCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new listCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new exitCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return new findCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 35
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns string which represents file path."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * adds string in param to file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param textToAppend string to be added to the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws IOException if named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * does not exist but cannot be created, or cannot be opened for any other reason"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        fw.write(textToAppend + \"\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * rewrites the whole file according to new task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param list list of tasks to be written into file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws IOException named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void rewriteFile(TaskList list) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String text \u003d list.get(i).toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            fw.write(text + \"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns an integer representing the month according to the calendar."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param month string representing month."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return integer corresponding to month string."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public int convertToInt(String month) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        if (month.equals(\"January\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (month.equals(\"February\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (month.equals(\"March\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (month.equals(\"April\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (month.equals(\"May\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 4;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (month.equals(\"June\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 5;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (month.equals(\"July\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 6;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (month.equals(\"August\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 7;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (month.equals(\"September\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 8;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (month.equals(\"October\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 9;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        else if (month.equals(\"November\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 10;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            return 11;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a new Calendar object according to data from input string."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input representing user input."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return Calendar object."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Calendar deadlineConvertToCalendar(String input) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] findDate \u003d input.split(\" \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int day \u003d Integer.parseInt(findDate[0]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int month \u003d convertToInt(findDate[1]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int year \u003d Integer.parseInt(findDate[2]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int hour \u003d Integer.parseInt(findDate[3].substring(0, 2));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int min \u003d Integer.parseInt(findDate[3].substring(2));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        calendar.set(year, month, day, hour, min);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return calendar;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a new ArrayList of Calendar objects."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return Arraylist with 2 Calendar objects inside."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public ArrayList eventConvertToCalendar(String input) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        ArrayList\u003cCalendar\u003e calendars \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] findTo \u003d input.split(\"-\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Calendar from \u003d deadlineConvertToCalendar(findTo[0]);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        calendars.add(from);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int toHour \u003d Integer.parseInt(findTo[1].substring(0, 2));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int toMin \u003d Integer.parseInt(findTo[1].substring(2));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Calendar to \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        to.set(Calendar.HOUR_OF_DAY, toHour);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        to.set(Calendar.MINUTE, toMin);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        calendars.add(to);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return calendars;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a TaskList to add tasks according to content of file."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return TaskList object containing tasks from file."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws FileNotFoundException if file cannot be found."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public TaskList load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        TaskList inputs \u003d new TaskList();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        filePath \u003d \"/Users/sheryl/CS2103/duke/src/main/java/Duke.txt\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String line \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String[] words \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (words[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                Todo task \u003d new Todo(words[2]);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                inputs.add(task);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } else if (words[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                Deadline task \u003d new Deadline(words[2], deadlineConvertToCalendar(words[3].substring(1)));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                inputs.add(task);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } else if (words[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                ArrayList\u003cCalendar\u003e calendars \u003d eventConvertToCalendar(words[3].substring(1));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                Event task \u003d new Event(words[2], calendars.get(0), calendars.get(1));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                inputs.add(task);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return inputs;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 157
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * adds a task to the TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param task Task object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a task of that index."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param index integer representing the index."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a Task object in the TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns an integer representing size of TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return an integer which is the size."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * removes a Task from the TaskList"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param index index of Task which is to be removed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 42
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * Returns a string which is the next line read by the scanner."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return String which is next line of user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * prints error statement."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param error String representing error message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * prints welcome message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 34
    }
  },
  {
    "path": "src/main/java/addCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class addCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a Calendar object using values from input string."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input string of user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return Calendar object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private Calendar deadlineConvertToCalendar(String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String findDate[] \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int day \u003d Integer.parseInt(findDate[0]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int month \u003d Integer.parseInt(findDate[1]) - 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String findTime[] \u003d findDate[2].split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int year \u003d Integer.parseInt(findTime[0]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int hour \u003d Integer.parseInt(findTime[1].substring(0, 2));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int minute \u003d Integer.parseInt(findTime[1].substring(2));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        calendar.set(year, month, day, hour, minute);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return calendar;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns an arraylist containing Calendar objects according to input string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return an arraylist containing 2 Calendar objects representing to and from timings."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    private ArrayList eventConvertToCalendar(String input) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        ArrayList\u003cCalendar\u003e calendars \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] findTo \u003d input.split(\"-\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Calendar from \u003d deadlineConvertToCalendar(findTo[0]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        calendars.add(from);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int toHour \u003d Integer.parseInt(findTo[1].substring(0, 2));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int toMin \u003d Integer.parseInt(findTo[1].substring(2));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Calendar to \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        to.set(Calendar.HOUR_OF_DAY, toHour);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        to.set(Calendar.MINUTE, toMin);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        calendars.add(to);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return calendars;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * handles user\u0027s request to add a task to the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList containing tasks to add new tasks to."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws DukeException if user input does not fit required input standard."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws IOException named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * does not exist but cannot be created, or cannot be opened for any other reason"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    void execute(TaskList tasks, String input, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] line \u003d input.split(\" \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        if (line[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (line.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String todoTask \u003d line[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            for (int i \u003d 2; i \u003c line.length; i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                todoTask +\u003d \" \" + line[i];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            Todo newTodo \u003d new Todo(todoTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            tasks.add(newTodo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            storage.appendToFile(newTodo.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            System.out.println(newTodo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (line.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String findDeadline[] \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String findTask[] \u003d findDeadline[0].split(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String findDate[] \u003d input.split(\"by \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            Calendar calendar \u003d deadlineConvertToCalendar(findDate[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String deadlineTask \u003d findTask[1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            for (int i \u003d 2; i \u003c findTask.length; i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                deadlineTask +\u003d \" \" + findTask[i];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            Deadline deadline \u003d new Deadline(deadlineTask, calendar);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            tasks.add(deadline);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            storage.appendToFile(deadline.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            System.out.println(deadline);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        } else if (line[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (line.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String findTime[] \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String findDate[] \u003d input.split(\"at \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            ArrayList\u003cCalendar\u003e calendars \u003d eventConvertToCalendar(findDate[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String findTask[] \u003d findTime[0].split(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            String eventTask \u003d findTask[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            for (int i \u003d 2; i \u003c findTask.length; i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                eventTask +\u003d \" \" + findTask[i];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            Event event \u003d new Event(eventTask, calendars.get(0), calendars.get(1));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            tasks.add(event);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            storage.appendToFile(event.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            System.out.println(event);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a boolean representing if this is an exit command,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 115
    }
  },
  {
    "path": "src/main/java/deleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class deleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * handles user\u0027s request to delete a task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user\u0027s input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws IOException named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * does not exist but cannot be created, or cannot be opened for any other reason"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    void execute(TaskList tasks, String input, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] line \u003d input.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        int index \u003d Integer.parseInt(line[1]) - 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(tasks.get(index));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        storage.rewriteFile(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a boolean representing if this command is an exit command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 29
    }
  },
  {
    "path": "src/main/java/doneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class doneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * handles user\u0027s request to mark a task as done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @throws IOException named file exists but is a directory rather than a regular file,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * does not exist but cannot be created, or cannot be opened for any other reason."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    void execute(TaskList tasks, String input, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] line \u003d input.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        Task done \u003d tasks.get(Integer.parseInt(line[1]) - 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        done.doTask();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        storage.rewriteFile(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(done);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a boolean to determine if this command is an exit command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a boolean."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 28
    }
  },
  {
    "path": "src/main/java/exitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class exitCommand  extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * handles user\u0027s request to exit."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    void execute(TaskList tasks, String input, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a boolean representing if this command is an exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a boolean."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 19
    }
  },
  {
    "path": "src/main/java/findCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class findCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    void execute(TaskList tasks, String input, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String[] line \u003d input.split(\" \");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        String keyword \u003d line[1];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            Task curr \u003d tasks.get(i);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            if (curr.getTask().contains(keyword)) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                System.out.println(curr);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 21
    }
  },
  {
    "path": "src/main/java/listCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class listCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * executes user\u0027s request of displaying list."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param tasks TaskList of Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param input String of user input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @param storage Storage object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    void execute(TaskList tasks, String input, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        System.out.println(\"Here are the tasks in your list\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            Task curr \u003d tasks.get(i);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            int num \u003d i + 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "            System.out.println(num + \". \" + curr);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * returns a boolean to determine if this command is an exit command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     * @return a boolean."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 24
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void testGetFilePath() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        storage \u003d new Storage(\"/Users/sheryl/CS2103/duke/src/main/java/Storage.java\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assertEquals(\"/Users/sheryl/CS2103/duke/src/main/java/Storage.java\", storage.getFilePath());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void testConvertToInt() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        storage \u003d new Storage(\"/Users/sheryl/CS2103/duke/src/main/java/Storage.java\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assertEquals(1, storage.convertToInt(\"February\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 50
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    public void testSize() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "        assertEquals(0, list.size());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheryltay28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheryltay28": 10
    }
  }
]
