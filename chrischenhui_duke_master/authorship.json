[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "test {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "run {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    //mainClassName \u003d \"java/Duke\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "//    mainClassName \u003d \"src/main/java/Duke.java\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    mainClassName \u003d \"Launcher\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 34,
      "-": 15
    }
  },
  {
    "path": "data/task.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "T | 0 | something"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "D | 0 | asd | 11/11/11 11:11"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 2
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Encapsulates the response in a DialogBox."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param text The message for Duke."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param img The image of Duke."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @return DialogBox object for duke response."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 66
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Sets up Storage, Ui and Parser for Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Processes duke after set up."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        ui.showWelcome(tasks.tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Returns a message generated based on user input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @return Message in a string."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String doggoResponse \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            doggoResponse \u003d Parser.parse(input).execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            doggoResponse \u003d e.getMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"Doggo : \\n\" + doggoResponse;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 65,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/caticon.jpeg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dogicon.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private void handleUserInput() throws InterruptedException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        if (response.substring(9, 37).equals(\"Saving your current tasks : \")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            quitJavaFX();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private void quitJavaFX() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 59
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates an AddCommand. It adds tasks to user\u0027s list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super.task \u003d task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Adds a single task to user\u0027s list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param t TaskList to be appended."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param storage Storage to read and write files."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String execute(TaskList t, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        t.tasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        storage.save(t.tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return ui.showAddedTask(task, t.tasks.size());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 28
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a generic command class, to be inherited by specific commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    int pos;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    boolean exit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public abstract String execute(TaskList t, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return this.exit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a DeleteCommand. It removes user\u0027s task from the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public DeleteCommand(int n) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super.pos \u003d n;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Deletes a task from user list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param t TaskList to be appended."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param storage Storage to read and write files."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @throws DukeException If user input a number that is not within TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String execute(TaskList t, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            Task deletedTask \u003d t.tasks.remove(pos);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            storage.save(t.tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            return ui.showDeletedTask(deletedTask, t.tasks.size());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            throw new DukeException(\"Please input a number that is within the list\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a DoneCommand. It saves user\u0027s task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public DoneCommand(int n) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super.pos \u003d n;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Saves user\u0027s task as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param t TaskList to be appended."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param storage Storage to read and write files."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @throws DukeException If user input a number that is not within TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String execute(TaskList t, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            Task doneTask \u003d t.tasks.get(pos).markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            storage.save(t.tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            return ui.showDoneTask(doneTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            throw new DukeException(\"Please input a number that is within the list\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates an ExitCommand. It ends the programme and stores user\u0027s tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Saves the tasks into storage and ends the programme."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param t TaskList to be appended."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param storage Storage to read and write files."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String execute(TaskList t, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        storage.save(t.tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super.exit \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return ui.showExitMessage(t.tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 23
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a FindCommand. It search for tasks with given keyword."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Finds the tasks with the given keyword."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param t TaskList to be appended."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param storage Storage to read and write files."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String execute(TaskList t, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        ArrayList\u003cTask\u003e foundTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        for (Task task : t.tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            String description \u003d task.getDescription().toLowerCase();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                foundTaskList.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return ui.showFoundTask(foundTaskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a ListCommand. It lists all tasks for users."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String execute(TaskList t, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return ui.printList(t);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a DukeException."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 10
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a Deadline Task. Description and timing required."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Creates a Deadline Task. Description and timing required."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param description Description of the task, in String."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param by Timing of the task, in String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        date \u003d new Date(by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"D | \" + getDoneStatus() + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.toString() + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates an Event Task. Description and timing required."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Creates an Event Task. Description and timing required."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param description Description of the task, in String."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param at Timing of the task, in String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        date \u003d new Date(at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"E | \" + getDoneStatus() + \" | \" + description + \" | \" + at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.toString() + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return (isDone ? \"[Y]\" : \"[N]\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    String getDoneStatus() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"T | \" + getDoneStatus() + \" | \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 40
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a ToDo Task. Description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"T | \" + getDoneStatus() + \" | \" + description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 20
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a Parser file to parse user input into Commands understood by the programme."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Parses user input into Commands understood by the programme."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param s Input string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @return A specific Command which will be executed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @throws DukeException If an input is not formatted properly."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public static Command parse(String s) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String[] strArr \u003d s.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String[] temp;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String action \u003d strArr[0].toLowerCase();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String keyword;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        int n;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (s.length() \u003c 6) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please write in this format: done X\\nWhere X is a number in the list\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            n \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new DoneCommand(n);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (s.length() \u003c 7) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please write in this format: delete X\\nWhere X is a number in the list\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            n \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new DeleteCommand(n);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (s.length() \u003c 6) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please write in this format: find X\\nWhere X is the string to find\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            keyword \u003d s.substring(5).toLowerCase();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new FindCommand(keyword);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (s.length() \u003c 6) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Wof! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            description \u003d s.substring(5);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new AddCommand(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (s.length() \u003c 10) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Wof! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            temp \u003d s.split(\"/by\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please specify the deadline time using /by.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            description \u003d temp[0].substring(9).trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            String by \u003d temp[1].trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please input a date in this format : dd/MM/yy HH:mm\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new AddCommand(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (s.length() \u003c 7) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Wof! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            temp \u003d s.split(\"/at\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (temp.length \u003c 2) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please specify the event time using /at.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            description \u003d temp[0].substring(6).trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            String at \u003d temp[1].trim();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                throw new DukeException(\"Please input a date in this format : dd/MM/yy HH:mm\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new AddCommand(task);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            throw new DukeException(\"Wof?\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 120
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a Storage class to read and write user\u0027s tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private ArrayList\u003cString\u003e contentList \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private static final String DUKE_DATA_DIR \u003d System.getProperty(\"user.home\") + File.separator + \"data\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private static final String DUKE_DATA_PATH \u003d DUKE_DATA_DIR + File.separator + \"task.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Creates a Storage class to read and write user\u0027s tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            if (!Paths.get(DUKE_DATA_PATH).toFile().exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                Files.createDirectory(Paths.get(DUKE_DATA_DIR));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                Files.createFile(Paths.get(DUKE_DATA_PATH));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            File f \u003d new File(DUKE_DATA_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            System.out.println(\"You have no task.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            System.out.println(\"Problem occurred while creating a new file in Storage\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            assert (false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Reads user\u0027s task from disk."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @return ArrayList of String"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public ArrayList\u003cString\u003e load() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                String s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                contentList.add(s);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            return contentList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            System.out.println(\"No task were detected\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            return contentList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Saves user\u0027s task into disk."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param list ArrayList of Task object to be read."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            FileWriter fw \u003d new FileWriter(DUKE_DATA_PATH);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            String fileContent \u003d \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                fileContent +\u003d t.toWriteFile() + \"\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            fw.write(fileContent);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            System.out.println(\"File does not exist\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 79
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a TaskList to store Task objects."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Creates a TaskList to store Task objects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param content Input an ArrayList of String for TaskList to read inputs line by line"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @throws DukeException If input is not formatted properly."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e content) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        for (String s : content) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            loadTask(s);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private void loadTask(String s) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String[] strArr \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String action \u003d strArr[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            t \u003d new ToDo(strArr[2]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            t \u003d new Deadline(strArr[2], strArr[3]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            t \u003d new Event(strArr[2], strArr[3]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            throw new DukeException(\"Previous Task storage is corrupted. Resetting your task . .\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 54
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " * Creates a UI class to manage UI for users."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    private static final String LINES \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Prints loading Error."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"Cannot load previous task\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Prints the UI for ending the programme."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String showExitMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String message \u003d \"Saving your current tasks : \\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            message +\u003d t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        message +\u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Prints a welcome message for users."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String showWelcome(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String message \u003d LINES;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        message +\u003d \"Hello! I\u0027m Duke\\nFeed me some commands!\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        message +\u003d LINES;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        message +\u003d \"Leftover tasks from before : \\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            message +\u003d t + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        message +\u003d LINES;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Prints the UI for adding a task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param t Task that is added."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param n Number of tasks in the TaskList."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String showAddedTask(Task t, int n) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                + t"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                + \"\\nNow you have \" + n + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Prints the UI for deleting a task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param t Task that is deleted."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param n The index of the task that is deleted in TaskList."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String showDeletedTask(Task t, int n) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n  \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                + t"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                + \"\\nNow you have \" + n + \" tasks in the list.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Prints the UI for completing a task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param t Task that is completed."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String showDoneTask(Task t) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + t;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Prints the tasks within TaskList."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param list TaskList object."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String printList(TaskList list) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String message \u003d \"Here are the task in your list:\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        for (int i \u003d 0; i \u003c list.tasks.size(); i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            message +\u003d i + 1 + \".\" + list.tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * Prints the tasks that contains the given keyword."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     * @param foundTaskList TaskList with filtered keyword."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    public String showFoundTask(ArrayList\u003cTask\u003e foundTaskList) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        String message \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        for (int i \u003d 0; i \u003c foundTaskList.size(); i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            message +\u003d i + 1 + \".\" + foundTaskList.get(i);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 112
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?import javafx.scene.Group?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "      \u003cGroup\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "              \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "      \u003c/Group\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"77.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"294.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"295.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"105.0\" text\u003d\"Ask Doggo\" textAlignment\u003d\"JUSTIFY\" textOverrun\u003d\"CLIP\" wrapText\u003d\"true\" AnchorPane.leftAnchor\u003d\"295.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            \u003cFont size\u003d\"16.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 23
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    void deadline_formattedInput() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"DeadlineTest starts\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"testing\", \"11/11/11 11:11\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        assertEquals(\"[D][N] testing (by: Fri Nov 11 11:11:00 SGT 2011)\", deadline.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        assertEquals(\"D | 0 | testing | 11/11/11 11:11\", deadline.toWriteFile());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"DeadlineTest Pass\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 15
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"DummyTest starts\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"DummyTest Pass\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 12
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    void eventTest_formattedInput() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"EventTest starts\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        Event event \u003d new Event(\"testing\", \"11/11/11 11:11\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        assertEquals(\"[E][N] testing (at: Fri Nov 11 11:11:00 SGT 2011)\", event.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        assertEquals(\"E | 0 | testing | 11/11/11 11:11\", event.toWriteFile());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"EventTest Pass\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 15
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    void toDoTest_formattedInput() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"TodoTest starts\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        ToDo todo \u003d new ToDo(\"testing\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        assertEquals(\"[T][N] testing\", todo.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        assertEquals(\"T | 0 | testing\", todo.toWriteFile());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "        System.out.println(\"TodoTest Pass\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 17
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "  [T]✘ something"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "todo something"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrischenhui"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "chrischenhui": 34
    }
  }
]
