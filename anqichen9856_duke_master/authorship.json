[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 22,
      "-": 19
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "T | ✓ | read books"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "D | ✓ | submit proposal | weekend"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "E | ✓ | return books | tomorrow 5pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "T | ✘ | do sports"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "E | ✓ | group meeting | Thursday 2pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "T | ✘ | watch movie"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "T | ✓ | go to USS"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "T | ✓ | shopping"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "T | ✘ | play badminton"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "D | ✘ | individual project | 28/08/2019 2359"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "T | ✘ | team project"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 11
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents \u003ccode\u003eDuke\u003c/code\u003e, a Personal Assistant Chatbot that helps a "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * person to keep track of various things."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * A \u003ccode\u003eStorage\u003c/code\u003e object that deals with loading tasks from a local"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * file and saving tasks in the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * A \u003ccode\u003eTaskList\u003c/code\u003e object that deals with operations on tasks in "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /** A \u003ccode\u003eUi\u003c/code\u003e object that deals with interactions with the user. */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eDuke\u003c/code\u003e object with a specific file path."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Initializes user interaction system and loads tasks from the file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param filePath A string that represents the path of the local file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          used for storing tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Runs the \u003ccode\u003eDuke\u003c/code\u003e program that continuously reads, parses and "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * executes user input until a \"bye\" message is received."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Kickstarts the \u003ccode\u003eDuke\u003c/code\u003e program by passing in a specific file"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * path."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param args The command line arguments."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 76,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a command to add a task. The \u003ccode\u003eAddCommand\u003c/code\u003e class "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * inherits from the \u003ccode\u003eCommand\u003c/code\u003e class to represent user instruction "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * to add a new \u003ccode\u003eToDo\u003c/code\u003e, \u003ccode\u003eDeadline\u003c/code\u003e or \u003ccode\u003eEvent\u003c/code\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /** The task to be added, as specified by this command. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eAddCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param task Specifies the task to be added."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Indicates whether this command tells Duke to exit."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          otherwise. Since the \u003ccode\u003eAddCommand\u003c/code\u003e is not a \"bye\", "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          the return value is set to false."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Executes the command with respect to tasks (modifying the task list), "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * UI, and storage (saving tasks in a file in hard disk)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param tasks The task list where tasks are stored."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param ui The user interface that interacts with user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e object that handles task "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *      storage in local file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        ui.addedTask(task, tasks.getSize());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 57
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a command inputted by user. \u003ccode\u003eCommand\u003c/code\u003e is an abstract"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * class that can not be instantiated, but it has many child classes to "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * represent different types of commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Executes the command with respect to tasks (modifying the task list), "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * UI, and storage (saving tasks in a file in hard disk)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param tasks The task list where tasks are stored."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param ui The user interface that interacts with user input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e object that handles task "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *      storage in local file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @throws DukeException If an exception occurs during execution of the "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *      command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Indicates whether this command tells Duke to exit."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          otherwise.      "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a command to delete a task. The \u003ccode\u003eDeleteCommand\u003c/code\u003e class "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * inherits from the \u003ccode\u003eCommand\u003c/code\u003e class to represent user instruction "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * to delete an existing task from the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /** The index of the task to be deleted, as specifed by this command. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private int taskId;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eDeleteCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param taskId Specifies the index of the task to be deleted."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public DeleteCommand(int taskId) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Indicates whether this command tells Duke to exit."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          otherwise. Since the \u003ccode\u003eDeleteCommand\u003c/code\u003e is not a \"bye\", "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          the return value is set to false."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Executes the command with respect to tasks (modifying the task list), "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * UI, and storage (saving tasks in a file in hard disk)."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param tasks The task list where tasks are stored."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param ui The user interface that interacts with user input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e object that handles task "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *      storage in local file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        Task t \u003d tasks.getTask(taskId - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        tasks.removeTask(taskId - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        ui.removedTask(t, tasks.getSize());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 58
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a command to mark a task as done. The \u003ccode\u003eDoneCommand\u003c/code\u003e "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * class inherits from the \u003ccode\u003eCommand\u003c/code\u003e class to represent user "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * instruction to mark an existing task from the task list as completed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /** The index of the task to be marked as done, as specifed by this command. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private int taskId;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eDoneCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param taskId Specifies the index of the task to be marked as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public DoneCommand(int taskId) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Indicates whether this command tells Duke to exit."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          otherwise. Since the \u003ccode\u003eDoneCommand\u003c/code\u003e is not a \"bye\", "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          the return value is set to false."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Executes the command with respect to tasks (modifying the task list), "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * UI, and storage (saving tasks in a file in hard disk)."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param tasks The task list where tasks are stored."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param ui The user interface that interacts with user input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e object that handles task "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *      storage in local file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        Task t \u003d tasks.getTask(taskId - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        ui.markedAsDone(t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 56
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a command to exit Duke. The \u003ccode\u003eExitCommand\u003c/code\u003e class "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * inherits from the \u003ccode\u003eCommand\u003c/code\u003e class to represent user instruction "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * to quit the running Duke program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eExitCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Indicates whether this command tells Duke to exit."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          otherwise. Since the \u003ccode\u003eExitCommand\u003c/code\u003e is a \"bye\", "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          the return value is set to true."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Executes the command with respect to tasks (modifying the task list), "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * UI, and storage (saving tasks in a file in hard disk)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param tasks The task list where tasks are stored."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param ui The user interface that interacts with user input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e object that handles task "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *      storage in local file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 45
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a command to search a keyword. The \u003ccode\u003eFindCommand\u003c/code\u003e class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * inherits from the \u003ccode\u003eCommand\u003c/code\u003e class to represent user instruction"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * to find a task by searching for a keyword."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /** A string representation of the keyword for searching. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eFindCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param keyword Specifies the keyword for searching."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Indicates whether this command tells Duke to exit."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          otherwise. Since the \u003ccode\u003eFindCommand\u003c/code\u003e is not a \"bye\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          the return value is set to false."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Executes the command with respect to tasks (modifying the task list),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * UI, and storage (saving tasks in a file in hard disk)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param tasks The task list where tasks are stored."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param ui The user interface that interacts with user input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e object that handles task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *      storage in local file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        ui.printSearchResults(tasks, keyword);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 51
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a command to list all existing tasks in the task list. The "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * \u003ccode\u003eListCommand\u003c/code\u003e class inherits from the \u003ccode\u003eCommand\u003c/code\u003e class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * to represent user instruction to display all existing tasks in the task list. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eListCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Indicates whether this command tells Duke to exit."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A boolean. True if the command tells Duke to exit, false "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          otherwise. Since the \u003ccode\u003eListCommand\u003c/code\u003e is not a \"bye\", "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          the return value is set to false."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Executes the command with respect to tasks (modifying the task list), "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * UI, and storage (saving tasks in a file in hard disk)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param tasks The task list where tasks are stored."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param ui The user interface that interacts with user input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e object that handles task "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *      storage in local file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        ui.printTasks(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 45
    }
  },
  {
    "path": "src/main/java/duke/core/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents exceptions specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eDukeException\u003c/code\u003e with a specific string."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param message A string that specifies the problem associated with the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *              exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 17
    }
  },
  {
    "path": "src/main/java/duke/core/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a \u003ccode\u003eParser\u003c/code\u003e that parses user input into a specific "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * type of \u003ccode\u003eCommand\u003c/code\u003e. The \u003ccode\u003eParser\u003c/code\u003e also parses tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * related to the command, and checks for illegal instructions."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Creates a string from a sub array of a string array."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param words The string array to be processed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param start The starting position in the string array."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param end The ending position in the string array."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A string consisting of all the words from the starting position"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          to the ending position, separated by spaces."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private static String subString(String[] words, int start, int end) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        for (int i \u003d start; i \u003c end; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            sb.append(words[i] + \" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return sb.toString().trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Finds the index of a given string in a string array."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param words The string array to be inspected."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param s The string to be searched."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return The index of the given string in the string array. Returns -1 if"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          the given string does not occur in the array."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private static int findIdx(String[] words, String s) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        for (int i \u003d 0; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            if (words[i].equals(s)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Parses a \u003ccode\u003eTask\u003c/code\u003e from a string array."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param words The string array to be parsed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return The \u003ccode\u003eTask\u003c/code\u003e that is parsed from the string array."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private static Task parseTask(String[] words) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        if (words[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            return new ToDo(subString(words, 1, words.length));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        } else if (words[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            int i \u003d findIdx(words, \"/by\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            String description \u003d subString(words, 1, i);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            String by \u003d subString(words, i + 1, words.length);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            return new Deadline(description, by);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            int i \u003d findIdx(words, \"/at\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            String description \u003d subString(words, 1, i);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            String at \u003d subString(words, i + 1, words.length);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            return new Event(description, at);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Checks for illegal user input and throws exceptions accordingly."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param words The string array to be checked."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private static void checkIllegalInstruction(String[] words) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        String fw \u003d words[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        if (!(fw.equals(\"done\") || fw.equals(\"todo\") || fw.equals(\"deadline\") || fw.equals(\"event\")"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    || fw.equals(\"delete\") || fw.equals(\"list\") || fw.equals(\"bye\") || fw.equals(\"find\"))) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            throw new DukeException(\" \\u2639  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        if ((fw.equals(\"todo\") || fw.equals(\"deadline\") || fw.equals(\"event\")) \u0026\u0026 words.length \u003c 2) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            throw new DukeException(\" \\u2639  OOPS!!! The description of a \" + fw + \" cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        if ((fw.equals(\"deadline\") \u0026\u0026 findIdx(words, \"/by\") \u003d\u003d -1)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                || (fw.equals(\"event\") \u0026\u0026 findIdx(words, \"/at\") \u003d\u003d -1)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            throw new DukeException(\" \\u2639  OOPS!!! The time of a \" + fw + \" cannot be empty.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        if ((fw.equals(\"done\") || fw.equals(\"delete\")) \u0026\u0026 words.length \u003c 2) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            throw new DukeException(\" \\u2639  OOPS!!! The task number of a \" + fw + \" cannot be empty.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        if (fw.equals(\"find\") \u0026\u0026 words.length \u003c 2) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            throw new DukeException(\" \\u2639  OOPS!!! The keyword of a \" + fw + \" cannot be empty.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Parses a line of user instruction into respective \u003ccode\u003eCommand\u003c/code\u003e "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * types."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param s The string that represents user input."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A \u003ccode\u003eCommand\u003c/code\u003e that represents the specific type of"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          command the user gives."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public static Command parse(String s) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        String[] words \u003d s.split(\" \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        checkIllegalInstruction(words);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        switch (words[0]) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            return new DoneCommand(Integer.parseInt(words[1]));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(words[1]));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            return new FindCommand(words[1]);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            Task t \u003d parseTask(words);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            return new AddCommand(t);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 131
    }
  },
  {
    "path": "src/main/java/duke/core/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a \u003ccode\u003eStorage\u003c/code\u003e class that deals with loading tasks from "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * a file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /** A string that represents the file path in local hard disk. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eStorage\u003c/code\u003e object with a specific file path."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param filePath A string that represents the path of the file to be"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          loaded and modified."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Loads tasks from the file into a \u003ccode\u003eArrayList\u003c/code\u003e of "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A \u003ccode\u003eArrayList\u003c/code\u003e of tasks as recorded in the file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @throws DukeException If file is not found."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        File duke \u003d new File(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(duke);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                String nextLine \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                String[] words \u003d nextLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                if (words[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    Task t \u003d new ToDo(words[2]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    if (words[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                if (words[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    Task t \u003d new Deadline(words[2], words[3]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    if (words[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                } "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                if (words[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    Task t \u003d new Event(words[2], words[3]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    if (words[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            throw new DukeException(\"Load failed\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Saves tasks from a \u003ccode\u003eTaskList\u003c/code\u003e to the local file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e storing tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @throws DukeException If writing to the local file failed."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                fw.write(t.format() + System.lineSeparator());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            throw new DukeException(\"Failed to save tasks :-(\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 98
    }
  },
  {
    "path": "src/main/java/duke/core/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a list of \u003ccode\u003eTask\u003c/code\u003e that can perform operations such as "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * add and delete on the tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * An internal \u003ccode\u003eArrayList\u003c/code\u003e structure to store and manipulate"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * the tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a new \u003ccode\u003eTaskList\u003c/code\u003e with a default empty list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Overloaded constructor that constructs a new \u003ccode\u003eTaskList\u003c/code\u003e from"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * a given \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param tasks An existing \u003ccode\u003eArrayList\u003c/code\u003e of tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Returns the \u003ccode\u003eArrayList\u003c/code\u003e of tasks associated with this"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return The \u003ccode\u003eArrayList\u003c/code\u003e of tasks associated with this"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Returns the \u003ccode\u003eTask\u003c/code\u003e in the list with the given index."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param i The index of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return The \u003ccode\u003eTask\u003c/code\u003e in the list with this specific index."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Adds a \u003ccode\u003eTask\u003c/code\u003e to the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param t The \u003ccode\u003eTask\u003c/code\u003e to be added to the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Removes the \u003ccode\u003eTask\u003c/code\u003e with the given index from the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param i The index of the \u003ccode\u003eTask\u003c/code\u003e to be deleted."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void removeTask(int i) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        tasks.remove(i);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Returns the number of tasks stored in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return An integer representing the number of tasks in the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 85
    }
  },
  {
    "path": "src/main/java/duke/core/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a system that deals with user interaction, for example, printing "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * welcome messages and prmopts."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /** A \u003ccode\u003eScanner\u003c/code\u003e used to read user input. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eUi\u003c/code\u003e object and initilizes the "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * \u003ccode\u003eScanner\u003c/code\u003e to read user input from the system."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Shows Duke logo and welcome message, and prompts user to type instructions."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Shows an error in loading the file where past tasks are stored."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        System.out.println(\"Failed to Load past tasks :-(\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Reads one line of user instruction."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A string that represents the user instruction."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Shows a divider line."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Shows that a \u003ccode\u003eTask\u003c/code\u003e has been added, and displays the number "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * of current tasks in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param t The \u003ccode\u003eTask\u003c/code\u003e that is added to the list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param size The number of tasks stored in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void addedTask(Task t, int size) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n  \" + t + \"\\nNow you have \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Shows that a \u003ccode\u003eTask\u003c/code\u003e has been marked as done."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param t The \u003ccode\u003eTask\u003c/code\u003e that is marked as done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void markedAsDone(Task t) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n  \" + t);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Shows that a \u003ccode\u003eTask\u003c/code\u003e has been removed, and displays the number "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * of current tasks in the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param t The \u003ccode\u003eTask\u003c/code\u003e that is deleted from the list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void removedTask(Task t, int size) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n  \" + t + \"\\nNow you have \""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Displays all tasks currently stored in the list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e used to store tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void printTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        int idx \u003d 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            System.out.println(idx + \".\" + t);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            idx++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Shows content of an error."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param s A string that represents the content of the error."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void showError(String s) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Shows search results for finding a keyword in the task list. Displays"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * all tasks that contain the keyword."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e where keyword is searched."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param keyword A string representation of the keyword."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void printSearchResults(TaskList tasks, String keyword) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        int idx \u003d 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            if (t.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                System.out.println(idx + \".\" + t);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                idx++;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Shows bye message to user."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 141
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a task with a deadline. The \u003ccode\u003eDeadline\u003c/code\u003e class "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * inherits from the \u003ccode\u003eTask\u003c/code\u003e class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /** A string that represents the deadline of the task, as inputted by user. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * A \u003ccode\u003eLocalDateTime\u003c/code\u003e object that represents the date and time"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * when the task is due."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e object. Date and time are parsed and "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * stored in \u003ccode\u003edateTime\u003c/code\u003e field if input is of \"dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param description A string that describes the specific"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          content of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param by A string that specifies the deadline of the "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            dateTime \u003d LocalDateTime.parse(by, f);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            dateTime \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Returns a string representatio of the task to be stored in a local file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A string in a specific format for clear display in a local file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return \"D | \" + this.getStatusIcon() + \" | \" + this.getDescription() + \" | \" + this.by;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Returns a string representation of the task to be printed upon user "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * inquiry."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A string representation of the task that displays the type,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          description and deadline of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents an event that occurs at a specific time. The \u003ccode\u003eEvente\u003c/code\u003e "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * class inherits from the \u003ccode\u003eTask\u003c/code\u003e class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /** A string that represents the time of the event, as inputted by user. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * A \u003ccode\u003eLocalDateTime\u003c/code\u003e object that represents the date and time"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * when the event occurs."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eEvent\u003c/code\u003e object. Date and time are parsed and "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * stored in \u003ccode\u003edateTime\u003c/code\u003e field if input is of \"dd/MM/yyyy HHmm\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param description A string that describes the specific"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          content of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param at A string that specifies the time of the "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        DateTimeFormatter f \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            dateTime \u003d LocalDateTime.parse(at, f);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            dateTime \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Returns a string representatio of the task to be stored in a local file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A string in a specific format for clear display in a local file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return \"E | \" + this.getStatusIcon() + \" | \" + this.getDescription() + \" | \" + this.at;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Returns a string representation of the task to be printed upon user "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * inquiry."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A string representation of the task that displays the type,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          description and time of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a task.  \u003ccode\u003eTask\u003c/code\u003e is an abstract class that can not be "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * instantiated, but it has many child classes to represent different types of "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /** A String that represents the specific content of the task. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /** A boolean that represents the status of completion of the task. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Initialises the minimum fields required to setup a \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * All new tasks are uncompleted by default."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param description A string that represents the specific activity"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *                  associated with the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Returns an icon that represents the status of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return Tick if completed, cross if uncompleted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A string that represents the specific activity associated with"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    protected String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Formats the task in a pecific format for clear display and storage."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A string representatio of the task to be stored in a local file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public abstract String format();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Overrides the \u003ccode\u003etoString()\u003c/code\u003e method in \u003ccode\u003eObject\u003c/code\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * class to output a string representation of the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A string representation of the task that displays the status"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          and description of the task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 72
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * Represents a normal task without a deadline or a specific time. The "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " * \u003ccode\u003eToDo\u003c/code\u003e class inherits from the \u003ccode\u003eTask\u003c/code\u003e class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Constructs a \u003ccode\u003eToDo\u003c/code\u003e object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @param description A string that describes the specific"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          content of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Returns a string representatio of the task to be stored in a local file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A string in a specific format for clear display in a local file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return \"T | \" + this.getStatusIcon() + \" | \" + this.getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * Returns a string representation of the task to be printed upon user "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * inquiry."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     * @return A string representation of the task that displays the type and"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     *          description of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 39
    }
  },
  {
    "path": "src/test/java/duke/core/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void parse_invalidFirstWord_exceptionThrown() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            assertEquals(new ExitCommand(), Parser.parse(\"byo\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "            assertEquals(\" ☹  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 19
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        assertEquals(\"[D][✘] individual project (by: 28/08/2019 2359)\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                new Deadline(\"individual project\", \"28/08/2019 2359\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void testStringFormatter() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        assertEquals(\"D | ✘ | individual project | 28/08/2019 2359\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                new Deadline(\"individual project\", \"28/08/2019 2359\").format());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    public void testStatusIconGetter() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "        assertEquals(\"✘\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "                new Deadline(\"individual project\", \"28/08/2019 2359\").getStatusIcon());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 24
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "  [T][✘] read book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "  [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "  [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "  [T][✓] read book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "  [T][✘] join sports club"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "  [T][✘] borrow book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "  [T][✓] join sports club"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "4.[T][✓] join sports club"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "5.[T][✘] borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "  [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "  [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "4.[T][✓] join sports club"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "5.[T][✘] borrow book"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "6.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "7.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 49
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   #!/usr/bin/env bash"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "       mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   # delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "       rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   if ! javac -cp ~/Desktop/CS2103T/duke/src -Xlint:none -d ~/Desktop/CS2103T/duke/bin ~/Desktop/CS2103T/duke/src/main/java/*.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "       echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   java -classpath ~/Desktop/CS2103T/duke/bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   # compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   then"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "       echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "       exit 0"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   else"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "       echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anqichen9856"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "anqichen9856": 36
    }
  }
]
