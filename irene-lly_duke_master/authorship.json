[
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * The Deadline class creates a Deadline task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * that extends from the Task class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Constructor for class Deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param description The Deadline task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param by Deadline of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Returns the deadline of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return by Deadline of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Overrides the toString method to print the deadline task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return String Deadline task formatted to string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 40
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * The Duke class runs Duke, the personal assistant chatbot"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * that helps a person keeps track of various things."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Constructor for class Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param filePath File path for saving tasks in the hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @throws IOException Throws if an unpredicted error occurs."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Starts the program by calling the Ui."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @throws IOException Throws if an unpredicted error occurs."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        ui.scan(tasks, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 46,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * DukeException handles exceptions specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 7
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * The Event class creates a Event task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * that extends from the Task class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Constructor for class Event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param description The Event task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param at The date/time of event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Returns the date and time of the event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return at Date and time of event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Overrides the toString method to print the event task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return String Event task formatted to string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 40
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * The Parser class takes in a string, parses it to the required"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * date and time format before returning it."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private String str;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Constructor for Parser class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param str String that needs to be parsed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public Parser(String str) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        this.str \u003d str;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Returns a Task with a formatted date and time."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return parsedTask Task that has been formatted."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @throws DukeException If task is empty."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @throws ParseException If date or time of task does not follow the format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public Task parse() throws DukeException, ParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Task parsedTask \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        String[] wordArray \u003d str.split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        String taskWithoutType \u003d str.replace(wordArray[0], \"\").trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        if (taskWithoutType.isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        switch (wordArray[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            parsedTask \u003d new ToDo(taskWithoutType);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            String[] arrOfWordsEvent \u003d taskWithoutType.split(\" /at \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            Date parsedEventTime \u003d format.parse(arrOfWordsEvent[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            parsedTask \u003d new Event(arrOfWordsEvent[0], formatter.format(parsedEventTime));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            String[] arrOfWordsDeadline \u003d taskWithoutType.split(\" /by \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            Date parsedDeadline \u003d format.parse(arrOfWordsDeadline[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            parsedTask \u003d new Deadline(arrOfWordsDeadline[0], formatter.format(parsedDeadline));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return parsedTask;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 60
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * The Storage class deals with storing tasks from the task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * and loading tasks from the hard drive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Constructor for class Storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param filePath File path for accessing the hard drive."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Returns a list of tasks to load into the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return tasks List of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @throws FileNotFoundException If file to load tasks from cannot be found."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @throws DukeException If file is empty."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public List\u003cTask\u003e loadTasks() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        if (f.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            String[] task \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            switch (task[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                tasks.add(new ToDo(task[2]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                tasks.add(new Deadline(task[2], task[3]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                tasks.add(new Event(task[2], task[3]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            if (task[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                tasks.get(tasks.size() - 1).setDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Saves the tasks from the task list to the hard drive."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param tasks Task list to save."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @throws IOException Throws if an unpredicted error occurs."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void saveTasks(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                Deadline d \u003d (Deadline) task;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                fw.write(\"D | \" + d.isDone() + \" | \" + d.getDescription() + \" | \" + d.getBy() + \"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                Event e \u003d (Event) task;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                fw.write(\"E | \" + e.isDone() + \" | \" + e.getDescription() + \" | \" + e.getAt() + \"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            } else if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                ToDo t \u003d (ToDo) task;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                fw.write(\"T | \" + t.isDone() + \" | \" + t.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 87
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * The Task class contains methods for query of the tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * as well as to set tasks as done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Constructor for Task class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param description The task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Returns tick or cross symbols to signify if a task is done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return symbol A tick or cross symbol."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Returns an int to indicate if the task is done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return int 1 is used to indicate a task as done, 0 otherwise."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public int isDone() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return isDone ? 1 : 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Sets the task as done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Overrides the toString method to print the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return String Task formatted to string including status icon."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \"+ this.getDescription();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 60
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * The TaskList deals with operations pertaining to the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Constructor for TaskList class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Another constructor for TaskList class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param tasks Tasks to load into the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            list.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Adds a task into the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param task Task to be added into the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void addToList(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return int Size of task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Returns the task after marking it as done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param num Number of the tasks in the task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return task Task that has been marked as done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public Task markAsDone(int num) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Task task \u003d list.get(num - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Returns the deleted task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param num Number of the task in the task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return task Task that has been deleted."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public Task delete(int num) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Task deletedTask \u003d list.get(num - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        list.remove(num - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Searches for the given keyword in the task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param s The keyword."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void find(String s) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        for (Task task : list ) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            String[] descriptionArray \u003d task.getDescription().split(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            for (int i \u003d 0; i \u003c descriptionArray.length; i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                if (s.equals(descriptionArray[i])) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                    temp.add(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        printList(temp);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Prints the task list in order of which task is added first."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            System.out.println(\"    \" + i + \". \" + task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private void printList(List\u003cTask\u003e t) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        for (Task task : t) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            System.out.println(\"    \" + i + \". \" + task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 113
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * The ToDo class creates a ToDo task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * that extends from the Task class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Constructor for class ToDo."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param description The ToDo task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Overrides the toString method to print the todo task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @return String ToDo task formatted to string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 29
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * The Ui class deals with user interaction."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " * It will call the Parser class and the TaskList class to handle user inputs."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Constructor for Ui class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        String f \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        String logo \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        System.out.println(\"    Hello from\\n\" + logo + \"    Hello! I\u0027m Duke\\n    What can I do for you?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * Scans for user input, parse if necessary and edit the task list accordingly."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * It also stores the task list in the hard drive when it changes."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param taskList Task list that users modifies."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @param storage For storing the taskList into the hard drive."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     * @throws IOException Throws if an unpredicted error occurs."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void scan(TaskList taskList, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        String[] task \u003d input.split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        while (!task[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                handleInput(task, input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                print(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                print(\"    ☹ OOPS!!! I\u0027m sorry, but task number \" + task[1] + \" does not exist.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                task \u003d input.split(\" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private void handleInput(String[] task, String input) throws IllegalArgumentException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        switch (task[0]) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            Task deletedTask \u003d taskList.delete(Integer.parseInt(task[1]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            print(\"    Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            System.out.println(\"        \" + deletedTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            print(\"    Now you have \" + taskList.getListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            Task doneTask \u003d taskList.markAsDone(Integer.parseInt(task[1]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            print(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            System.out.println(\"    \" + doneTask);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            print(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            taskList.printList();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            print(\"    Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            taskList.find(task[1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            handleTasks(task[0], input);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private void handleTasks(String taskType, String t) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Parser p \u003d new Parser(t);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            Task parsedTask \u003d p.parse();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            taskList.addToList(parsedTask);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            System.out.println(\"    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            System.out.println(\"        \" + parsedTask);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            System.out.println(\"    Now you have \" + taskList.getListSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            print(\"    ☹ OOPS!!! The description of a \" + taskType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            print(\"    ☹ OOPS!!! The date/time of a \" + taskType"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                    + \" does not follow the specified format of dd/MM/yyyy HHmm.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            print(\"    ☹ OOPS!!! The description of a \" + taskType"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                    + \" does not follow the specified format.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private void print(String s) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 118
    }
  },
  {
    "path": "src/main/java/extra.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "/*import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void addToList(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        String[] arrOfWords \u003d input.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        String taskWithoutType \u003d input.replace(arrOfWords[0], \"\").trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Task task \u003d new Task(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            if (taskWithoutType.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            switch (arrOfWords[0]) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                task \u003d new ToDo(taskWithoutType);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                String[] arrOfWordsDeadline \u003d taskWithoutType.split(\" /by \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                Date formattedDeadline \u003d format.parse(arrOfWordsDeadline[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                task \u003d new Deadline(arrOfWordsDeadline[0], formatter.format(formattedDeadline));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                String[] arrOfWordsEvent \u003d taskWithoutType.split(\" /at \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                Date formattedEventTime \u003d format.parse(arrOfWordsEvent[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                task \u003d new Event(arrOfWordsEvent[0], formatter.format(formattedEventTime));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            print(\"    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            System.out.println(\"        \" + task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            print(\"    Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        } catch (DukeException a) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            print(\"    ☹ OOPS!!! The description of a \" + arrOfWords[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            print(\"    ☹ OOPS!!! The description of a \" + arrOfWords[0] + \" does not follow the specified format.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void markAsDone(int num) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Task task \u003d list.get(num - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        print(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void delete(int num) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Task deletedTask \u003d list.get(num - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        list.remove(num - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        print(\"    Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        System.out.println(\"        \" + deletedTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        print(\"    Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        print(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            System.out.println(\"    \" + i + \". \" + task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void loadTasks(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            String[] arr \u003d task.split(\" \\\\| \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            switch (arr[0]) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                list.add(new ToDo(arr[2]));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                list.add(new Deadline(arr[2], arr[3]));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                list.add(new Event(arr[2], arr[3]));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                list.get(list.size() - 1).setDone();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void saveTasks(String filePath) throws IOException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                Deadline d \u003d (Deadline) task;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                fw.write(\"D | \" + d.isDone() + \" | \" + d.getDescription() + \" | \" + d.getBy() + \"\\n\"); // need to overwrite getdescrition?"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                Event e \u003d (Event) task;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                fw.write(\"E | \" + e.isDone() + \" | \" + e.getDescription() + \" | \" + e.getAt() + \"\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            } else if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                ToDo t \u003d (ToDo) task;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                fw.write(\"T | \" + t.isDone() + \" | \" + t.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private void print(String x) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        System.out.println(x);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            list.loadTasks(f);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        while (!wordArray[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                switch (wordArray[0]) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                    list.printList();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                    list.markAsDone(Integer.parseInt(wordArray[1]));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                    list.addToList(input);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                    list.delete(Integer.parseInt(wordArray[1]));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                list.saveTasks(f);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                System.out.println(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                System.out.println(\"Something went wrong: \" + e.getMessage()); // or saved file is missing?"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "                wordArray \u003d input.split(\" \");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}*/"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 164
    }
  },
  {
    "path": "src/test/java/TestFile.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "D | 1 | borrow book | 06 Jun 2012, 6:00 pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "E | 0 | meeting | 25 Jun 2016, 6:00 am"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 3
    }
  },
  {
    "path": "src/test/java/TestFile2.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "T | 0 | todo 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "D | 0 | deadline 2 | 09/08/1976 2300"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "E | 0 | event 3 | 30/02/2109 0300"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 3
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 11
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void testParse() throws ParseException, DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Parser p1 \u003d new Parser(\"todo play\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Parser p2 \u003d new Parser(\"event meeting /at 09/06/1934 0700\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Parser p3 \u003d new Parser(\"deadline project /by 03/11/3241 1200\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        String s1 \u003d \"[T][✘] play\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        String s2 \u003d \"[E][✘] meeting (at: 09 Jun 1934, 07:00 AM)\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        String s3 \u003d \"[D][✘] project (by: 03 Nov 3241, 12:00 PM)\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(s1, p1.parse().toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(s2, p2.parse().toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(s3, p3.parse().toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 22
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void testLoadTasks() throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Storage s \u003d new Storage(\"C:/CS2103T/duke/src/test/java/TestFile.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        List\u003cTask\u003e actual \u003d s.loadTasks();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"[T][✘] read book\", actual.get(0).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"[D][✓] borrow book (by: 06 Jun 2012, 6:00 pm)\", actual.get(1).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"[E][✘] meeting (at: 25 Jun 2016, 6:00 am)\", actual.get(2).toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void testSaveTasks() throws IOException, DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Storage s \u003d new Storage(\"C:/CS2103T/duke/src/test/java/TestFile2.txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        list.add(new ToDo(\"todo 1\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        list.add(new Deadline(\"deadline 2\", \"09/08/1976 2300\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        list.add(new Event(\"event 3\", \"30/02/2109 0300\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        TaskList t \u003d new TaskList(list);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        s.saveTasks(t);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        File f \u003d new File(\"C:/CS2103T/duke/src/test/java/TestFile2.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"T | 0 | todo 1\", sc.nextLine());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"D | 0 | deadline 2 | 09/08/1976 2300\", sc.nextLine());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"E | 0 | event 3 | 30/02/2109 0300\", sc.nextLine());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 40
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    private TaskList t \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void addToListTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 1\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 2\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 3\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 4\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"[✘] generic 1\", t.getList().get(0).toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"[✘] generic 2\", t.getList().get(1).toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"[✘] generic 3\", t.getList().get(2).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"[✘] generic 4\", t.getList().get(3).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void getListSizeTest() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 1\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 2\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 3\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 4\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(4, t.getListSize());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void markAsDoneTest() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 1\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 2\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 3\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 4\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.markAsDone(1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.markAsDone(3);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"[✓] generic 1\", t.getList().get(0).toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"[✓] generic 3\", t.getList().get(2).toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            t.markAsDone(5);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "            assertEquals(\"Index 4 out of bounds for length 4\", e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void deleteTest() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 1\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 2\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 3\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.addToList(new Task(\"generic 4\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.delete(1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.delete(1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.delete(1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.delete(1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(0, t.getListSize());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 63
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    Task t \u003d new Task(\"blah blah\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(\"[\\u2718] blah blah\", t.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertNotEquals(\"[\\u2718] blah\", t.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertNotEquals(\"[\\u2718] blah \", t.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertNotEquals(\"[\\u2718] blah bla\", t.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "irene-lly"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    public void testSetDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        t.setDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "        assertEquals(1, t.isDone());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "irene-lly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "irene-lly": 23
    }
  }
]
