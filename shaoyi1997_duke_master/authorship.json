[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "//run {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "//    standardInput \u003d System.in"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "//}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 32,
      "-": 15
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "D | Not Done | complete book assignment | 12/12/2019 0800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "E |     Done | books fest | 01/01/2019 1200"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "T | Not Done | test"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "T |     Done | test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "T | Not Done | testing"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "T | Not Done | hi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "T | Not Done | hi2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "T | Not Done | hi3"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 8
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.layout.Priority;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            HBox.setHgrow(dialog, Priority.ALWAYS); // box will resize according to text"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            HBox.setHgrow(displayPicture, Priority.ALWAYS);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 62
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * A program that tracks a lists of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Capable of adding, deleting and listing tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Tasks can be marked done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for Duke program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Initializes the Ui, Storage and Tasklist."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @see Storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @see TaskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            storage \u003d new Storage(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the response of Duke after executing the user command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param input the string representation of the user command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return the string representation of the Duke response"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 54,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Launches the Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param args the main method args argument"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 16
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            assert fxmlLoader !\u003d null : \"fxml is not valid\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        //Shows the welcome message"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                DialogBox.getDukeDialog(\"     Hello! I\u0027m Duke\\n\" + \"     What can I \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                                                          + \"do for you?\", dukeImage));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            Platform.exit(); // closes the app when user gives exit command"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 60
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the command that adds a task into the tasklist."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the AddCommand object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ipt the string representation of the command input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public AddCommand(String ipt) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assert !input.equals(\"\") : \"input should not be empty\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.input \u003d ipt;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates whether this is an exit command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExitCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the add command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * The task will be parsed from the input string representation and added into the task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * The text file will be updated with the given task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * A completion message will be displayed after successful execution."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string representation of the command response"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            Task tk \u003d Parser.parseAddCommand(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            tasks.addTask(tk);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return ui.showResultOfCommand(\"     Got it. I\u0027ve added this task: \\n       \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                                           + tk + \"\\n     Now you have \" + tasks.getNumOfTask()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                                           + \" tasks in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return ui.showError(\"I\u0027m sorry, but the datetime format is incorrect :-(\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 65
    }
  },
  {
    "path": "src/main/java/commands/CloneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class representing the command that clones a task represented by its index."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class CloneCommand extends IndexingCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the clone command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param taskNum the index of the task to be cloned."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public CloneCommand(int taskNum) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.taskNumber \u003d taskNum;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates whether this is an exit command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExitCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the clone command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Given task at the given index will be cloned into the tasklist."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * A completion message will be displayed after successful cloning."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string representation of the command response"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws DukeException exception is thrown when the index falls outside the number of tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (isTaskNumOutOfRange(taskNumber, tasks.getNumOfTask())) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            throw new DukeException(\"List only has \" + tasks.getNumOfTask() + \" items.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            Task curTask \u003d tasks.getTaskByIndex(taskNumber - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            tasks.addTask(curTask.clone());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return ui.showResultOfCommand(\"     Noted. I\u0027ve cloned this task:\\n       \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                                                  + curTask"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                                                  + \"\\n     Now you have \" + tasks.getNumOfTask()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                                                  + \" tasks in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 58
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Abstract class for a command to be executed when the user inputs a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "abstract public class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    abstract public boolean isExitCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    abstract public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 17
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the command that deletes a task from the tasklist."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class DeleteCommand extends IndexingCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the delete command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param taskNum the index of the task to be deleted"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.taskNumber \u003d taskNum;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates whether this is an exit command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExitCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Given task will be deleted from the tasklist at the index position."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * A completion message will be displayed after successful deletion."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string representation of the command response"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws DukeException exception is thrown when the index falls outside the number of tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (isTaskNumOutOfRange(taskNumber, tasks.getNumOfTask())) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                throw new DukeException(\"List only has \" + tasks.getNumOfTask() + \" items.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                Task curTask \u003d tasks.getTaskByIndex(taskNumber - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                tasks.deleteTaskByIdx(taskNumber - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                storage.updateFile(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                return ui.showResultOfCommand(\"     Noted. I\u0027ve removed this task:\\n       \" + curTask"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        + \"\\n     Now you have \" + tasks.getNumOfTask() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 61
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the command that marks a given task done given its index."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class DoneCommand extends IndexingCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the done command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param taskNum the index of the task to be marked done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        super.taskNumber \u003d taskNum;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates whether this is an exit command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExitCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the done command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Given task will be marked done from the tasklist at the index position."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * A completion message will be displayed after successful deletion."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string representation of the command response"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws DukeException exception is thrown when the index falls outside the number of tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (isTaskNumOutOfRange(taskNumber, tasks.getNumOfTask())) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                throw new DukeException(\"List only has \" + tasks.getNumOfTask() + \" items.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                Task curTask \u003d tasks.getTaskByIndex(taskNumber - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                curTask.markDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                storage.updateFile(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                return ui.showResultOfCommand(\"     Nice! I\u0027ve marked this task as done: \\n     \" + curTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 57
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the command that prompts the program to terminate."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates whether this is an exit command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExitCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Prints the bye message through the Ui object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string representation of the command response"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return ui.showResultOfCommand(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 38
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class that represents the find command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the find command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ipt the string of search query."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public FindCommand(String ipt) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        input \u003d ipt;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates if the command is the exit command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExitCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the find command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Searches within the tasklist if any of the tasks match the search query."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Displays all tasks that matches."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string representation of the command response"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws DukeException exception is thrown when no task is found."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            StringBuilder stringOfTasksFound \u003d new StringBuilder(\"     Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            int counter \u003d 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            for (Task tk : taskList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                String curTaskDescription \u003d tk.getDescription();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                if (curTaskDescription.contains(input)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    stringOfTasksFound.append(\"     \" + (counter + 1) + \". \" + tk.toString() +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                                                      \"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    counter++;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (counter \u003d\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                throw new DukeException(\"No tasks found.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            stringOfTasksFound.delete(stringOfTasksFound.length() - 1, stringOfTasksFound.length());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return ui.showResultOfCommand(stringOfTasksFound.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 69
    }
  },
  {
    "path": "src/main/java/commands/IndexingCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Abstract class that represents commands requiring access to a certain task in the tasklist."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "abstract public class IndexingCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    protected int taskNumber;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Checks if the task\u0027s index given is out of range."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param taskNumber the input index of the intended task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param listSize the total number of tasks in the tasklist."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return true if the input index falls out of range."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    protected static boolean isTaskNumOutOfRange(int taskNumber, int listSize) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return taskNumber \u003e listSize || taskNumber \u003c 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 21
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the command that prompts the program to terminate."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the list command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates whether this is an exit command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExitCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the list command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * All tasks in the tasklist will be displayed to the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Tasks are represented by their string representation."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string representation of the command response"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @see  Task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        StringBuilder stringOfItems \u003d new StringBuilder(\"     Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        int numOfItems \u003d tasks.getNumOfTask();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        for (int i \u003d 0; i \u003c numOfItems; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            stringOfItems.append(\"     \" + (i + 1) + \". \" + tasks.getTaskByIndex(i)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    + (i \u003d\u003d numOfItems - 1 ? \"\" : \"\\n\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return ui.showResultOfCommand(stringOfItems.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 48
    }
  },
  {
    "path": "src/main/java/commands/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.TimeframedTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the command that updates a task based on the input fields."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class UpdateCommand extends IndexingCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String commandInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the update command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param taskNum the index of the task to be updated."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param commandInput the string of items to change."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public UpdateCommand(int taskNum, String commandInput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        super.taskNumber \u003d taskNum;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.commandInput \u003d commandInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Indicates whether this is an exit command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean isExitCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Executes the update command in the form of \"update [taskNumber] [/field] [new field]\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Given task at the index position will be updated based on the given fields."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * A completion message will be displayed after successful update."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that stores all the tasks"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ui ui object that deals with user interaction"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param storage storage object that deals with writing into the text file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string representation of the command response"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws DukeException exception is thrown when the index falls outside the number of tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (isTaskNumOutOfRange(taskNumber, tasks.getNumOfTask())) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            throw new DukeException(\"List only has \" + tasks.getNumOfTask() + \" items.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            Task curTask \u003d tasks.getTaskByIndex(taskNumber - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            String[] newDetails \u003d parseCommand(); // parses command and gets new details"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            String newDescription \u003d newDetails[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            String newDateTime \u003d newDetails[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (!newDescription.isEmpty()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                curTask.setDescription(newDescription.trim()); // updates description field of task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (!newDateTime.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                TimeframedTask curTimeframedTask \u003d (TimeframedTask)curTask;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                curTimeframedTask.setDateTime(newDateTime);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return ui.showResultOfCommand(\"     Noted. I\u0027ve updated this task:\\n       \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                                                  + curTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String[] parseCommand() throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        String newDescription \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        String newDateTime \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Scanner commandDetailsParser \u003d new Scanner(commandInput);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        // loop to parse command"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        String word \u003d commandDetailsParser.next();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        while (commandDetailsParser.hasNext()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            String nextWord \u003d commandDetailsParser.next();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (word.equals(\"/description\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    while (!nextWord.contains(\"/\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        newDescription +\u003d nextWord + \" \";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        if (commandDetailsParser.hasNext()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                            nextWord \u003d commandDetailsParser.next();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    throw new DukeException(\"Description field cannot be empty\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                word \u003d nextWord;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            } else if (word.equals(\"/datetime\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                newDateTime \u003d nextWord + \" \" + commandDetailsParser.next();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                throw new DukeException(\"Please specify your field to change.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        String[] newDetails \u003d new String[2];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        newDetails[0] \u003d newDescription;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        newDetails[1] \u003d newDateTime;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return newDetails;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 108
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class that represents an exception thrown when Duke encounters an invalid command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 11
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the Parser which parsers commands."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Parses the command given by the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param input the string representation of the command input by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return the command object given by the input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws DukeException thrown when comm"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if (input.length() \u003c\u003d 3) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if (input.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new FindCommand(input.substring(5));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0,4).equals(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new DoneCommand(Integer.parseInt(input.substring(5)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if (input.length() \u003e\u003d 7 \u0026\u0026 input.substring(0,5).equals(\"clone\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new CloneCommand(Integer.parseInt(input.substring(6)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if ((input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0,6).equals(\"delete\"))) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(input.substring(7)));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0,6).equals(\"update\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new UpdateCommand(Integer.parseInt(input.substring(7,8)), input.substring(8));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new AddCommand(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Parses the add command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param input the string representation of the add command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *              Format: type | description /(by||at) datetime."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return the type of task to be added."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws DukeException thrown when input length is less than 4"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws ParseException thrown when datetime is in incorrect format"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public static Task parseAddCommand(String input) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        int idxOfSlash;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (isDeadline(input)) { // add Deadline"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            idxOfSlash \u003d input.indexOf(\"/by \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (!isSlashPresent(idxOfSlash)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                throw new DukeException(\"The description of the deadline is incorrect.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new Deadline(input.substring(9, idxOfSlash - 1), parseDateTime(input, idxOfSlash));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if (isEvent(input)) { // add Event"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            idxOfSlash \u003d input.indexOf(\"/at \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (!isSlashPresent(idxOfSlash)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                throw new DukeException(\"The description of the event is incorrect.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            return new Event(input.substring(6, idxOfSlash - 1), parseDateTime(input, idxOfSlash));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else if (isToDo(input)) { // add ToDos"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                return new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private static boolean isDeadline(String input) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private static boolean isEvent(String input) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"event\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private static boolean isToDo(String input) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return input.substring(0, 4).equals(\"todo\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private static boolean isSlashPresent(int idxOfSlash) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return idxOfSlash !\u003d -1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private static String parseDateTime(String input, int idxOfSlash) throws ParseException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return format.format(format.parse(input.substring(idxOfSlash + 4)));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 102
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class that handles the loading and writing of tasks from/to a text file in the hard drive."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the storage object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param filePath string representation of the file path from the project source directory."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assert !filePath.equals(\"\") : \"filePath should not be empty\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Updates the textfile with the latest tasklist by rewriting the entire tasklist."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tasks tasklist that represents all the current tasks in the tasklist."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void updateFile(TaskList tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            FileWriter fw \u003d new FileWriter(f, false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            for (Task tk : taskList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                fw.write((tk instanceof Deadline ? \"D\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        : (tk instanceof Event ? \"E\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        : \"T\"))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        + \" | \" + (tk.getDoneStatus() ? \"    Done\" : \"Not Done\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                        + \" | \" + tk.getDescription() + System.lineSeparator());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Loads the tasklist from the textfile in the hard drive."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return an arraylist consisting of the tasks parsed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @throws FileNotFoundException exception thrown when the text file cannot be found."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            String[] details \u003d sc.nextLine().split(\"(\\\\s\\\\|\\\\s)\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            Task curTask;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            String taskType \u003d details[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            String description \u003d details[2];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                curTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                String dateTime \u003d details[3];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    curTask \u003d new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                    curTask \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            if (details[1].equals(\"    Done\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                curTask.markDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            taskList.add(curTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 90
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Contains a description of the task and the datetime for which it is due."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Deadline extends TimeframedTask {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for Deadline task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Initializes the description and due datetime."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param des description of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param by datetime for which the deadline is due."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Deadline(String des, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        super(des);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Getter for the description of the deadline task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return the string of the description of the deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return description + \" | \" + by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Updates dateTime to the new dateTime given."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param newDateTime updated dateTime."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void setDateTime(String newDateTime) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.by \u003d newDateTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the string representation of the deadline task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string consisting of the type of task (deadline), done marker, description and due date and time."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the cloned task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return cloned task with identical description and done status."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Deadline clone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Deadline task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 65
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Contains a description of the task and the datetime on which the event starts."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Event extends TimeframedTask {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the event task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Initializes the description and datetime."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param description description of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param at date and time on which the event starts."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Getter for the description of the event task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return the string of the description of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return description + \" | \" + at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Updates dateTime to the new dateTime given."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param newDateTime updated dateTime."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void setDateTime(String newDateTime) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.at \u003d newDateTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the string representation of the event."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string consisting of the type of task (event), done marker, description and due date and time."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the cloned task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return cloned task with identical description and done status."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Event clone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Event task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 65
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for a task in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Consists of the description of the task and a marker to indicate if it is done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Initializes the description and done marker for the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Task is initialized as not done by default."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param des the description of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Task(String des) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.description \u003d des;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns whether the task is done or not."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return boolean flag indicating whether the task is done or not"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Getter for the description of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return the string of the description of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Updates description to the new description given."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param newDescription updated description."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void setDescription(String newDescription) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.description \u003d newDescription;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the string representation of the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string consisting of done marker and description of the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return \"[\" + (isDone ? \u00271\u0027 : \u00270\u0027) + \"] \" + description;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the cloned task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return cloned task with identical description and done status."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Task clone() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        Task tk \u003d new Task(description);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            tk.markDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return tk;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 82
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class that represents the tasklist that holds all the tasks in Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private ArrayList\u003cTask\u003e addedItems;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Empty Constructor for the tasklist."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        addedItems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for the tasklist."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * The tasklist will be initialized with all the tasks in the given list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param ls tasklist to be initialized with."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.addedItems \u003d ls;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return int of the number of tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public int getNumOfTask() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return addedItems.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns a task given its index."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param idx index of the task to be returned."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return the task represented by its index."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Task getTaskByIndex(int idx) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return addedItems.get(idx);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the tasklist in an ArrayList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return ArrayList of the tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return addedItems;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Deletes a tast in the tasklist."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param idx index of the task to be deleted."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void deleteTaskByIdx(int idx) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        addedItems.remove(idx);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Adds a task into the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param tk task to be added into the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public void addTask(Task tk) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        addedItems.add(tk);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 75
    }
  },
  {
    "path": "src/main/java/tasks/TimeframedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class that represents tasks with a dateTime field."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "abstract public class TimeframedTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public TimeframedTask(String des) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        super(des);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Updates dateTime to the new dateTime given."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param newDateTime updated dateTime."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    abstract public void setDateTime(String newDateTime);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 19
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Contains a description of the task and the datetime for which it is due."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public ToDo(String des) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        super(des);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the string representation of the todo task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string consisting of the type of task (todo), done marker, description and due date and time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 22
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Class for the Ui (User Interaction) object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " * Handles all user input and program output to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Constructor for Ui."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Initializes the Scanner object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the successful completion message after the completion of a command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param msg completion message to be printed"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string representation of the command response"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String showResultOfCommand(String msg) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the error message whenever a error is found."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @param msg error message to be printed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string representation of the error message"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String showError(String msg) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return \"     ☹ OOPS!!! \" + msg;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * Returns the loading error whenever the text file in which Duke reads and writes from cannot"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * be opened."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     * @return string representation of loading error"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        return \"     ☹ OOPS!!! The file cannot be opened\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 51
    }
  },
  {
    "path": "src/main/resources/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "D | Not Done | complete book assignment | 12/12/2019 0800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "E |     Done | books fest | 01/01/2019 1200"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "T |     Done | src:test"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 3
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "         maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        \u003cText fx:id\u003d\"dialog\" fill\u003d\"BLACK\" text\u003d\"Label\" wrappingWidth\u003d\"280.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void testDescriptionGetter() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"Test | 12/12/2000 0800\", new Deadline(\"Test\", \"12/12/2000 0800\").getDescription());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void testStringConversion() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"[D][0] Test (by: 12/12/2000 0800)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                new Deadline(\"Test\", \"12/12/2000 0800\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 18
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void testDescriptionGetter() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"Test | 12/12/2000 0800\", new Event(\"Test\", \"12/12/2000 0800\").getDescription());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void testStringConversion() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"[E][0] Test (at: 12/12/2000 0800)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "                new Event(\"Test\", \"12/12/2000 0800\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 18
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "        assertEquals(\"[T][0] Test\", (new ToDo(\"Test\")).toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shaoyi1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shaoyi1997": 12
    }
  }
]
