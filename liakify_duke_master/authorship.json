[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liakify"
        },
        "content": "test {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liakify"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liakify"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liakify"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liakify"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liakify"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liakify"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 22,
      "-": 15
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "        ui.dukePrint(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 9
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 7
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Creates a DeadlineCommand with a given description and deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param by Task deadline date in format of \"dd/mm/yyyy hhmm\" e.g. \"31/12/2019 2359\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "    DeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidDateException, IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "        Task t \u003d new DeadlineTask(description, by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "        String result \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": "        result +\u003d \"  \" + t + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "        result +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": "        ui.dukePrint(result);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liakify"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 30
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Creates a DeadlineTask with a given description and deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param by Task deadline date in format of \"dd/mm/yyyy hhmm\" e.g. \"31/12/2019 2359\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "    DeadlineTask(String description, String by) throws DukeInvalidDateException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "            this.by \u003d format.parse(by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "            throw new DukeInvalidDateException(by);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return \"D\\t\" + (this.isDone ? \"1\\t\" : \"0\\t\") + this.description + \"\\t\" + dateFormat.format(this.by) + \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 33
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private int deleteIdx;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Creates a DeleteCommand with a given task index to delete."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param idx Index of task to be deleted"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "    DeleteCommand(int idx) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.deleteIdx \u003d idx;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidTaskException, IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "        if (deleteIdx \u003c 1 || deleteIdx \u003e tasks.size()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "            throw new DukeInvalidTaskException(deleteIdx);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "        String result \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "        result +\u003d \"  \" + tasks.remove(deleteIdx) + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "        result +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": "        ui.dukePrint(result);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 28
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private int doneIdx;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Creates a DoneCommand with a given task index to be marked as done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param idx Index of task to be marked as done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "    DoneCommand(int idx) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.doneIdx \u003d idx;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidTaskException, IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "        if (doneIdx \u003c 1 || doneIdx \u003e tasks.size()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "            throw new DukeInvalidTaskException(doneIdx);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "        tasks.get(doneIdx).markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "        ui.dukePrint(\"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.get(doneIdx));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Creates an instance of Duke, a task manager."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param filePath location of the text file to read/write tasks to the hard disk."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "     *                 If the file exists, it will load tasks from it and write to it whenever users update the tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "     *                 If the file does not exist, it will create the file to write to."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": "            ui.dukePrint(e.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Initiates the program loop where users can key in commands to interact with Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public void start() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liakify"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liakify"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liakify"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liakify"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liakify"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liakify"
        },
        "content": "                input \u003d ui.getInputLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liakify"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liakify"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liakify"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liakify"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liakify"
        },
        "content": "                ui.dukePrint(e.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liakify"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liakify"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liakify"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 42,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeEmptyDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class DukeEmptyDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    DukeEmptyDateException(String cmd) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return oops + \"The date of a \" + cmd + \" cannot be empty.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 12
    }
  },
  {
    "path": "src/main/java/DukeEmptyDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class DukeEmptyDescException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    DukeEmptyDescException(String cmd) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.cmd \u003d cmd;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return oops + \"The description of a \" + cmd + \" cannot be empty.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 12
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "    protected String oops \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return oops + \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 8
    }
  },
  {
    "path": "src/main/java/DukeInvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class DukeInvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    DukeInvalidDateException(String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return this.date + \" is an invalid date format!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 12
    }
  },
  {
    "path": "src/main/java/DukeInvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class DukeInvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    DukeInvalidTaskException(String task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "    DukeInvalidTaskException(int task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.task \u003d Integer.toString(task);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return oops + \"Task \" + task + \" does not exist.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 16
    }
  },
  {
    "path": "src/main/java/DukeInvalidTaskFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class DukeInvalidTaskFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    DukeInvalidTaskFormatException(String task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return oops + \"\\\"\" + task + \"\\\" is an invalid task format.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 12
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Creates an EventCommand with a given description and event date."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param at Event date in format of \"dd/mm/yyyy hhmm\" e.g. \"31/12/2019 2359\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "    EventCommand(String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidDateException, IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "        Task t \u003d new EventTask(description, at);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "        String result \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": "        result +\u003d \"  \" + t + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "        result +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": "        ui.dukePrint(result);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liakify"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 30
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Creates an EventTask with a given description and event date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param at Event date in format of \"dd/mm/yyyy hhmm\" e.g. \"31/12/2019 2359\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "    EventTask(String description, String at) throws DukeInvalidDateException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "            this.at \u003d format.parse(at);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "            throw new DukeInvalidDateException(at);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return \"E\\t\" + (this.isDone ? \"1\\t\" : \"0\\t\") + this.description + \"\\t\" + dateFormat.format(this.at) + \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 33
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "    String string;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Creates a FindCommand object to find tasks that contain a given string."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param string The string to search for"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "    FindCommand(String string) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.string \u003d string;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "        String result \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "            if (tasks.get(i).getDescription().contains(string)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "                result +\u003d \"\\n\" + i + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "        ui.dukePrint(result);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 25
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "        ui.dukePrint(tasks.toString());"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 9
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "        Duke duke \u003d new Duke(\"./data/duketasks.txt\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "        duke.start();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 8
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * A method that parses user input lines and converts them into executable Command objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param s A String that contains the user input line"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @return A Command object representing the command as parsed"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "    static Command parse(String s) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "        String[] arg \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "        switch (arg[0]) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "            if (arg.length \u003c 2 || arg[1].trim().length() \u003c 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "                throw new DukeEmptyDescException(arg[0]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "            int idx;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "                idx \u003d Integer.parseInt(arg[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": "                throw new DukeInvalidTaskException(arg[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": "            if (arg[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liakify"
        },
        "content": "                return new DoneCommand(idx);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liakify"
        },
        "content": "            } else { //Command must be \"delete\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liakify"
        },
        "content": "                return new DeleteCommand(idx);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liakify"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liakify"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liakify"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liakify"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liakify"
        },
        "content": "            if (arg.length \u003c 2 || arg[1].trim().length() \u003c 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liakify"
        },
        "content": "                throw new DukeEmptyDescException(arg[0]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liakify"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liakify"
        },
        "content": "            Task t;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liakify"
        },
        "content": "            if (arg[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liakify"
        },
        "content": "                return new TodoCommand(arg[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liakify"
        },
        "content": "            } else if (arg[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liakify"
        },
        "content": "                String[] temp \u003d arg[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liakify"
        },
        "content": "                if (temp.length \u003c 2 || temp[1].trim().length() \u003c 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liakify"
        },
        "content": "                    throw new DukeEmptyDateException(arg[0]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liakify"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liakify"
        },
        "content": "                return new DeadlineCommand(temp[0], temp[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liakify"
        },
        "content": "            } else { //Task must be \"event\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liakify"
        },
        "content": "                String[] temp \u003d arg[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liakify"
        },
        "content": "                if (temp.length \u003c 2 || temp[1].trim().length() \u003c 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liakify"
        },
        "content": "                    throw new DukeEmptyDateException(arg[0]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liakify"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liakify"
        },
        "content": "                return new EventCommand(temp[0], temp[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liakify"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liakify"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liakify"
        },
        "content": "            if (arg.length \u003c 2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liakify"
        },
        "content": "                throw new DukeEmptyDescException(arg[0]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liakify"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liakify"
        },
        "content": "            return new FindCommand(arg[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liakify"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liakify"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 62
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private Scanner fileSc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Creates a Storage object which handles file I/O for reading/saving tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param filePath The location of the text file to be used."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "     *                 If the file does not exist, it will create the file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "    Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": "            this.fileSc \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": "            this.fileSc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liakify"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liakify"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liakify"
        },
        "content": "        while (fileSc.hasNextLine()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liakify"
        },
        "content": "            tasks.add(parseFileLine(fileSc.nextLine()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liakify"
        },
        "content": "    void writeToFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liakify"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liakify"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liakify"
        },
        "content": "            bw.write(tasks.get(i).toFileString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liakify"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private Task parseFileLine(String line) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liakify"
        },
        "content": "        String[] arg \u003d line.split(\"\\t\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liakify"
        },
        "content": "        if (arg.length \u003c 3) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liakify"
        },
        "content": "            throw new DukeInvalidTaskFormatException(line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liakify"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liakify"
        },
        "content": "        switch (arg[0]) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liakify"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liakify"
        },
        "content": "            t \u003d new TodoTask(arg[2]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liakify"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liakify"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liakify"
        },
        "content": "            if (arg.length \u003c 4) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liakify"
        },
        "content": "                throw new DukeInvalidTaskFormatException(line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liakify"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liakify"
        },
        "content": "            t \u003d new DeadlineTask(arg[2], arg[3]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liakify"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liakify"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liakify"
        },
        "content": "            if (arg.length \u003c 4) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liakify"
        },
        "content": "                throw new DukeInvalidTaskFormatException(line);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liakify"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liakify"
        },
        "content": "            t \u003d new EventTask(arg[2], arg[3]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liakify"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liakify"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liakify"
        },
        "content": "            throw new DukeInvalidTaskFormatException(line);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liakify"
        },
        "content": "        if (arg[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liakify"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 75
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    protected SimpleDateFormat dateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Task constructor used by classes extending Task. Cannot be called directly as Task is abstract."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.dateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public abstract String toFileString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 36
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Creates a TaskList which stores Tasks. A TaskList with n items indexes tasks from 1 to n."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param tasks An ArrayList of tasks which will be used to populate the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "    int size() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "    boolean add(Task t) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return tasks.add(t);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "    Task get(int idx) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return tasks.get(idx - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": "    Task remove(int idx) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return tasks.remove(idx - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liakify"
        },
        "content": "        String result \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liakify"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liakify"
        },
        "content": "            result +\u003d \"\\n\" + (i + 1) +  \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 38
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    TodoCommand(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "        Task t \u003d new TodoTask(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "        String result \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "        result +\u003d \"  \" + t + \"\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "        result +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "        ui.dukePrint(result);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 23
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Creates a TodoTask with a given description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "    TodoTask(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return \"T\\t\" + (this.isDone ? \"1\\t\" : \"0\\t\") + this.description + \"\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    private final String line \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "     * Creates a Ui object that handles user interaction in the console."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liakify"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liakify"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liakify"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liakify"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liakify"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liakify"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liakify"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liakify"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liakify"
        },
        "content": "        dukePrint(\"Hello from\\n\" + logo + \"\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liakify"
        },
        "content": "    void dukePrint(String s) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liakify"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liakify"
        },
        "content": "        String[] arr \u003d s.split(\"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liakify"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liakify"
        },
        "content": "            System.out.println(\"\\t \" + arr[i]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liakify"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liakify"
        },
        "content": "        System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liakify"
        },
        "content": "    String getInputLine() throws NoSuchElementException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liakify"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 36
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liakify"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liakify"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liakify"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liakify"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liakify"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liakify"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liakify"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liakify"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liakify"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liakify": 10
    }
  }
]
