[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import misc.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import misc.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import misc.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private ExceptionHandler exceptionHandler;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private Duke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        this.exceptionHandler \u003d new ExceptionHandler();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        this.storage \u003d new Storage(\"data\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        TaskList taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            taskList \u003d new TaskList(storage.readSaveFile(), storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            taskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        if (!taskList.hasTask()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            ui.welcome();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            ui.welcomeBack();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                taskList.listAllTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                exceptionHandler.showDukeError(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String instruction \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        while (!instruction.equals(\"bye\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                parser.parseInstruction(instruction, taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                exceptionHandler.showParseDateTimeError();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                Ui.showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } catch (VoidDukeCommand e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                exceptionHandler.showVoidDukeCommandError();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                Ui.showLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } catch (IncorrectDukeCommand e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                exceptionHandler.showDukeCommandEvaluationError(e);       "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                Ui.showLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } catch (InvalidDukeCommand e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                exceptionHandler.showUnknownDukeCommandError();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                Ui.showLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                exceptionHandler.showDukeIOError();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                Ui.showLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                exceptionHandler.showDukeError(e);   "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                Ui.showLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            instruction \u003d sc.nextLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 83,
      "-": 2
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 9
    }
  },
  {
    "path": "src/main/java/exception/ExceptionHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import misc.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public class ExceptionHandler {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void showParseDateTimeError() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String errorMessage \u003d Ui.spaces(5) + \"Unable to parse Date \u0026 Time of task!\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                + Ui.spaces(5) + \"Please follow the following format for Date \u0026 Time:\\n\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                + Ui.spaces(7) + \"- Date: \u0027dd/mm/yy\u0027 e.g. 10/02/19 (10 Feb 2019)\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                + Ui.spaces(7) + \"- Time: \u0027hhmm\u0027 (24-hr format) e.g. 0730 (07:30AM)\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void showDukeCommandEvaluationError(IncorrectDukeCommand e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String errorMessage \u003d String.format(\"%sLooks like the above Duke Command has failed. That\u0027s because...\\n\\n%s\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                Ui.spaces(5), Ui.spaces(5) + e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void showUnknownDukeCommandError() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String errorMessage \u003d Ui.spaces(5) + \"I\u0027m sorry, but I don\u0027t know what that means... \\u2639\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void showVoidDukeCommandError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String errorMessage \u003d Ui.spaces(5) + \"I can\u0027t do anything if you don\u0027t tell me what to do... \\ud83d\\ude2d\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void showDukeIOError() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String errorMessage \u003d Ui.spaces(5) + \"File could not be read/saved.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void showDukeError(DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 43
    }
  },
  {
    "path": "src/main/java/exception/IncorrectDukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public class IncorrectDukeCommand extends IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public IncorrectDukeCommand(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 9
    }
  },
  {
    "path": "src/main/java/exception/InvalidDukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import misc.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public class InvalidDukeCommand extends IllegalArgumentException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public InvalidDukeCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        super(Ui.spaces(5) + \"I\u0027m sorry, but I don\u0027t know what that means... \\u2639\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 11
    }
  },
  {
    "path": "src/main/java/exception/VoidDukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public class VoidDukeCommand extends NoSuchElementException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public VoidDukeCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        super(\"     I can\u0027t do anything if you don\u0027t tell me what to do... \\ud83d\\ude2d\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 11
    }
  },
  {
    "path": "src/main/java/misc/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import exception.IncorrectDukeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import exception.InvalidDukeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import exception.VoidDukeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    String writeTaskAsText(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        int isDoneStatus \u003d task.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            return String.format(\"T : %d : %s\", isDoneStatus, task.description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            return String.format(\"D : %d : %s : %s\", isDoneStatus, task.description,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    ((Deadline)task).unformattedDateTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            return String.format(\"E : %d : %s : %s\", isDoneStatus, task.description,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    ((Event)task).unformattedDateTime);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    Task readTextAsTask(String stringTask) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String[] taskContents \u003d stringTask.split(\" : \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String taskTag \u003d taskContents[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        boolean isDone \u003d taskContents[1].equals(\"1\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String taskDetails \u003d taskContents[2];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String dateTime;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Task outputTask;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        switch (taskTag) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            outputTask \u003d new ToDo(taskDetails, isDone);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            dateTime \u003d taskContents[3];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            outputTask \u003d new Deadline(taskDetails, dateTime, isDone);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            dateTime \u003d taskContents[3];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            outputTask \u003d new Event(taskDetails, dateTime, isDone);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            outputTask \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        return outputTask;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public String convertStringToTime(String stringDate, String taskType) throws DateTimeParseException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String convertedTime;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            DateTimeFormatter deadlineInputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HHmm\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(stringDate, deadlineInputFormatter);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            DateTimeFormatter deadlineOutputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mma\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            convertedTime \u003d deadlineDateTime.format(deadlineOutputFormatter);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            String[] dateTime \u003d stringDate.split(\" \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            if (dateTime.length !\u003d 2) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                throw new IncorrectDukeCommand(\"The Date or Time is missing!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            String eventDate \u003d dateTime[0];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            String eventTime \u003d dateTime[1];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            DateTimeFormatter eventDateInputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            DateTimeFormatter eventDateOutputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            LocalDate eventDateLDT \u003d LocalDate.parse(eventDate, eventDateInputFormatter);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            String dateOutput \u003d eventDateLDT.format(eventDateOutputFormatter);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            if (!eventTime.contains(\"-\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                String errorMessage \u003d \"You seem to be missing the Start/End time of your event!\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        + Ui.spaces(5) + \"Please follow this format for an task.Event: \u0027dd/mm/yy hhmm-hhmm\u0027\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                throw new IncorrectDukeCommand(errorMessage);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            String[] timeStartEnd \u003d eventTime.split(\"-\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            String startTime \u003d timeStartEnd[0];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            String endTime \u003d timeStartEnd[1];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            DateTimeFormatter eventTimeInputFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            DateTimeFormatter eventTimeOutputFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            LocalTime startTimeLDT \u003d LocalTime.parse(startTime, eventTimeInputFormatter);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            LocalTime endTimeLDT \u003d LocalTime.parse(endTime, eventTimeInputFormatter);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            String startTimeOutput \u003d startTimeLDT.format(eventTimeOutputFormatter);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            String endTimeOutput \u003d endTimeLDT.format(eventTimeOutputFormatter);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            convertedTime \u003d String.format(\"%s %s to %s\", dateOutput, startTimeOutput, endTimeOutput);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            convertedTime \u003d null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        } "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        return convertedTime;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void parseInstruction(String instruction, TaskList taskList) throws VoidDukeCommand,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            IncorrectDukeCommand, InvalidDukeCommand, IOException, DukeException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(Ui.HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Scanner userInput \u003d new Scanner(instruction);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        if (userInput.hasNext()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            command \u003d userInput.next();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            userInput.close();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            throw new VoidDukeCommand();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String errorMessage \u003d null;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            if (userInput.hasNext()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                errorMessage \u003d \"The command \\\"list\\\" should not have anything after!\\n\""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        + Ui.spaces(5) + \"Please remove any additional words!\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                taskList.listAllTasks();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            if (userInput.hasNext()) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                errorMessage \u003d \"The command \\\"bye\\\" should not have anything after!\\n\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        + Ui.spaces(5) + \"Do you really intend to quit?\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                userInput.close();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            int taskNumberDone;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            if (userInput.hasNextInt()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                taskNumberDone \u003d userInput.nextInt();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                if (taskNumberDone \u003c\u003d 0) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    errorMessage \u003d String.format(\"%sNumber cannot be negative!\", Ui.spaces(5));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                } else if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    errorMessage \u003d String.format(\"%sYou don\u0027t have any tasks yet!\", Ui.spaces(5));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                } else if (taskNumberDone \u003e taskList.size()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    errorMessage \u003d String.format(\"%sYou don\u0027t have that many tasks!\", Ui.spaces(5));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    taskList.markTaskAsDone(taskNumberDone - 1);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            int taskNumberDelete;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            if (userInput.hasNextInt()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                taskNumberDelete \u003d userInput.nextInt();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                if (taskNumberDelete \u003c\u003d 0) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    errorMessage \u003d String.format(\"%sNumber cannot be negative!\", Ui.spaces(5));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                } else if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    errorMessage \u003d String.format(\"%sYou don\u0027t have any tasks yet!\", Ui.spaces(5));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                } else if (taskNumberDelete \u003e taskList.size()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    errorMessage \u003d String.format(\"%sYou don\u0027t have that many tasks!\", Ui.spaces(5));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    taskList.delete(taskNumberDelete - 1);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            if (userInput.hasNext()) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                String details \u003d userInput.nextLine().strip();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                taskList.makeNewTask(details, null, \"todo\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                errorMessage \u003d \"The description of a todo cannot be empty!\";"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            if (userInput.hasNext()) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                if (instruction.contains(\" by \")) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    String[] contentDateTime \u003d userInput.nextLine().strip().split(\" by \");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    if (contentDateTime.length \u003d\u003d 0 || contentDateTime.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        errorMessage \u003d \"You are missing the details/date\u0026time of your task.Deadline!\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    } else if (contentDateTime[0].isBlank()) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        errorMessage \u003d \"The details of your deadline cannot be empty!\";"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    } else if (contentDateTime[1].isBlank()) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        errorMessage \u003d \"The date/time of your deadline cannot be empty!\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        String taskDescription \u003d contentDateTime[0].strip();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        String dateTime \u003d contentDateTime[1].strip();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        taskList.makeNewTask(taskDescription, dateTime, \"deadline\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    errorMessage \u003d \"Sorry but I can\u0027t seem to detect the due date of the deadline!\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                errorMessage \u003d \"The description of a task.Deadline cannot be empty!\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            if (userInput.hasNext()) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                if (instruction.contains(\" at \")) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    String[] contentDateTime \u003d userInput.nextLine().strip().split(\" at \");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    if (contentDateTime.length \u003d\u003d 0 || contentDateTime.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        errorMessage \u003d \"You are missing the details/date\u0026time of your task.Event!\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    } else if (contentDateTime[0].isBlank()) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        errorMessage \u003d \"The details of your task.Event cannot be empty!\";"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    } else if (contentDateTime[1].isBlank()) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        errorMessage \u003d \"The date/time of your task.Event cannot be empty!\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        String taskDescription \u003d contentDateTime[0].strip();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        String dateTime \u003d contentDateTime[1].strip();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                        taskList.makeNewTask(taskDescription, dateTime, \"event\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                    errorMessage \u003d \"Sorry but I can\u0027t seem to detect the Date \u0026 Time of the event!\";"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                errorMessage \u003d \"The description of an task.Event cannot be empty!\";"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            userInput.close();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            throw new InvalidDukeCommand();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        if (errorMessage !\u003d null) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            userInput.close();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            throw new IncorrectDukeCommand(errorMessage);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        userInput.close();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(Ui.HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 259
    }
  },
  {
    "path": "src/main/java/misc/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void addToLocalSave(Task task) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String saveFileName \u003d filePath + File.separator + \"duketasks.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(saveFileName, true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        PrintWriter printWriter \u003d new PrintWriter(fileWriter);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        printWriter.println(parser.writeTaskAsText(task));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        printWriter.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void overwriteLocalSave(ArrayList\u003cTask\u003e listOfTasks) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String saveFileName \u003d filePath + File.separator + \"duketasks.txt\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(saveFileName, false);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        PrintWriter printWriter \u003d new PrintWriter(fileWriter);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        for (Task task : listOfTasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            printWriter.println(parser.writeTaskAsText(task));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        printWriter.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public ArrayList\u003cTask\u003e readSaveFile() throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String saveFileName \u003d filePath + File.separator + \"duketasks.txt\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        File saveFile \u003d new File(saveFileName);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        ArrayList\u003cTask\u003e listOfExistingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        if (saveFile.exists()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            Scanner sc \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                String stringTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                Task task \u003d parser.readTextAsTask(stringTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                listOfExistingTasks.add(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        return listOfExistingTasks;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 66
    }
  },
  {
    "path": "src/main/java/misc/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    static final String HORIZONTAL_LINE \u003d spaces(5) + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private String dukeLogo \u003d spaces(5) + \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                + spaces(5) + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                + spaces(5) + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                + spaces(5) + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                + spaces(5) + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public static String spaces(int n) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String s \u003d \" \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        return s.repeat(n);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.print(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(dukeLogo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String welcomeMessage \u003d String.format(\"%sHello! I\u0027m Duke!\\n%sWhat can I do for you?\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                spaces(5), spaces(5));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void welcomeBack() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.print(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(dukeLogo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        String welcomeMessage \u003d String.format(\"%sHello! Welcome back!\\n\", spaces(5))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                + String.format(\"%sCarrying off from where you left behind the last time...\", spaces(5));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.printf(\"%sBye! Hope to see you again soon! \\u263A\\n\", spaces(5));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 48
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import misc.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public String unformattedDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private String formattedDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    Deadline(String desc, String dateTime) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        unformattedDateTime \u003d dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        formattedDateTime \u003d parser.convertStringToTime(dateTime, \"deadline\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public Deadline(String desc, String dateTime, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        unformattedDateTime \u003d dateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        formattedDateTime \u003d parser.convertStringToTime(dateTime, \"deadline\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", getStatusIcon(), description, formattedDateTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 29
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import misc.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public String unformattedDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private String formattedDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    Event(String desc, String dateTime) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        unformattedDateTime \u003d dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        this.formattedDateTime \u003d parser.convertStringToTime(dateTime, \"event\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public Event(String desc, String dateTime, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        unformattedDateTime \u003d dateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        this.formattedDateTime \u003d parser.convertStringToTime(dateTime, \"event\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", getStatusIcon(), description, formattedDateTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 29
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    Task(String desc) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        description \u003d desc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    Task(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        description \u003d desc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2717\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 23
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import misc.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import misc.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public boolean hasTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        return tasks.size() !\u003d 0 ;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void markTaskAsDone(int taskNumber) throws DukeException, IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        if (tasks.get(taskNumber).isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            String errorMessage \u003d Ui.spaces(5) + \"task.Task has already been marked done!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        storage.overwriteLocalSave(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        tasks.get(taskNumber).isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(Ui.spaces(5) + \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                + Ui.spaces(5) + tasks.get(taskNumber));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void listAllTasks() throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            String errorMessage \u003d Ui.spaces(5) + \"There are no task(s) to list!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(Ui.spaces(5) + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            System.out.printf(\"%s%d. %s\\n\", Ui.spaces(7), i + 1, tasks.get(i));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void makeNewTask(String description, String dateTime, String taskType) throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                task \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                task \u003d new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                task \u003d new ToDo(description);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                task \u003d null;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        storage.addToLocalSave(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.printf(\"%sGot it! I\u0027ve added this task for you \\uD83D\\uDE09\\n\", Ui.spaces(5));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.printf(\"%s%s\\n\\n\", Ui.spaces(7), task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.printf(\"%sNow you have %d task(s) in your list.\\n\", Ui.spaces(5), tasks.size());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public void delete(int taskNumber) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        Task removedTask \u003d tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        storage.overwriteLocalSave(tasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        System.out.println(Ui.spaces(5) + \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                + Ui.spaces(7) + removedTask + \"\\n\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "                + Ui.spaces(5) + String.format(\"Now you have %d task(s) in your list.\", tasks.size()));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 94
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    ToDo(String desc) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public ToDo(String desc, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        super(desc, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ning-sy210"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ning-sy210": 16
    }
  }
]
