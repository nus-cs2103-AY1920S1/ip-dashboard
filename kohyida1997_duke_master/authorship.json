[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Deadline(String description, String date){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.trim() + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    //constants for UI messages"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    final static String greet \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    final static String goodbye \u003d \"Bye. Hope to see you again!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    final static String niceAdded \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    final static String gotIt \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    final static String deleted \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    //helper function to print total number of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    private static String printNumTasks(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"Now you have \" + Task.totalTasks + \" tasks in the list.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        BufferedReader input \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(greet);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        String command \u003d input.readLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        //main program logic"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        while(!command.equals(\"bye\")){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String[] tokens \u003d command.split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            String toAdd \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                switch (tokens[0]) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        //\"list\" logic"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        int size \u003d listOfTasks.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        System.out.println(\"Here are your tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            Task curr \u003d listOfTasks.get(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(i + 1 + \".\" + curr.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        //\"done\" logic"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            if(tokens.length \u003c 2){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! Please specify task to complete\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            int toComplete \u003d Integer.parseInt(command.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            if(toComplete \u003e\u003d listOfTasks.size() || toComplete \u003c 0){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                throw new DukeException(\"OOPS! Task \" + (toComplete + 1) + \" doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            Task curr \u003d listOfTasks.get(toComplete);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            listOfTasks.get(toComplete).completeTask();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(niceAdded);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(curr.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        } catch (DukeException de){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        //\"delete\" logic"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        try{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            if(tokens.length \u003c 2){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! Please specify task to delete\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            int toDelete \u003d Integer.parseInt(command.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            if(toDelete \u003e\u003d listOfTasks.size() || toDelete \u003c 0){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                throw new DukeException(\"☹ OOPS! Task \" + (toDelete + 1) + \" doesn\u0027t exist!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                Task curr \u003d listOfTasks.get(toDelete);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                System.out.println(deleted);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                System.out.println(curr.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                listOfTasks.remove(toDelete);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                Task.totalTasks--;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                System.out.println(printNumTasks());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        } catch (DukeException de){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        //toodo logic"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            for (int j \u003d 1; j \u003c tokens.length; j++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                toAdd \u003d toAdd + tokens[j] + \" \";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            newTask \u003d new Todo(toAdd.trim());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(gotIt);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(\" \" + newTask.toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(printNumTasks());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        } catch (DukeException de) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        //\"deadline\" logic"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            String date \u003d \"\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            boolean dateFlag \u003d false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            for (int m \u003d 1; m \u003c tokens.length; m++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                if (tokens[m].equals(\"/by\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                    dateFlag \u003d true;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                    if (dateFlag \u003d\u003d false) toAdd \u003d toAdd + tokens[m] + \" \";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                    else date \u003d date + tokens[m] + \" \";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            newTask \u003d new Deadline(toAdd.trim(), date.trim());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(gotIt);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(\" \" + newTask.toString());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(printNumTasks());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        } catch (DukeException de){"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        //\"event\" logic"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            if(tokens.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            String timing \u003d \" \";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            boolean timeFlag \u003d false;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            for (int z \u003d 1; z \u003c tokens.length; z++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                if (tokens[z].equals(\"/at\")) timeFlag \u003d true;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                    if (timeFlag \u003d\u003d false) toAdd \u003d toAdd + tokens[z] + \" \";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                    else timing \u003d timing + tokens[z] + \" \";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            newTask \u003d new Event(toAdd.trim(), timing.trim());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(gotIt);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(\" \" + newTask.toString());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.out.println(printNumTasks());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        } catch (DukeException de){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                            System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        //unrecognized command"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            } catch (DukeException de){"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "                System.err.println(de.getMessage());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            //read next command"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "            command \u003d input.readLine();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        //exit program"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        System.out.println(goodbye);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 157,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    String timing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Event(String description, String timing){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timing + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 17
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public void completeTask(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 24
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        Task.totalTasks++;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kohyida1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kohyida1997": 11
    }
  }
]
