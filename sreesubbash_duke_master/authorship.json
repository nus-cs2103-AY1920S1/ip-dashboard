[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        this.by \u003d parseInput(by);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d \u0027of\u0027 MMM yyyy h:mm a\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private LocalDateTime parseInput(String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        LocalDateTime temp \u003d LocalDateTime.parse(by, formatter);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(temp);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private static TodoList todoList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Duke.serve(Saver.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (IOException | ClassNotFoundException ce) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Duke.serve(new TodoList());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private static void serve(TodoList todoList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            String move \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (move.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            todoList.action(move);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                Saver.save(todoList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 31,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        this.at \u003d parseInput(at);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private LocalDateTime parseInput(String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        LocalDateTime temp \u003d LocalDateTime.parse(at, formatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(temp);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 24
    }
  },
  {
    "path": "src/main/java/Saver.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class Saver {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public Saver() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public static void save(TodoList toSave) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        FileOutputStream fos \u003d new FileOutputStream(System.getProperty(\"user.dir\") + \"/src/main/java/notes.ser\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        oos.writeObject(toSave);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        oos.close();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public static TodoList load() throws IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        FileInputStream fis \u003d new FileInputStream(System.getProperty(\"user.dir\") + \"/src/main/java/notes.ser\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        TodoList toLoad \u003d (TodoList) ois.readObject();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        ois.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return toLoad;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 25
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private static final long serialVersionUID \u003d 42L;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 25
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 11
    }
  },
  {
    "path": "src/main/java/TodoList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "public class TodoList implements Serializable{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private List\u003cTask\u003e todos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public TodoList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        todos \u003d new LinkedList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    public void action(String move) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        List\u003cString\u003e args \u003d new LinkedList\u003c\u003e(Arrays.asList(move.split(\" \")));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        String type \u003d args.get(0);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        args.remove(0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        String remainingArgs \u003d String.join(\" \", args);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (move.equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                printList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            } else if (type.equals(\"done\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                completeTask(args);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            } else if (type.equals(\"delete\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                deleteTask(args);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                addTask(type, remainingArgs);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (DukeException de) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            System.out.println(de.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (DateTimeParseException dtpe) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            System.out.println(dtpe.getMessage() + \"\\nUse dd/MM/yyyy HHmm formatting\" );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private void addTask(String type, String task) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        Task current;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            current \u003d new ToDo(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            List\u003cString\u003e temp \u003d new LinkedList\u003c\u003e(Arrays.asList(task.split(\" /by \")));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (temp.size() !\u003d 2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Set deadline after \\\"/by\\\"\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            current \u003d new Deadline(temp.get(0), temp.get(1));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            List\u003cString\u003e temp \u003d new LinkedList\u003c\u003e(Arrays.asList(task.split(\" /at \")));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            if (temp.size() !\u003d 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Set timing after \\\"/at\\\"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            current \u003d new Event(temp.get(0), temp.get(1));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        todos.add(current);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + current"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                + \"\\nNow you have \" + todos.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private void completeTask(List\u003cString\u003e args) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            int taskNo \u003d Integer.parseInt(args.get(0)) - 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Task current \u003d todos.get(taskNo);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            current.markAsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + current);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            throw new DukeException(\"Please give correct task number\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private void deleteTask(List\u003cString\u003e args) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            int taskNo \u003d Integer.parseInt(args.get(0)) - 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            Task current \u003d todos.get(taskNo);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            todos.remove(current);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + current"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "                    + \"\\nNow you have \" + todos.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            throw new DukeException(\"Please give correct task number\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    private void printList() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        for (int i \u003d 0; i \u003c todos.size(); i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "            System.out.println((i + 1) + \". \" + todos.get(i));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sreesubbash"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sreesubbash": 100
    }
  }
]
