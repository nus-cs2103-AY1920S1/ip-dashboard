[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 22,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Constructs a Duke instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param filepath refers to where items should be kept in memory."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    Duke(String filepath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            c.execute(ui, storage, taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Starts a Duke instance."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param args takes in arguments."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        new Duke(\"src/data/duke.txt\").run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 41,
      "-": 4
    }
  },
  {
    "path": "src/main/java/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.TaskBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.TaskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class AddDeadlineCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public AddDeadlineCommand(String taskName, Date deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void execute(Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Task temp \u003d new TaskBuilder().type(TaskType.DEADLINE).description(taskName).deadline(deadline).build();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        taskList.addTask(temp);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(taskList.getArr());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 27
    }
  },
  {
    "path": "src/main/java/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.TaskBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.TaskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class AddEventCommand implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public AddEventCommand(String taskName, Date date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void execute(Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Task temp \u003d new TaskBuilder().type(TaskType.EVENT).description(taskName).timeframe(date).build();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        taskList.addTask(temp);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 26
    }
  },
  {
    "path": "src/main/java/commands/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.TaskBuilder;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.TaskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class AddTodoCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void execute(Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Task temp \u003d new TaskBuilder().type(TaskType.TODO).description(description).build();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        taskList.addTask(temp);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(taskList.getArr());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 23
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param ui       refers to the Ui instance. This object provides access to the Scanner instance."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param storage  refers to the Storage instance. This object allows any commands that edit the Tasklist to save"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *                 changes onto file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param taskList refers to the TaskList instance. This object allows the list of items to change."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void execute(Ui ui, Storage storage, TaskList taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * All commands will return false with the exception of EndSessionCommand. Used to determine if Ui should remain"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * active."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return whether Duke should continue staying active or terminate."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    default boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 25
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void execute(Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        // IndexOutOfBoundsException is caught in components.TaskList; removed can be Task | null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Task removed \u003d taskList.deleteTask(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        // null \u003d\u003e IndexOutOfBoundsException was caught"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (removed !\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.print(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.print(removed.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.getArr();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.print(\"Now you have \" + tasks.size() +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } // else case handled in components.TaskList : user will be alerted to the IndexOutOfBoundsException."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 31
    }
  },
  {
    "path": "src/main/java/commands/DisplayTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class DisplayTasksCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void execute(Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        taskList.displayList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 12
    }
  },
  {
    "path": "src/main/java/commands/DoneTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class DoneTaskCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public DoneTaskCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void execute(Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        //IndexOutOfBoundsException is handled in the components.TaskList class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        taskList.markAsDone(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 19
    }
  },
  {
    "path": "src/main/java/commands/EndSessionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class EndSessionCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void execute(Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ui.closeUi();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 17
    }
  },
  {
    "path": "src/main/java/commands/FindTasksByKeywordCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class FindTasksByKeywordCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public FindTasksByKeywordCommand(String keyword) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void execute(Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        taskList.findTaskByKeywordAndPrintList(keyword);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 19
    }
  },
  {
    "path": "src/main/java/commands/PrintUserInputErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class PrintUserInputErrorCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public PrintUserInputErrorCommand(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void execute(Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Ui.printErr(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 18
    }
  },
  {
    "path": "src/main/java/commands/UnrecognisedInputCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class UnrecognisedInputCommand implements Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void execute(Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ui.printErr(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 17
    }
  },
  {
    "path": "src/main/java/components/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.text.ParsePosition;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Returns a date from a string."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static Date parseAsDate(String str) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return dateFormatter.parse(str, new ParsePosition(0));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Scanner sc \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        String firstWord \u003d sc.next();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        switch (firstWord) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    String keyword \u003d sc.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new FindTasksByKeywordCommand(keyword);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new PrintUserInputErrorCommand(\"OOPS!!! You must give me a keyword to perform a search.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    String taskName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new AddTodoCommand(taskName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new PrintUserInputErrorCommand(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                String deadline \u003d \"\", taskName \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                if (sc.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    while (sc.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        String s \u003d sc.next();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        if (s.equals(\"/by\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            deadline \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            taskName \u003d taskName.stripTrailing();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            taskName +\u003d s + \" \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    if (!deadline.isBlank()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        Date date \u003d parseAsDate(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        return new AddDeadlineCommand(taskName,date);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        return new PrintUserInputErrorCommand(\"OOPS!!! The deadline cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new PrintUserInputErrorCommand(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                taskName \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                String timeFrame \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                if (sc.hasNext()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    while (sc.hasNext()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        String s \u003d sc.next();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        if (s.equals(\"/at\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            timeFrame \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            taskName \u003d taskName.stripTrailing();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                            taskName +\u003d s + \" \";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    if (!timeFrame.isBlank()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        Date date \u003d parseAsDate(timeFrame);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        return new AddEventCommand(taskName,date);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                        return new PrintUserInputErrorCommand(\"OOPS!!! The time frame of an event cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new PrintUserInputErrorCommand(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    int index \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new DeleteCommand(index);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new PrintUserInputErrorCommand(\"OOPS!!! You need to enter a natural number.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new EndSessionCommand();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new DisplayTasksCommand();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    int index \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new DoneTaskCommand(index);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                } catch (InputMismatchException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                    return new PrintUserInputErrorCommand(\"OOPS!!! You need to enter a natural number.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new UnrecognisedInputCommand();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 108
    }
  },
  {
    "path": "src/main/java/components/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Overwrites entire file with current items in Arr, using \u0027***\u0027 as a separator."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        //First delete the old file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (file.exists()) file.delete();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        //Write the objects to file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try (FileOutputStream fout \u003d new FileOutputStream(filepath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "             ObjectOutputStream oos \u003d new ObjectOutputStream(fout)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            //First piece of data is how many objects there are"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            oos.writeInt(arr.size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            //Subsequently, all the tasks are written in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            for (Task task : arr) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                oos.writeObject(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            System.err.println(\"I could not save your updated list to my file :( Please try again.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Returns an arraylist of Tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return an empty ArrayList if file has not been created or is empty, and the ArrayList of existing Tasks otherwise."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try (FileInputStream fi \u003d new FileInputStream(new File(filepath));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "             ObjectInputStream oi \u003d new ObjectInputStream(fi)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            //numObjects refers to how many Tasks were stored in this file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            int numObjects \u003d oi.readInt();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            for (int i \u003d 0; i \u003c numObjects; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                Task t \u003d (Task) oi.readObject();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.printErr(\"I could not find the file I saved your data to! I\u0027ll load an empty list first.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.printErr(\"I had an issue reading your items from memory! I\u0027ll load an empty list first.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.printErr(\"Your data does not resemble any format I know. I\u0027ll load an empty list first.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 66
    }
  },
  {
    "path": "src/main/java/components/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private ArrayList\u003cTask\u003e arr;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public ArrayList\u003cTask\u003e getArr() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Initialises a Tasklist with files loaded from storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.arr \u003d arr;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Adds a task to arraylist. Does not save changes to file. Use Storage to commit changes."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param task refers to the task to add."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Ui.print(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Ui.print(task.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        arr.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Ui.print(\"Now you have \" + arr.size() + (arr.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Returns the tasks.Task that was removed, or null in the case of an IndexOutOfBoundsException."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param index of the task to be removed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @return the tasks.Task or null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return arr.remove(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.printErr(\"Oops! You have entered a number out of range.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Switch a cross to a tick to mark a task as done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param index of the task to be marked as done."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            arr.get(index).markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.print(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.print(arr.get(index).toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.printErr(\"Oops! You have entered a number out of range.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Display all tasks on the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void displayList() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (arr.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.print(\"You have no tasks in your list!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Ui.print(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        printListOnly();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private void printListOnly() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        for (Task t : arr) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.print(++i + \".\" + t);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void findTaskByKeywordAndPrintList(String str) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        for (Task task : arr) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            if (task.getDescription().contains(str)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                temp.add(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        if (temp.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            Ui.print(\"I could not find any matching tasks with this keyword: \" + ANSI_YELLOW + str + ANSI_RESET);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Ui.print(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        printListOnly();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 98
    }
  },
  {
    "path": "src/main/java/components/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static final String ANSI_BLUE \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Prints a string in blue."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * @param str is the string to print."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public static void print(String str) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        System.out.println(ANSI_BLUE + str + ANSI_RESET);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Prints an error message in red."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public static void printErr(String str) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        System.out.println(ANSI_RED + str + ANSI_RESET);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        print(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     * Closes the scanner."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void closeUi() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        print(\"_______________________________________________\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 52
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    Deadline(String description, Date deadline) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 17
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Date timeframe;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Event(String description, Date timeframe) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.timeframe \u003d timeframe;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + timeframe + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 17
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " * A tasks.Task class representing a task with a isDone component."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private static final long serialVersionUID \u003d 42L;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String getDescription() { return description; }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 38
    }
  },
  {
    "path": "src/main/java/tasks/TaskBuilder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "// TODO: 29/8/2019 Validation of required fields before building "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class TaskBuilder {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private Date timeframe;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskBuilder type(TaskType t) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        this.type \u003d t;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskBuilder description(String d) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        description \u003d d;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskBuilder deadline(Date d) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        deadline \u003d d;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public TaskBuilder timeframe(Date t) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        timeframe \u003d t;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public Task build() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new ToDo(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new Event(description, timeframe);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "                return new Deadline(description, deadline);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 44
    }
  },
  {
    "path": "src/main/java/tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 5
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 13
    }
  },
  {
    "path": "src/test/java/EndSessionCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import commands.EndSessionCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class EndSessionCommandTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        EndSessionCommand c \u003d new EndSessionCommand();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        assertTrue(c.isExit());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 12
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import components.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    private String testPath \u003d \"src/test/data/test.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void save() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Storage storage \u003d new Storage(testPath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        storage.save(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    void load() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        //filepath is purposely wrong to test error handling."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        Storage storage \u003d new Storage(testPath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "        assertEquals(0, storage.load().size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 24
    }
  },
  {
    "path": "text-ui-test/actual.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "added: e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "added: a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "1. e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "2. a"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 7
    }
  },
  {
    "path": "text-ui-test/expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "added: e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "added: a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "1. e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "2. a"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "a"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "del ACTUAL.txt"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "timothyleong97"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "timothyleong97": 21
    }
  }
]
