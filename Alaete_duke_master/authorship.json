[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "compileJava.options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 35,
      "-": 18
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# Bear User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Bear is an interactive, error-resistant and lightweight task manager with a clean and minimalist interface that helps you to get things done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Bear supports seamless data storage and transfer between devices so you can access your task list from anywhere. Changes are automatically saved. "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Commands are **case-insensitive**."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "### `todo` - Add a To-Do"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "A To-Do is a task without any date/time attached to it."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "You can use this command to add a To-Do to your task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Command format: `todo \u003ctodo description\u003e`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "`todo revise CS2103T content`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "[T][✗] revise CS2103T content"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "### `event` - Add an Event"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "An Event is a task that starts at a specific time."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "You can use this command to add an Event to your task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Command format: `event \u003cevent description\u003e /at \u003cevent date/time\u003e`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Bear understands and automatically converts dates and times in the format `DD/MM/YYYY HHMM`."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "`event attend CS2103T lecture /at 20/9/2019 1600`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "[E][✗] attend CS2103T lecture (at: 20th of September 2019, 4:00 PM)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "### `deadline` - Add a Deadline"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "A Deadline is a task that needs to be done before a specific date/time."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "You can use this command to add a Deadline to your task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Command format: `deadline \u003cdeadline description\u003e /by \u003cdeadline date/time\u003e`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Bear understands and automatically converts dates and times in the format `DD/MM/YYYY HHMM`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "`deadline finish CS2103T iP /by 17/9/2019 2359`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": "[D][✗] finish CS2103T iP (by: 17th of September 2019, 11:59 PM)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alaete"
        },
        "content": "You can use this command to mark a task in your task list as done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Command format: `done \u003ctask index\u003e`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Alaete"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Alaete"
        },
        "content": "[T][✓] revise CS2103T content"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alaete"
        },
        "content": "### `delete` - Delete a task"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Alaete"
        },
        "content": "You can use this command to delete a task from your task list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Command format: `delete \u003ctask index\u003e`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Alaete"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Alaete"
        },
        "content": "[D][✗] finish CS2103T iP (by: 17th of September 2019, 11:59 PM)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Alaete"
        },
        "content": "### `list` - List all tasks"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Alaete"
        },
        "content": "You can use this command to list all tasks in your task list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Alaete"
        },
        "content": "The generated list will be in chronological order."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Alaete"
        },
        "content": "1.[T][✓] revise CS2103T content"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Alaete"
        },
        "content": "2.[E][✗] attend CS2103T lecture (at: 20th of September 2019, 4:00 PM)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Alaete"
        },
        "content": "### `find` - Find a task"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Alaete"
        },
        "content": "You can use this command to find a task by searching for a keyword."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Search results are **case-insensitive**."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Command format: `find \u003csearch keyword\u003e`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Alaete"
        },
        "content": "`find CS2103T`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Alaete"
        },
        "content": "1.[T][✓] revise CS2103T content"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Alaete"
        },
        "content": "2.[E][✗] attend CS2103T lecture (at: 20th of September 2019, 4:00 PM)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Alaete"
        },
        "content": "### `load` - Load tasks"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Alaete"
        },
        "content": "You can use this command to load a task list from an existing data source."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Alaete"
        },
        "content": "File names are **case-insensitive**."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Command format: `load \u003cfile name\u003e`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Alaete"
        },
        "content": "`load myBear.txt`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Alaete"
        },
        "content": "Your saved data has been successfully loaded from myBear.txt."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Alaete"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Alaete"
        },
        "content": "If no data source is loaded, your task list is automatically saved in `bear.txt`."
      }
    ],
    "authorContributionMap": {
      "Alaete": 142,
      "-": 20
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "T | 1 | watch a movie"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": "D | 0 | 2106 lab | 25 september 1400"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "E | 1 | 2101 op1 | 16 september 1000 "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "D | 0 | 4248 wa2 | 20th of September 2019, 9:00 AM"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "T | 1 | watch w5 webcasts"
      }
    ],
    "authorContributionMap": {
      "Alaete": 5
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Alaete": 17,
      "-": 83
    }
  },
  {
    "path": "src/main/java/duke/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates date \u0026 time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private final static String[] SUFFIXES \u003d { \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \"th\", \"th\", \"st\" };"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Parses date and time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param input  Date and time to be parsed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Date and time in the indicated output format if input format is a match, and original input otherwise."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static String parse(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        Date dateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        SimpleDateFormat inputFormat \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        SimpleDateFormat outputFormat \u003d new SimpleDateFormat(\"MMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            dateTime \u003d inputFormat.parse(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return input;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        SimpleDateFormat dayOfMonth \u003d new SimpleDateFormat(\"d\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        int day \u003d Integer.parseInt(dayOfMonth.format(dateTime));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String dayWithSuffix \u003d day + SUFFIXES[day];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String formattedDateTime \u003d outputFormat.format(dateTime);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        output \u003d dayWithSuffix + \" of \" + formattedDateTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 38
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a DialogBox object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param text  User input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param img  Image."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return DialogBox of user input and image."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        setSpacing(10);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(getChildren());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Creates a DialogBox from user input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param text  User input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param img  Image of user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return DialogBox of user input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Creates a DialogBox from Duke\u0027s response."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param text  Duke\u0027s response."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param img  Image of Duke."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return DialogBox of Duke\u0027s response."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 84
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a chat bot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private static final String DEFAULT_FILE \u003d \"bear.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a Duke object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        storage \u003d new Storage(DEFAULT_FILE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Attempts to load data file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param filePath  Path to saved data file on hard disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void load(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Gets Duke\u0027s response to user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param input  User input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Duke\u0027s response."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return command.execute(this, storage, taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 47,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a generic exception for the Duke project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a DukeException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param message  Message describing the exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 15
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Main method. Initiates a full run of a chat bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param args The command line arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 17
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Shows the GUI."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param stage  Stage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            stage.setTitle(\"Bear\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(new Duke());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.concurrent.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private Image userImage \u003d new Image(getClass().getResourceAsStream(\"/images/Whale.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private Image dukeImage \u003d new Image(getClass().getResourceAsStream(\"/images/Bear.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Initiates the chat bot window."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Initiates a run of a chat bot."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param d Duke object to be run."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                DialogBox.getDukeDialog(Ui.showWelcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        );"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        );"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Exits the chat bot with a 1000 millisecond delay."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        Task\u003cVoid\u003e delay \u003d new Task\u003cVoid\u003e() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            protected Void call() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    Thread.sleep(1000);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        };"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        delay.setOnSucceeded(event -\u003e System.exit(0));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        new Thread(delay).start();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 84
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a parser."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Parses user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param input  User input received by the chat bot."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Command described by user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If description of todo is empty or input format is invalid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String lowercaseInput \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        if (lowercaseInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (lowercaseInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (lowercaseInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            int doneIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return new DoneCommand(doneIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (lowercaseInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            int deleteIndex \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (lowercaseInput.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            input \u003d input.replaceFirst(\"(?i)^find\", \"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            String keyword \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (lowercaseInput.startsWith(\"load\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            input \u003d input.replaceFirst(\"(?i)^load\", \"\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            String filePath \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return new FileCommand(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        if (lowercaseInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            input \u003d input.replaceFirst(\"(?i)^todo\", \"\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (input.substring(input.indexOf(\" \") + 1).isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            task \u003d new ToDo(input.substring(input.indexOf(\" \") + 1));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (lowercaseInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            task \u003d new Deadline(input.substring(input.indexOf(\" \") + 1, input.indexOf(\"/\") - 1),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    DateTime.parse(input.substring(input.indexOf(\"/\") + 4)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (lowercaseInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            task \u003d new Event(input.substring(input.indexOf(\" \") + 1, input.indexOf(\"/\") - 1),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    DateTime.parse(input.substring(input.indexOf(\"/\") + 4)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return new AddCommand(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 59
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a file pointer."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a Storage object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param filePath  Path to saved data file on hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Loads data from hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Data from hard disk in the form of a List of Tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If file is not found."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            FileReader fileReader \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                taskList.add(Task.convertStringToTask(line));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            throw new DukeException(\"File not found.\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            throw new DukeException(\"IO Exception.\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Updates data in hard disk."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list with modifications from user interaction via the chat bot."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If file cannot be updated."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void update(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            for (Iterator iterator \u003d taskList.iterator(); iterator.hasNext(); index++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                assert (index \u003e\u003d 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                if (index \u003e 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    bufferedWriter.write(\"\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task \u003d (Task) iterator.next();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                bufferedWriter.write(task.convertTaskToString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            throw new DukeException(\"Failed to update file.\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 80
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a TaskList object with saved data on hard disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list data retrieved from hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a TaskList object with no prior data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Lists tasks in task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Tasks in task list as a string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        StringBuilder tasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        for (Iterator iterator \u003d taskList.iterator(); iterator.hasNext(); index++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            assert (index \u003e\u003d 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            task \u003d index + \".\" + iterator.next() + \"\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            tasks.append(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert (tasks.length() \u003e\u003d 0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Retrieves task at a given index."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param index  Index of task to be retrieved."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Task at given index."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert (index \u003c\u003d taskList.size());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Removes task at a given index."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param index  Index of task to be removed."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Task at given index."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert (index \u003c\u003d taskList.size());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return taskList.remove(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Returns size of task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Size of the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Adds task to task list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param task  Task to be added."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert (taskList.contains(task));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Retrieves list of tasks containing keyword."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param keyword  Keyword to be searched for."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return List of tasks containing keyword as a String."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String find(String keyword) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String lowercaseKeyword \u003d keyword.toLowerCase();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        StringBuilder tasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String task;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        for (Iterator iterator \u003d taskList.iterator(); iterator.hasNext(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            assert (i \u003e\u003d 1 \u0026\u0026 index \u003e\u003d 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task current \u003d (Task) iterator.next();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (current.containsKeyword(lowercaseKeyword)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task \u003d index + \".\" + current + \"\\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                tasks.append(task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Returns iterator of task list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Iterator of the task list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Iterator iterator() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return taskList.iterator();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 122
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a user interface."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs tasks in task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList   Task list to be output."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static String showTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return (\"Your list is empty.\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert (taskList.size() \u003e 0);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (\"Here are the tasks in your list:\\n\" + taskList.list());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs message indicating that action of marking a task as done was a success."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param task   Task marked as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static String showDoneMessage(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (\"Nice! I\u0027ve marked this task as done:\\n\" + task + \"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs message indicating that action of deleting a task was a success."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param size  Size of task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param task   Task deleted."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static String showDeleteMessage(int size, Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        if (size \u003d\u003d 0 || size \u003e 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return (\"Noted. I\u0027ve removed this task: \\n\" + task + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    + size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert (size \u003d\u003d 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (\"Noted. I\u0027ve removed this task: \\n\" + task + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                + size + \" task in the list.\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs message indicating that action of adding a task was a success."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param size  Size of task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param task   Task added."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static String showAddMessage(int size, Task task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return (\"Got it. I\u0027ve added this task: \\n\" + task + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                    + size + \" task in the list.\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert (size \u003e 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (\"Got it. I\u0027ve added this task: \\n\" + task + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                + size + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs welcome message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static String showWelcomeMessage() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (\"Hello from Bear.\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs goodbye message."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static String showByeMessage() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs message indicating that action of searching for a keyword was a success, and results of that search."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list to be searched."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param keyword   Keyword to be searched for."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static String showFindMessage(TaskList taskList, String keyword) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (\"Here are the matching tasks in your list:\\n\" + taskList.find(keyword));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs message describing an error."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param error  Description of error to be output."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static String showError(String error) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return error;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Outputs message indicating that action of loading saved data file was a success."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param filePath  Path to saved data file on hard disk."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static String showLoadMessage(String filePath) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (\"Your saved data has been successfully loaded from \" + filePath + \".\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 104
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to add task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected final Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs an AddCommand object with a task to be added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param task  Task to be added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Executes the command, adding the task to the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param duke Chat bot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Result of command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If data file pointed to by storage cannot be updated."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String execute(Duke duke, Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        storage.update(taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert(!isBye());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return Ui.showAddMessage(taskList.size(), task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 42
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to end chat bot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs an ByeCommand object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param duke Chat bot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Result of command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String execute(Duke duke, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert(isBye());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return Ui.showByeMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Flags command as a command to end chat bot."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return True, indicating that command is indeed a command to end chat bot."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 42
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs an Command object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    Command() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Abstract method to execute command, to be overridden by child classes."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param duke Chat bot."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Result of command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If data file pointed to by storage cannot be updated."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public abstract String execute(Duke duke, Storage storage, TaskList taskList) throws DukeException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Flags command as not a command to end chat bot."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return False, indicating that command is not a command to end chat bot."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Alaete": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to delete task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected final int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a DeleteCommand object with index of task to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param index  Index of task to be deleted."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Executes the command, deleting the task associated with the index from the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param duke Chat bot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Result of command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If data file pointed to by storage cannot be updated."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String execute(Duke duke, Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        Task task \u003d taskList.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        storage.update(taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert(!isBye());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return Ui.showDeleteMessage(taskList.size(), task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 42
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to mark a task as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected final int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a DoneCommand object with index of task to be marked as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param index  Index of task to be marked as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Executes the command, marking the task associated with the index as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param duke Chat bot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Result of command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @throws DukeException  If data file pointed to by storage cannot be updated."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String execute(Duke duke, Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        Task task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        storage.update(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert(!isBye());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return Ui.showDoneMessage(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 43
    }
  },
  {
    "path": "src/main/java/duke/command/FileCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to change file path."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class FileCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected final String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a FileCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param filePath  Path to saved data file on hard disk."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public FileCommand(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Executes the command, loading saved data file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param duke Chat bot."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Result of command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String execute(Duke duke, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            duke.load(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            assert(!isBye());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert(!isBye());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return Ui.showLoadMessage(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 40
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to find tasks in the task list containing keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected final String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a FindCommand object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param keyword  Keyword to be searched for."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Executes the command, listing all tasks in the task list containing the keyword."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param duke Chat bot."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Result of command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String execute(Duke duke, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert(!isBye());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return Ui.showFindMessage(taskList, keyword);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a command to list all tasks in the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a ListCommand object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Executes the command, listing all tasks in the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param duke Chat bot."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param storage  Data file of chat bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param taskList  Task list of chat bot."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Result of command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String execute(Duke duke, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert(!isBye());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return Ui.showTaskList(taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a Deadline object with description, and date and time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param description  Description of deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param by  Date and time of deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the deadline task to String format to write to hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Deadline task in String format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String convertTaskToString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"D | %s | %s | %s\", getStatus(), description, by);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the deadline task to String format for output."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Deadline task in String format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates an event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs an Event object with description, and date and time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param description  Description of event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param at  Date and time of event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the event task to String format to write to hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Event task in String format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String convertTaskToString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"E | %s | %s | %s\", getStatus(), description, at);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the event task to String format for output."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Event task in String format."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a Task object with description, marked as not done by default."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param description  Description of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Retrieves the status icon representing status of task completion."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Status icon representing status of task completion."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Retrieves a number representing status of task completion."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Number representing status of task completion."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); // return 1 or 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Checks whether task description contains keyword."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return True if task description contains keyword, false otherwise."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String lowerDescription \u003d description.toLowerCase();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return lowerDescription.contains(keyword);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the task in String format to a Task object."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return The task as a Task object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public static Task convertStringToTask(String line) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        String[] parameters \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        // To-Do"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        if (line.charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task task \u003d new ToDo(parameters[2].trim());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (parameters[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (line.charAt(0) \u003d\u003d \u0027D\u0027) { // Deadline"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task task \u003d new Deadline(parameters[2].trim(), parameters[3].trim());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (parameters[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        } else if (line.charAt(0) \u003d\u003d \u0027E\u0027) { // Event"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            Task task \u003d new Event(parameters[2].trim(), parameters[3].trim());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            if (parameters[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assert false;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the task to String format to write to hard disk."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Task in String format."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String convertTaskToString() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"- | %s | %s\", getStatus(), description);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the task to String format for output."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return Task in String format."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 106
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": " * Encapsulates a to-do task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Constructs a To-Do object with description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @param description  Description of to-do task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the to-do task to String format to write to hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return To-do task in String format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String convertTaskToString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return String.format(\"T | %s | %s\", getStatus(), description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * Converts the to-do task to String format for output."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     * @return To-do task in String format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 35
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"  minHeight\u003d\"99.0\" prefWidth\u003d\"400.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \u003cURL value\u003d\"@DialogBox.css\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Alaete": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"SEND\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        \u003cURL value\u003d\"@MainWindow.css\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Alaete": 24
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void testList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assertEquals(\"\", (new TaskList()).list());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 12
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void testConvertTaskToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assertEquals(\"T | 0 | homework\", (new ToDo(\"homework\").convertTaskToString()));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "        assertEquals(\"[T][✘] homework\", (new ToDo(\"homework\").toString()));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Alaete": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Alaete"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Alaete"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Alaete"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Alaete"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Alaete"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Alaete"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Alaete"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Alaete"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Alaete"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Alaete"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Alaete"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Alaete"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Alaete"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Alaete"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Alaete"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Alaete"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Alaete"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Alaete"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Alaete"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Alaete": 34
    }
  }
]
